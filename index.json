[{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections.html","title":"FSharpx.Collections","content":"Array \nByteString \nDList \nDeque \nDictionary \nExceptions \nHeap \nInterfaces \nLazyList \nList \nLiterals \nMap \nNameValueCollection \nNonEmptyList \nPersistentHashMap \nPersistentVector \nPriorityQueue \nQueue \nRandomAccessList \nResizeArray \nSeq \nByteString \nDList\u003C\u0027T\u003E \nDeque\u003C\u0027T\u003E \nHeap\u003C\u0027T\u003E \nHeapData\u003C\u0027T\u003E \nIPriorityQueue\u003C\u0027T\u003E \nLazyList\u003C\u0027T\u003E \nNonEmptyList\u003C\u0027T\u003E \nPersistentHashMap\u003C\u0027T, \u0027S\u003E \nPersistentVector\u003C\u0027T\u003E \nQueue\u003C\u0027T\u003E \nRandomAccessList\u003C\u0027T\u003E"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental.html","title":"FSharpx.Collections.Experimental","content":"AltBinaryRandomAccessList \nBKTree \nBankersDeque \nBankersQueue \nBatchedDeque \nBatchedQueue \nBinaryRandomAccessList \nBinaryRoseTree \nBinaryTreeZipper \nBinomialHeap \nBlockResizeArray \nBootstrappedQueue \nBottomUpMergeSort \nChampHashMap \nDList \nDeque \nEagerRoseTree \nFlatList \nHeapPriorityQueue \nHoodMelvilleQueue \nImplicitQueue \nIndexedRoseTree \nIntMap \nLeftistHeap \nListZipper \nPairingHeap \nPhysicistQueue \nRealTimeDeque \nRealTimeQueue \nRingBuffer \nRoseTree \nSkewBinaryRandomAccessList \nSkewBinomialHeap \nAltBinRndAccList\u003C\u0027T\u003E \nBKTree\u003C\u0027T\u003E \nBankersDeque\u003C\u0027T\u003E \nBankersQueue\u003C\u0027T\u003E \nBatchedDeque\u003C\u0027T\u003E \nBatchedQueue\u003C\u0027T\u003E \nBinaryRandomAccessList\u003C\u0027T\u003E \nBinaryRoseTree\u003C\u0027T\u003E \nBinaryTree\u003C\u0027T\u003E \nBinaryTreeZipper\u003C\u0027T\u003E \nBinomialHeap\u003C\u0027T\u003E \nBinomialTree\u003C\u0027T\u003E \nBlockResizeArray\u003C\u0027T\u003E \nBootstrappedQueue\u003C\u0027T\u003E \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E \nDList\u003C\u0027T\u003E \nDeque\u003C\u0027T\u003E \nDigit\u003C\u0027T\u003E \nEagerRoseTree\u003C\u0027T\u003E \nFlatList\u003C\u0027T\u003E \nHoodMelvilleQueue\u003C\u0027T\u003E \nImplicitQueue\u003C\u0027T\u003E \nIncompatibleMerge \nIndexedRoseTree\u003C\u0027T\u003E \nIntMap\u003C\u0027T\u003E \nKeyValuePair\u003C\u0027TKey, \u0027TValue\u003E \nLeftistHeap\u003C\u0027T\u003E \nListZipper\u003C\u0027T\u003E \nNonEmptyBootstrappedQueue\u003C\u0027T\u003E \nPairingHeap\u003C\u0027T\u003E \nPatternMatchedBug \nPhysicistQueue\u003C\u0027T\u003E \nRealTimeDeque\u003C\u0027T\u003E \nRealTimeQueue\u003C\u0027T\u003E \nRingBuffer\u003C\u0027T\u003E \nRoseTree \nRoseTree\u003C\u0027T\u003E \nRotationState\u003C\u0027T\u003E \nSkewBinaryRandomAccessList\u003C\u0027T\u003E \n\u0027T SkewBinomialHeap \nTimeseries\u003C\u0027T\u003E \nTreeBRAL\u003C\u0027T\u003E \nTreeBRALDigit\u003C\u0027T\u003E \nTreeDirection \nTreeSBRAL\u003C\u0027T\u003E"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable.html","title":"FSharpx.Collections.Mutable","content":"CircularBuffer\u003C\u0027T\u003E"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged.html","title":"FSharpx.Collections.Tagged","content":"MapTree \nSetTree \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E \nMap\u003C\u0027Key, \u0027T\u003E \nMapTree\u003C\u0027Key, \u0027T\u003E \nSet\u003C\u0027T, \u0027ComparerTag\u003E \nSet\u003C\u0027T\u003E \nSetTree\u003C\u0027T\u003E"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html","title":"Array","content":"Array \n\n Extensions for F#\u0027s Array module.\n \nArray.nth \nnth \nArray.setAt \nsetAt \nArray.copyTo \ncopyTo \nArray.ofTuple \nofTuple \nArray.toTuple \ntoTuple \nArray.centeredWindow \ncenteredWindow \nArray.centralMovingAverage \ncentralMovingAverage \nArray.centralMovingAverageOfOption \ncentralMovingAverageOfOption \nArray.catOptions \ncatOptions \nArray.choice1s \nchoice1s \nArray.choice2s \nchoice2s \nArray.partitionChoices \npartitionChoices \nArray.equalsWith \nequalsWith"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#nth","title":"Array.nth","content":"Array.nth \nnth \n\n nth item of array\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#setAt","title":"Array.setAt","content":"Array.setAt \nsetAt \n\n set the ith item of array\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#copyTo","title":"Array.copyTo","content":"Array.copyTo \ncopyTo \n\n copy items from one array to another\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#ofTuple","title":"Array.ofTuple","content":"Array.ofTuple \nofTuple \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#toTuple","title":"Array.toTuple","content":"Array.toTuple \ntoTuple \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#centeredWindow","title":"Array.centeredWindow","content":"Array.centeredWindow \ncenteredWindow \n\n Returns an array of sliding windows of data drawn from the source array.\n Each window contains the n elements surrounding the current element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#centralMovingAverage","title":"Array.centralMovingAverage","content":"Array.centralMovingAverage \ncentralMovingAverage \n\n Calculates the central moving average for the array using n elements either side\n of the point where the mean is being calculated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#centralMovingAverageOfOption","title":"Array.centralMovingAverageOfOption","content":"Array.centralMovingAverageOfOption \ncentralMovingAverageOfOption \n\n Calculates the central moving average for the array of optional elements using n\n elements either side of the point where the mean is being calculated. If any of\n the optional elements in the averaging window are None then the average itself\n is None.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#catOptions","title":"Array.catOptions","content":"Array.catOptions \ncatOptions \n\n The catOptions function takes a list of Options and returns an array of all the Some values.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#choice1s","title":"Array.choice1s","content":"Array.choice1s \nchoice1s \n\n Extracts from an array of Choice all the Choice1Of2 elements. All the Choice1Of2 elements are extracted in order.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#choice2s","title":"Array.choice2s","content":"Array.choice2s \nchoice2s \n\n Extracts from an array of Choice all the Choice2Of2 elements. All the Choice2Of2 elements are extracted in order.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#partitionChoices","title":"Array.partitionChoices","content":"Array.partitionChoices \npartitionChoices \n\n Partitions an array of Choice into two arrays. All the Choice1Of2 elements are extracted, in order, to the first component of the output. Similarly the Choice2Of2 elements are extracted to the second component of the output.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-array.html#equalsWith","title":"Array.equalsWith","content":"Array.equalsWith \nequalsWith \n\n Compares two arrays for equality using the given comparison function, element by element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html","title":"ByteString","content":"ByteString \n \nByteString.empty \nempty \nByteString.singleton \nsingleton \nByteString.create \ncreate \nByteString.findIndex \nfindIndex \nByteString.ofArraySegment \nofArraySegment \nByteString.ofSeq \nofSeq \nByteString.ofList \nofList \nByteString.ofString \nofString \nByteString.toArray \ntoArray \nByteString.toSeq \ntoSeq \nByteString.toList \ntoList \nByteString.toString \ntoString \nByteString.isEmpty \nisEmpty \nByteString.length \nlength \nByteString.index \nindex \nByteString.head \nhead \nByteString.tail \ntail \nByteString.cons \ncons \nByteString.append \nappend \nByteString.fold \nfold \nByteString.split \nsplit \nByteString.span \nspan \nByteString.splitAt \nsplitAt \nByteString.skip \nskip \nByteString.skipWhile \nskipWhile \nByteString.skipUntil \nskipUntil \nByteString.take \ntake \nByteString.takeWhile \ntakeWhile \nByteString.takeUntil \ntakeUntil \nByteString.( |BS| ) \n( |BS| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#empty","title":"ByteString.empty","content":"ByteString.empty \nempty \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#singleton","title":"ByteString.singleton","content":"ByteString.singleton \nsingleton \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#create","title":"ByteString.create","content":"ByteString.create \ncreate \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#findIndex","title":"ByteString.findIndex","content":"ByteString.findIndex \nfindIndex \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#ofArraySegment","title":"ByteString.ofArraySegment","content":"ByteString.ofArraySegment \nofArraySegment \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#ofSeq","title":"ByteString.ofSeq","content":"ByteString.ofSeq \nofSeq \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#ofList","title":"ByteString.ofList","content":"ByteString.ofList \nofList \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#ofString","title":"ByteString.ofString","content":"ByteString.ofString \nofString \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#toArray","title":"ByteString.toArray","content":"ByteString.toArray \ntoArray \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#toSeq","title":"ByteString.toSeq","content":"ByteString.toSeq \ntoSeq \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#toList","title":"ByteString.toList","content":"ByteString.toList \ntoList \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#toString","title":"ByteString.toString","content":"ByteString.toString \ntoString \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#isEmpty","title":"ByteString.isEmpty","content":"ByteString.isEmpty \nisEmpty \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#length","title":"ByteString.length","content":"ByteString.length \nlength \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#index","title":"ByteString.index","content":"ByteString.index \nindex \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#head","title":"ByteString.head","content":"ByteString.head \nhead \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#tail","title":"ByteString.tail","content":"ByteString.tail \ntail \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#cons","title":"ByteString.cons","content":"ByteString.cons \ncons \n\n cons uses Buffer.SetByte and Buffer.BlockCopy for efficient array operations.\n Please note that a new array is created and both the head and tail are copied in,\n disregarding any additional bytes in the original tail array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#append","title":"ByteString.append","content":"ByteString.append \nappend \n\n append uses Buffer.BlockCopy for efficient array operations.\n Please note that a new array is created and both arrays are copied in,\n disregarding any additional bytes in the original, underlying arrays.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#fold","title":"ByteString.fold","content":"ByteString.fold \nfold \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#split","title":"ByteString.split","content":"ByteString.split \nsplit \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#span","title":"ByteString.span","content":"ByteString.span \nspan \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#splitAt","title":"ByteString.splitAt","content":"ByteString.splitAt \nsplitAt \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#skip","title":"ByteString.skip","content":"ByteString.skip \nskip \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#skipWhile","title":"ByteString.skipWhile","content":"ByteString.skipWhile \nskipWhile \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#skipUntil","title":"ByteString.skipUntil","content":"ByteString.skipUntil \nskipUntil \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#take","title":"ByteString.take","content":"ByteString.take \ntake \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#takeWhile","title":"ByteString.takeWhile","content":"ByteString.takeWhile \ntakeWhile \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#takeUntil","title":"ByteString.takeUntil","content":"ByteString.takeUntil \ntakeUntil \n\n needs .fsi file\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestringmodule.html#( |BS| )","title":"ByteString.( |BS| )","content":"ByteString.( |BS| ) \n( |BS| ) \n\n An active pattern for conveniently retrieving the properties of a ByteString.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html","title":"DList","content":"DList \n \nDList.append \nappend \nDList.cons \ncons \nDList.empty \nempty \nDList.foldBack \nfoldBack \nDList.fold \nfold \nDList.head \nhead \nDList.tryHead \ntryHead \nDList.isEmpty \nisEmpty \nDList.length \nlength \nDList.singleton \nsingleton \nDList.conj \nconj \nDList.tail \ntail \nDList.tryTail \ntryTail \nDList.uncons \nuncons \nDList.tryUncons \ntryUncons \nDList.ofSeq \nofSeq \nDList.toList \ntoList \nDList.toSeq \ntoSeq \nDList.pairwise \npairwise \nDList.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#append","title":"DList.append","content":"DList.append \nappend \n\nO(1). Returns a new DList of two lists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#cons","title":"DList.cons","content":"DList.cons \ncons \n\nO(1). Returns a new DList with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#empty","title":"DList.empty","content":"DList.empty \nempty \n\nO(1). Returns DList of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#foldBack","title":"DList.foldBack","content":"DList.foldBack \nfoldBack \n\nO(n). Fold walks the DList using constant stack space. Implementation is from Norman Ramsey.\n See http://stackoverflow.com/questions/5324623/functional-o1-append-and-on-iteration-from-first-element-list-data-structure/5334068#5334068\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#fold","title":"DList.fold","content":"DList.fold \nfold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#head","title":"DList.head","content":"DList.head \nhead \n\nO(log n). Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#tryHead","title":"DList.tryHead","content":"DList.tryHead \ntryHead \n\nO(log n). Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#isEmpty","title":"DList.isEmpty","content":"DList.isEmpty \nisEmpty \n\nO(1). Returns true if the DList has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#length","title":"DList.length","content":"DList.length \nlength \n\nO(1). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#singleton","title":"DList.singleton","content":"DList.singleton \nsingleton \n\nO(1). Returns DList of one elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#conj","title":"DList.conj","content":"DList.conj \nconj \n\nO(1). Returns a new DList with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#tail","title":"DList.tail","content":"DList.tail \ntail \n\nO(log n). Returns a new DList of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#tryTail","title":"DList.tryTail","content":"DList.tryTail \ntryTail \n\nO(log n). Returns option DList of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#uncons","title":"DList.uncons","content":"DList.uncons \nuncons \n\nO(log n). Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#tryUncons","title":"DList.tryUncons","content":"DList.tryUncons \ntryUncons \n\nO(log n). Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#ofSeq","title":"DList.ofSeq","content":"DList.ofSeq \nofSeq \n\nO(n). Returns a DList of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#toList","title":"DList.toList","content":"DList.toList \ntoList \n\nO(n). Returns a list of the DList elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#toSeq","title":"DList.toSeq","content":"DList.toSeq \ntoSeq \n\nO(n). Returns a seq of the DList elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#pairwise","title":"DList.pairwise","content":"DList.pairwise \npairwise \n\nO(n). Returns a pairwise DList of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist.html#( |Cons|Nil| )","title":"DList.( |Cons|Nil| )","content":"DList.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html","title":"Deque","content":"Deque \n \nDeque.conj \nconj \nDeque.cons \ncons \nDeque.empty \nempty \nDeque.fold \nfold \nDeque.foldBack \nfoldBack \nDeque.head \nhead \nDeque.tryHead \ntryHead \nDeque.initial \ninitial \nDeque.tryInitial \ntryInitial \nDeque.isEmpty \nisEmpty \nDeque.last \nlast \nDeque.tryLast \ntryLast \nDeque.length \nlength \nDeque.ofCatLists \nofCatLists \nDeque.ofList \nofList \nDeque.ofSeq \nofSeq \nDeque.rev \nrev \nDeque.singleton \nsingleton \nDeque.tail \ntail \nDeque.tryTail \ntryTail \nDeque.unconj \nunconj \nDeque.tryUnconj \ntryUnconj \nDeque.uncons \nuncons \nDeque.toSeq \ntoSeq \nDeque.tryUncons \ntryUncons \nDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \nDeque.( |Conj|Nil| ) \n( |Conj|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#conj","title":"Deque.conj","content":"Deque.conj \nconj \n\nO(1). Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#cons","title":"Deque.cons","content":"Deque.cons \ncons \n\nO(1). Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#empty","title":"Deque.empty","content":"Deque.empty \nempty \n\nO(1). Returns deque of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#fold","title":"Deque.fold","content":"Deque.fold \nfold \n\nO(n). Applies a function to each element of the deque, threading an accumulator argument through the computation, left to right\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#foldBack","title":"Deque.foldBack","content":"Deque.foldBack \nfoldBack \n\nO(n). Applies a function to each element of the deque, threading an accumulator argument through the computation, right to left\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#head","title":"Deque.head","content":"Deque.head \nhead \n\nO(1) amortized, O(n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#tryHead","title":"Deque.tryHead","content":"Deque.tryHead \ntryHead \n\nO(1) amortized, O(n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#initial","title":"Deque.initial","content":"Deque.initial \ninitial \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#tryInitial","title":"Deque.tryInitial","content":"Deque.tryInitial \ntryInitial \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#isEmpty","title":"Deque.isEmpty","content":"Deque.isEmpty \nisEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#last","title":"Deque.last","content":"Deque.last \nlast \n\nO(1) amortized, O(n), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#tryLast","title":"Deque.tryLast","content":"Deque.tryLast \ntryLast \n\nO(1) amortized, O(n), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#length","title":"Deque.length","content":"Deque.length \nlength \n\nO(1). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#ofCatLists","title":"Deque.ofCatLists","content":"Deque.ofCatLists \nofCatLists \n\nO(n), worst case. Returns a deque of the two lists concatenated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#ofList","title":"Deque.ofList","content":"Deque.ofList \nofList \n\nO(n), worst case. Returns a deque of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#ofSeq","title":"Deque.ofSeq","content":"Deque.ofSeq \nofSeq \n\nO(n), worst case. Returns a deque of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#rev","title":"Deque.rev","content":"Deque.rev \nrev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#singleton","title":"Deque.singleton","content":"Deque.singleton \nsingleton \n\nO(1). Returns a deque of one element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#tail","title":"Deque.tail","content":"Deque.tail \ntail \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#tryTail","title":"Deque.tryTail","content":"Deque.tryTail \ntryTail \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#unconj","title":"Deque.unconj","content":"Deque.unconj \nunconj \n\nO(1) amortized, O(n), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#tryUnconj","title":"Deque.tryUnconj","content":"Deque.tryUnconj \ntryUnconj \n\nO(1) amortized, O(n), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#uncons","title":"Deque.uncons","content":"Deque.uncons \nuncons \n\nO(1) amortized, O(n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#toSeq","title":"Deque.toSeq","content":"Deque.toSeq \ntoSeq \n\nO(n). Views the given deque as a sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#tryUncons","title":"Deque.tryUncons","content":"Deque.tryUncons \ntryUncons \n\nO(1) amortized, O(n), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#( |Cons|Nil| )","title":"Deque.( |Cons|Nil| )","content":"Deque.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque.html#( |Conj|Nil| )","title":"Deque.( |Conj|Nil| )","content":"Deque.( |Conj|Nil| ) \n( |Conj|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dictionary.html","title":"Dictionary","content":"Dictionary \n\n Extensions for System.Collections.Generic.Dictionary.\n \nDictionary.tryFind \ntryFind"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dictionary.html#tryFind","title":"Dictionary.tryFind","content":"Dictionary.tryFind \ntryFind \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-exceptions.html","title":"Exceptions","content":"Exceptions \n \nExceptions.Empty \nEmpty \nExceptions.OutOfBounds \nOutOfBounds \nExceptions.KeyNotFound \nKeyNotFound"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-exceptions.html#Empty","title":"Exceptions.Empty","content":"Exceptions.Empty \nEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-exceptions.html#OutOfBounds","title":"Exceptions.OutOfBounds","content":"Exceptions.OutOfBounds \nOutOfBounds \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-exceptions.html#KeyNotFound","title":"Exceptions.KeyNotFound","content":"Exceptions.KeyNotFound \nKeyNotFound \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html","title":"Heap","content":"Heap \n \nHeap.empty \nempty \nHeap.head \nhead \nHeap.tryHead \ntryHead \nHeap.insert \ninsert \nHeap.isEmpty \nisEmpty \nHeap.isDescending \nisDescending \nHeap.length \nlength \nHeap.merge \nmerge \nHeap.tryMerge \ntryMerge \nHeap.ofSeq \nofSeq \nHeap.rev \nrev \nHeap.tail \ntail \nHeap.tryTail \ntryTail \nHeap.toSeq \ntoSeq \nHeap.uncons \nuncons \nHeap.tryUncons \ntryUncons \nHeap.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#empty","title":"Heap.empty","content":"Heap.empty \nempty \n\nO(1). Returns a empty heap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#head","title":"Heap.head","content":"Heap.head \nhead \n\nO(1) worst case. Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#tryHead","title":"Heap.tryHead","content":"Heap.tryHead \ntryHead \n\nO(1) worst case. Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#insert","title":"Heap.insert","content":"Heap.insert \ninsert \n\nO(log n) amortized time. Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#isEmpty","title":"Heap.isEmpty","content":"Heap.isEmpty \nisEmpty \n\nO(1). Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#isDescending","title":"Heap.isDescending","content":"Heap.isDescending \nisDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#length","title":"Heap.length","content":"Heap.length \nlength \n\nO(n). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#merge","title":"Heap.merge","content":"Heap.merge \nmerge \n\nO(log n) amortized time. Returns heap from merging two heaps, both must have same descending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#tryMerge","title":"Heap.tryMerge","content":"Heap.tryMerge \ntryMerge \n\nO(log n) amortized time. Returns heap option from merging two heaps.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#ofSeq","title":"Heap.ofSeq","content":"Heap.ofSeq \nofSeq \n\nO(n log n). Returns heap, bool isDescending, from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#rev","title":"Heap.rev","content":"Heap.rev \nrev \n\nO(n). Returns heap reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#tail","title":"Heap.tail","content":"Heap.tail \ntail \n\nO(log n) amortized time. Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#tryTail","title":"Heap.tryTail","content":"Heap.tryTail \ntryTail \n\nO(log n) amortized time. Returns option heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#toSeq","title":"Heap.toSeq","content":"Heap.toSeq \ntoSeq \n\nO(n). Views the given heap as a sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#uncons","title":"Heap.uncons","content":"Heap.uncons \nuncons \n\nO(log n) amortized time. Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#tryUncons","title":"Heap.tryUncons","content":"Heap.tryUncons \ntryUncons \n\nO(log n) amortized time. Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap.html#( |Cons|Nil| )","title":"Heap.( |Cons|Nil| )","content":"Heap.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces.html","title":"Interfaces","content":"Interfaces \n \nInterfaces.IDeque\u003C\u0027T\u003E \nIDeque\u003C\u0027T\u003E \nInterfaces.IHeap\u003C\u0027T\u003E \nIHeap\u003C\u0027T\u003E \nInterfaces.IHeap\u003C\u0027c, \u0027T\u003E \nIHeap\u003C\u0027c, \u0027T\u003E \nInterfaces.IPersistentVector\u003C\u0027T\u003E \nIPersistentVector\u003C\u0027T\u003E \nInterfaces.IQueue\u003C\u0027T\u003E \nIQueue\u003C\u0027T\u003E \nInterfaces.IRandomAccessList\u003C\u0027T\u003E \nIRandomAccessList\u003C\u0027T\u003E"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html","title":"IDeque\u003C\u0027T\u003E","content":"IDeque\u003C\u0027T\u003E \n \nIDeque\u003C\u0027T\u003E.Cons \nCons \nIDeque\u003C\u0027T\u003E.Lookup \nLookup \nIDeque\u003C\u0027T\u003E.Remove \nRemove \nIDeque\u003C\u0027T\u003E.Snoc \nSnoc \nIDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \nIDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \nIDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nIDeque\u003C\u0027T\u003E.Update \nUpdate \nIDeque\u003C\u0027T\u003E.Count \nCount \nIDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \nIDeque\u003C\u0027T\u003E.Head \nHead \nIDeque\u003C\u0027T\u003E.Rev \nRev \nIDeque\u003C\u0027T\u003E.Length \nLength \nIDeque\u003C\u0027T\u003E.Last \nLast \nIDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nIDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \nIDeque\u003C\u0027T\u003E.Tail \nTail \nIDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \nIDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nIDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nIDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \nIDeque\u003C\u0027T\u003E.Uncons \nUncons \nIDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \nIDeque\u003C\u0027T\u003E.Init \nInit"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Cons","title":"IDeque\u003C\u0027T\u003E.Cons","content":"IDeque\u003C\u0027T\u003E.Cons \nCons \n\nreturns a new deque with the element added to the beginning\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Lookup","title":"IDeque\u003C\u0027T\u003E.Lookup","content":"IDeque\u003C\u0027T\u003E.Lookup \nLookup \n\nreturns element by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Remove","title":"IDeque\u003C\u0027T\u003E.Remove","content":"IDeque\u003C\u0027T\u003E.Remove \nRemove \n\nreturns deque with element removed by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Snoc","title":"IDeque\u003C\u0027T\u003E.Snoc","content":"IDeque\u003C\u0027T\u003E.Snoc \nSnoc \n\nreturns a new deque with the element added to the end\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryLookup","title":"IDeque\u003C\u0027T\u003E.TryLookup","content":"IDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nreturns option element by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryRemove","title":"IDeque\u003C\u0027T\u003E.TryRemove","content":"IDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryUpdate","title":"IDeque\u003C\u0027T\u003E.TryUpdate","content":"IDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nreturns option deque with element updated by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Update","title":"IDeque\u003C\u0027T\u003E.Update","content":"IDeque\u003C\u0027T\u003E.Update \nUpdate \n\nreturns deque with element updated by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Count","title":"IDeque\u003C\u0027T\u003E.Count","content":"IDeque\u003C\u0027T\u003E.Count \nCount \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryUncons","title":"IDeque\u003C\u0027T\u003E.TryUncons","content":"IDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Head","title":"IDeque\u003C\u0027T\u003E.Head","content":"IDeque\u003C\u0027T\u003E.Head \nHead \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Rev","title":"IDeque\u003C\u0027T\u003E.Rev","content":"IDeque\u003C\u0027T\u003E.Rev \nRev \n\nreturns deque reversed\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Length","title":"IDeque\u003C\u0027T\u003E.Length","content":"IDeque\u003C\u0027T\u003E.Length \nLength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Last","title":"IDeque\u003C\u0027T\u003E.Last","content":"IDeque\u003C\u0027T\u003E.Last \nLast \n\nreturns the last element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryGetHead","title":"IDeque\u003C\u0027T\u003E.TryGetHead","content":"IDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nreturns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryUnsnoc","title":"IDeque\u003C\u0027T\u003E.TryUnsnoc","content":"IDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \n\nreturns option init and the last element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Tail","title":"IDeque\u003C\u0027T\u003E.Tail","content":"IDeque\u003C\u0027T\u003E.Tail \nTail \n\nreturns a new deque of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryGetInit","title":"IDeque\u003C\u0027T\u003E.TryGetInit","content":"IDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \n\nreturns option deque of the elements before the last element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#IsEmpty","title":"IDeque\u003C\u0027T\u003E.IsEmpty","content":"IDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nreturns true if the deque has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryGetTail","title":"IDeque\u003C\u0027T\u003E.TryGetTail","content":"IDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nreturns option deque of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#TryGetLast","title":"IDeque\u003C\u0027T\u003E.TryGetLast","content":"IDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \n\nreturns option last element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Uncons","title":"IDeque\u003C\u0027T\u003E.Uncons","content":"IDeque\u003C\u0027T\u003E.Uncons \nUncons \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Unsnoc","title":"IDeque\u003C\u0027T\u003E.Unsnoc","content":"IDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \n\nreturns init and the last element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ideque-1.html#Init","title":"IDeque\u003C\u0027T\u003E.Init","content":"IDeque\u003C\u0027T\u003E.Init \nInit \n\nreturns a new deque of the elements before the last element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-1.html","title":"IHeap\u003C\u0027T\u003E","content":"IHeap\u003C\u0027T\u003E \n \nIHeap\u003C\u0027T\u003E.Count \nCount \nIHeap\u003C\u0027T\u003E.Head \nHead \nIHeap\u003C\u0027T\u003E.Length \nLength \nIHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nIHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nIHeap\u003C\u0027T\u003E.IsDescending \nIsDescending"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-1.html#Count","title":"IHeap\u003C\u0027T\u003E.Count","content":"IHeap\u003C\u0027T\u003E.Count \nCount \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-1.html#Head","title":"IHeap\u003C\u0027T\u003E.Head","content":"IHeap\u003C\u0027T\u003E.Head \nHead \n\nreturns the min or max element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-1.html#Length","title":"IHeap\u003C\u0027T\u003E.Length","content":"IHeap\u003C\u0027T\u003E.Length \nLength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-1.html#TryGetHead","title":"IHeap\u003C\u0027T\u003E.TryGetHead","content":"IHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nreturns option first min or max element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-1.html#IsEmpty","title":"IHeap\u003C\u0027T\u003E.IsEmpty","content":"IHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nreturns true if the heap has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-1.html#IsDescending","title":"IHeap\u003C\u0027T\u003E.IsDescending","content":"IHeap\u003C\u0027T\u003E.IsDescending \nIsDescending \n\nreturns true if the heap has max element at head\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html","title":"IHeap\u003C\u0027c, \u0027T\u003E","content":"IHeap\u003C\u0027c, \u0027T\u003E \n \nIHeap\u003C\u0027c, \u0027T\u003E.Insert \nInsert \nIHeap\u003C\u0027c, \u0027T\u003E.Merge \nMerge \nIHeap\u003C\u0027c, \u0027T\u003E.Tail \nTail \nIHeap\u003C\u0027c, \u0027T\u003E.TryGetTail \nTryGetTail \nIHeap\u003C\u0027c, \u0027T\u003E.TryMerge \nTryMerge \nIHeap\u003C\u0027c, \u0027T\u003E.TryUncons \nTryUncons \nIHeap\u003C\u0027c, \u0027T\u003E.Uncons \nUncons"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html#Insert","title":"IHeap\u003C\u0027c, \u0027T\u003E.Insert","content":"IHeap\u003C\u0027c, \u0027T\u003E.Insert \nInsert \n\nreturns a new heap with the element inserted\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html#Merge","title":"IHeap\u003C\u0027c, \u0027T\u003E.Merge","content":"IHeap\u003C\u0027c, \u0027T\u003E.Merge \nMerge \n\nreturns heap from merging two heaps, both must have same isDescending\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html#Tail","title":"IHeap\u003C\u0027c, \u0027T\u003E.Tail","content":"IHeap\u003C\u0027c, \u0027T\u003E.Tail \nTail \n\nreturns a new heap of the elements trailing the head\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html#TryGetTail","title":"IHeap\u003C\u0027c, \u0027T\u003E.TryGetTail","content":"IHeap\u003C\u0027c, \u0027T\u003E.TryGetTail \nTryGetTail \n\nreturns option heap of the elements trailing the head\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html#TryMerge","title":"IHeap\u003C\u0027c, \u0027T\u003E.TryMerge","content":"IHeap\u003C\u0027c, \u0027T\u003E.TryMerge \nTryMerge \n\nreturns heap option from merging two heaps\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html#TryUncons","title":"IHeap\u003C\u0027c, \u0027T\u003E.TryUncons","content":"IHeap\u003C\u0027c, \u0027T\u003E.TryUncons \nTryUncons \n\nreturns option head element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iheap-2.html#Uncons","title":"IHeap\u003C\u0027c, \u0027T\u003E.Uncons","content":"IHeap\u003C\u0027c, \u0027T\u003E.Uncons \nUncons \n\nreturns the head element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ipersistentvector-1.html","title":"IPersistentVector\u003C\u0027T\u003E","content":"IPersistentVector\u003C\u0027T\u003E \n \nIPersistentVector\u003C\u0027T\u003E.AssocN \nAssocN \nIPersistentVector\u003C\u0027T\u003E.Conj \nConj \nIPersistentVector\u003C\u0027T\u003E.Count \nCount \nIPersistentVector\u003C\u0027T\u003E.Peek \nPeek \nIPersistentVector\u003C\u0027T\u003E.Pop \nPop \nIPersistentVector\u003C\u0027T\u003E.Item \nItem"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ipersistentvector-1.html#AssocN","title":"IPersistentVector\u003C\u0027T\u003E.AssocN","content":"IPersistentVector\u003C\u0027T\u003E.AssocN \nAssocN \n\n Returns a new vector that contains the given value at the index. Note - index must be \u0026lt;= vector.Count.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ipersistentvector-1.html#Conj","title":"IPersistentVector\u003C\u0027T\u003E.Conj","content":"IPersistentVector\u003C\u0027T\u003E.Conj \nConj \n\n Returns a new vector with the element \u0027added\u0027 at the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ipersistentvector-1.html#Count","title":"IPersistentVector\u003C\u0027T\u003E.Count","content":"IPersistentVector\u003C\u0027T\u003E.Count \nCount \n\n Returns the number of items in the collection.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ipersistentvector-1.html#Peek","title":"IPersistentVector\u003C\u0027T\u003E.Peek","content":"IPersistentVector\u003C\u0027T\u003E.Peek \nPeek \n\n Returns the last element in the vector. If the vector is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ipersistentvector-1.html#Pop","title":"IPersistentVector\u003C\u0027T\u003E.Pop","content":"IPersistentVector\u003C\u0027T\u003E.Pop \nPop \n\n Returns a new vector without the last item. If the collection is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-ipersistentvector-1.html#Item","title":"IPersistentVector\u003C\u0027T\u003E.Item","content":"IPersistentVector\u003C\u0027T\u003E.Item \nItem \n\n Returns the value at the index. If the index is out of bounds it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html","title":"IQueue\u003C\u0027T\u003E","content":"IQueue\u003C\u0027T\u003E \n \nIQueue\u003C\u0027T\u003E.Count \nCount \nIQueue\u003C\u0027T\u003E.Length \nLength \nIQueue\u003C\u0027T\u003E.Snoc \nSnoc \nIQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nIQueue\u003C\u0027T\u003E.Head \nHead \nIQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nIQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \nIQueue\u003C\u0027T\u003E.Uncons \nUncons \nIQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nIQueue\u003C\u0027T\u003E.Tail \nTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#Count","title":"IQueue\u003C\u0027T\u003E.Count","content":"IQueue\u003C\u0027T\u003E.Count \nCount \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#Length","title":"IQueue\u003C\u0027T\u003E.Length","content":"IQueue\u003C\u0027T\u003E.Length \nLength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#Snoc","title":"IQueue\u003C\u0027T\u003E.Snoc","content":"IQueue\u003C\u0027T\u003E.Snoc \nSnoc \n\nreturns a new queue with the element added to the end\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#IsEmpty","title":"IQueue\u003C\u0027T\u003E.IsEmpty","content":"IQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nreturns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#Head","title":"IQueue\u003C\u0027T\u003E.Head","content":"IQueue\u003C\u0027T\u003E.Head \nHead \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#TryGetTail","title":"IQueue\u003C\u0027T\u003E.TryGetTail","content":"IQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nreturns option queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#TryUncons","title":"IQueue\u003C\u0027T\u003E.TryUncons","content":"IQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#Uncons","title":"IQueue\u003C\u0027T\u003E.Uncons","content":"IQueue\u003C\u0027T\u003E.Uncons \nUncons \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#TryGetHead","title":"IQueue\u003C\u0027T\u003E.TryGetHead","content":"IQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nreturns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-iqueue-1.html#Tail","title":"IQueue\u003C\u0027T\u003E.Tail","content":"IQueue\u003C\u0027T\u003E.Tail \nTail \n\nreturns a new queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html","title":"IRandomAccessList\u003C\u0027T\u003E","content":"IRandomAccessList\u003C\u0027T\u003E \n \nIRandomAccessList\u003C\u0027T\u003E.Cons \nCons \nIRandomAccessList\u003C\u0027T\u003E.Count \nCount \nIRandomAccessList\u003C\u0027T\u003E.Length \nLength \nIRandomAccessList\u003C\u0027T\u003E.Lookup \nLookup \nIRandomAccessList\u003C\u0027T\u003E.Rev \nRev \nIRandomAccessList\u003C\u0027T\u003E.TryLookup \nTryLookup \nIRandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nIRandomAccessList\u003C\u0027T\u003E.Update \nUpdate \nIRandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nIRandomAccessList\u003C\u0027T\u003E.Head \nHead \nIRandomAccessList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nIRandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \nIRandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \nIRandomAccessList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nIRandomAccessList\u003C\u0027T\u003E.Tail \nTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Cons","title":"IRandomAccessList\u003C\u0027T\u003E.Cons","content":"IRandomAccessList\u003C\u0027T\u003E.Cons \nCons \n\nreturns a new random access list with the element added to the beginning\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Count","title":"IRandomAccessList\u003C\u0027T\u003E.Count","content":"IRandomAccessList\u003C\u0027T\u003E.Count \nCount \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Length","title":"IRandomAccessList\u003C\u0027T\u003E.Length","content":"IRandomAccessList\u003C\u0027T\u003E.Length \nLength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Lookup","title":"IRandomAccessList\u003C\u0027T\u003E.Lookup","content":"IRandomAccessList\u003C\u0027T\u003E.Lookup \nLookup \n\nreturns element by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Rev","title":"IRandomAccessList\u003C\u0027T\u003E.Rev","content":"IRandomAccessList\u003C\u0027T\u003E.Rev \nRev \n\nreturns random access list reversed\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#TryLookup","title":"IRandomAccessList\u003C\u0027T\u003E.TryLookup","content":"IRandomAccessList\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nreturns option element by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#TryUpdate","title":"IRandomAccessList\u003C\u0027T\u003E.TryUpdate","content":"IRandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nreturns option random access list with element updated by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Update","title":"IRandomAccessList\u003C\u0027T\u003E.Update","content":"IRandomAccessList\u003C\u0027T\u003E.Update \nUpdate \n\nreturns random access list with element updated by index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#IsEmpty","title":"IRandomAccessList\u003C\u0027T\u003E.IsEmpty","content":"IRandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nreturns true if the random access list has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Head","title":"IRandomAccessList\u003C\u0027T\u003E.Head","content":"IRandomAccessList\u003C\u0027T\u003E.Head \nHead \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#TryGetTail","title":"IRandomAccessList\u003C\u0027T\u003E.TryGetTail","content":"IRandomAccessList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nreturns a option random access list of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#TryUncons","title":"IRandomAccessList\u003C\u0027T\u003E.TryUncons","content":"IRandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nreturns the option first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Uncons","title":"IRandomAccessList\u003C\u0027T\u003E.Uncons","content":"IRandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#TryGetHead","title":"IRandomAccessList\u003C\u0027T\u003E.TryGetHead","content":"IRandomAccessList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nreturns option first element \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-interfaces-irandomaccesslist-1.html#Tail","title":"IRandomAccessList\u003C\u0027T\u003E.Tail","content":"IRandomAccessList\u003C\u0027T\u003E.Tail \nTail \n\nreturns a new random access list of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html","title":"LazyList","content":"LazyList \n \nLazyList.isEmpty \nisEmpty \nLazyList.head \nhead \nLazyList.tryHead \ntryHead \nLazyList.tail \ntail \nLazyList.tryTail \ntryTail \nLazyList.uncons \nuncons \nLazyList.tryUncons \ntryUncons \nLazyList.take \ntake \nLazyList.drop \ndrop \nLazyList.tryTake \ntryTake \nLazyList.skip \nskip \nLazyList.trySkip \ntrySkip \nLazyList.fold \nfold \nLazyList.mapAccum \nmapAccum \nLazyList.tryFind \ntryFind \nLazyList.find \nfind \nLazyList.empty \nempty \nLazyList.length \nlength \nLazyList.cons \ncons \nLazyList.consDelayed \nconsDelayed \nLazyList.repeat \nrepeat \nLazyList.delayed \ndelayed \nLazyList.unfold \nunfold \nLazyList.append \nappend \nLazyList.zip \nzip \nLazyList.concat \nconcat \nLazyList.split \nsplit \nLazyList.filter \nfilter \nLazyList.iter \niter \nLazyList.scan \nscan \nLazyList.map \nmap \nLazyList.map2 \nmap2 \nLazyList.ofArray \nofArray \nLazyList.toArray \ntoArray \nLazyList.ofList \nofList \nLazyList.toList \ntoList \nLazyList.toSeq \ntoSeq \nLazyList.ofSeq \nofSeq \nLazyList.rev \nrev \nLazyList.compareWith \ncompareWith \nLazyList.equalsWith \nequalsWith \nLazyList.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#isEmpty","title":"LazyList.isEmpty","content":"LazyList.isEmpty \nisEmpty \n\nO(1). Test if a list is empty.  Forces the evaluation of\n the first element of the stream if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#head","title":"LazyList.head","content":"LazyList.head \nhead \n\nO(1). Return the first element of the list.  Forces the evaluation of\n the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#tryHead","title":"LazyList.tryHead","content":"LazyList.tryHead \ntryHead \n\nO(1). Return option the first element of the list.  Forces the evaluation of\n the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#tail","title":"LazyList.tail","content":"LazyList.tail \ntail \n\nO(1). Return the list corresponding to the remaining items in the sequence.\n Forces the evaluation of the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#tryTail","title":"LazyList.tryTail","content":"LazyList.tryTail \ntryTail \n\nO(1). Return option the list corresponding to the remaining items in the sequence.\n Forces the evaluation of the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#uncons","title":"LazyList.uncons","content":"LazyList.uncons \nuncons \n\nO(1). Returns tuple of head element and tail of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#tryUncons","title":"LazyList.tryUncons","content":"LazyList.tryUncons \ntryUncons \n\nO(1). Returns option tuple of head element and tail of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#take","title":"LazyList.take","content":"LazyList.take \ntake \n\nO(n), where n is count. Return the list which on consumption will consist of at most \u0027n\u0027 elements of\n the input list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#drop","title":"LazyList.drop","content":"LazyList.drop \ndrop \n\nO(n), where n is count. Return the list which on consumption will remove of at most \u0027n\u0027 elements of\n the input list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#tryTake","title":"LazyList.tryTake","content":"LazyList.tryTake \ntryTake \n\nO(n), where n is count. Return the list which on consumption will consist of at most \u0027n\u0027 elements of\n the input list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#skip","title":"LazyList.skip","content":"LazyList.skip \nskip \n\nO(n), where n is count. Return the list which on consumption will skip the first \u0027n\u0027 elements of\n the input list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#trySkip","title":"LazyList.trySkip","content":"LazyList.trySkip \ntrySkip \n\nO(n), where n is count. Return option the list which skips the first \u0027n\u0027 elements of\n the input list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#fold","title":"LazyList.fold","content":"LazyList.fold \nfold \n\nO(n). /// it applies a function to each element of a list,\n passing an accumulating parameter from left to right,\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#mapAccum","title":"LazyList.mapAccum","content":"LazyList.mapAccum \nmapAccum \n\nO(n). Behaves like a combination of map and fold;\n it applies a function to each element of a list,\n passing an accumulating parameter from left to right,\n and returning a final value of this accumulator together with the new list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#tryFind","title":"LazyList.tryFind","content":"LazyList.tryFind \ntryFind \n\nO(n), worst case. Apply the given function to successive elements of the list, returning the first\n result where function returns \u003Cc\u003ESome(x)\u003C/c\u003E for some x. If the function never returns\n true, \u0027None\u0027 is returned.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#find","title":"LazyList.find","content":"LazyList.find \nfind \n\nO(n), worst case. Return the first element for which the given function returns \u003Cc\u003Etrue\u003C/c\u003E.\n Raise \u003Cc\u003EKeyNotFoundException\u003C/c\u003E if no such element exists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#empty","title":"LazyList.empty","content":"LazyList.empty \nempty \n\nO(1). Evaluates to the list that contains no items\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#length","title":"LazyList.length","content":"LazyList.length \nlength \n\nO(n). Return the length of the list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#cons","title":"LazyList.cons","content":"LazyList.cons \ncons \n\nO(1). Return a new list which contains the given item followed by the\n given list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#consDelayed","title":"LazyList.consDelayed","content":"LazyList.consDelayed \nconsDelayed \n\nO(1). Return a new list which on consumption contains the given item\n followed by the list returned by the given computation.  The\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#repeat","title":"LazyList.repeat","content":"LazyList.repeat \nrepeat \n\nO(1). Return the list which on consumption will consist of an infinite sequence of\n the given item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#delayed","title":"LazyList.delayed","content":"LazyList.delayed \ndelayed \n\nO(1). Return a list that is in effect the list returned by the given computation.\n The given computation is not executed until the first element on the list is\n consumed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#unfold","title":"LazyList.unfold","content":"LazyList.unfold \nunfold \n\nO(1). Return a list that contains the elements returned by the given computation.\n The given computation is not executed until the first element on the list is\n consumed.  The given argument is passed to the computation.  Subsequent elements\n in the list are generated by again applying the residual \u0027b to the computation.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#append","title":"LazyList.append","content":"LazyList.append \nappend \n\nO(1). Return the list which contains on demand the elements of the first list followed\n by the elements of the second list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#zip","title":"LazyList.zip","content":"LazyList.zip \nzip \n\nO(1). Return the list which contains on demand the pair of elements of the first and second list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#concat","title":"LazyList.concat","content":"LazyList.concat \nconcat \n\nO(1). Return the list which contains on demand the list of elements of the list of lazy lists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#split","title":"LazyList.split","content":"LazyList.split \nsplit \n\n Splits the list at the gicen index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#filter","title":"LazyList.filter","content":"LazyList.filter \nfilter \n\nO(1). Return a new collection which on consumption will consist of only the elements of the collection\n for which the given predicate returns \u0022true\u0022\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#iter","title":"LazyList.iter","content":"LazyList.iter \niter \n\nO(n). Apply the given function to each element of the collection.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#scan","title":"LazyList.scan","content":"LazyList.scan \nscan \n\nO(1). Return a new list consisting of the results of applying the given accumulating function\n to successive elements of the list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#map","title":"LazyList.map","content":"LazyList.map \nmap \n\nO(1). Build a new collection whose elements are the results of applying the given function\n to each of the elements of the collection.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#map2","title":"LazyList.map2","content":"LazyList.map2 \nmap2 \n\nO(1). Build a new collection whose elements are the results of applying the given function\n to the corresponding elements of the two collections pairwise.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#ofArray","title":"LazyList.ofArray","content":"LazyList.ofArray \nofArray \n\nO(1). Build a collection from the given array. This function will eagerly evaluate all of the\n list (and thus may not terminate).\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#toArray","title":"LazyList.toArray","content":"LazyList.toArray \ntoArray \n\nO(n). Build an array from the given collection\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#ofList","title":"LazyList.ofList","content":"LazyList.ofList \nofList \n\nO(1). Build a collection from the given list. This function will eagerly evaluate all of the\n list (and thus may not terminate).\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#toList","title":"LazyList.toList","content":"LazyList.toList \ntoList \n\nO(n). Build a non-lazy list from the given collection. This function will eagerly evaluate all of the\n list (and thus may not terminate).\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#toSeq","title":"LazyList.toSeq","content":"LazyList.toSeq \ntoSeq \n\nO(n). Return a view of the collection as an enumerable object\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#ofSeq","title":"LazyList.ofSeq","content":"LazyList.ofSeq \nofSeq \n\nO(1). Build a new collection from the given enumerable object\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#rev","title":"LazyList.rev","content":"LazyList.rev \nrev \n\n Returns the reverse list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#compareWith","title":"LazyList.compareWith","content":"LazyList.compareWith \ncompareWith \n\nO(n). Compares two lazy lists using the given comparison function, element by element.\n Both lists are evaluated until one of them is empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#equalsWith","title":"LazyList.equalsWith","content":"LazyList.equalsWith \nequalsWith \n\nO(n). Checks if two lazy lists are equal using the given equality function, element by element.\n Both lists are evaluated until one of them is empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist.html#( |Cons|Nil| )","title":"LazyList.( |Cons|Nil| )","content":"LazyList.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html","title":"List","content":"List \n\n Extensions for F#\u0027s List module.\n \nList.cons \ncons \nList.singleton \nsingleton \nList.lift2 \nlift2 \nList.span \nspan \nList.split \nsplit \nList.skipWhile \nskipWhile \nList.skipUntil \nskipUntil \nList.takeWhile \ntakeWhile \nList.takeUntil \ntakeUntil \nList.splitAt \nsplitAt \nList.skip \nskip \nList.take \ntake \nList.groupNeighboursBy \ngroupNeighboursBy \nList.mapIf \nmapIf \nList.mapAccum \nmapAccum \nList.transpose \ntranspose \nList.mergeBy \nmergeBy \nList.merge \nmerge \nList.pad \npad \nList.fill \nfill \nList.catOptions \ncatOptions \nList.choice1s \nchoice1s \nList.choice2s \nchoice2s \nList.partitionChoices \npartitionChoices \nList.equalsWith \nequalsWith"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#cons","title":"List.cons","content":"List.cons \ncons \n\n Curried cons\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#singleton","title":"List.singleton","content":"List.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#lift2","title":"List.lift2","content":"List.lift2 \nlift2 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#span","title":"List.span","content":"List.span \nspan \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#split","title":"List.split","content":"List.split \nsplit \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#skipWhile","title":"List.skipWhile","content":"List.skipWhile \nskipWhile \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#skipUntil","title":"List.skipUntil","content":"List.skipUntil \nskipUntil \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#takeWhile","title":"List.takeWhile","content":"List.takeWhile \ntakeWhile \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#takeUntil","title":"List.takeUntil","content":"List.takeUntil \ntakeUntil \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#splitAt","title":"List.splitAt","content":"List.splitAt \nsplitAt \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#skip","title":"List.skip","content":"List.skip \nskip \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#take","title":"List.take","content":"List.take \ntake \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#groupNeighboursBy","title":"List.groupNeighboursBy","content":"List.groupNeighboursBy \ngroupNeighboursBy \n\n Applies a key-generating function to each element of a list and yields a list of unique keys and a list of all elements that have each key.\n This function groups together only neighbouring elements in the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#mapIf","title":"List.mapIf","content":"List.mapIf \nmapIf \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#mapAccum","title":"List.mapAccum","content":"List.mapAccum \nmapAccum \n\n Behaves like a combination of map and fold;\n it applies a function to each element of a list,\n passing an accumulating parameter from left to right,\n and returning a final value of this accumulator together with the new list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#transpose","title":"List.transpose","content":"List.transpose \ntranspose \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#mergeBy","title":"List.mergeBy","content":"List.mergeBy \nmergeBy \n\n Merges to sequences using the given function to transform the elements for comparision\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#merge","title":"List.merge","content":"List.merge \nmerge \n\n Merges two sequences by the default comparer for \u0027T\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#pad","title":"List.pad","content":"List.pad \npad \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#fill","title":"List.fill","content":"List.fill \nfill \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#catOptions","title":"List.catOptions","content":"List.catOptions \ncatOptions \n\n The catOptions function takes a list of Options and returns a list of all the Some values.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#choice1s","title":"List.choice1s","content":"List.choice1s \nchoice1s \n\n Extracts from a list of Choice all the Choice1Of2 elements. All the Choice1Of2 elements are extracted in order.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#choice2s","title":"List.choice2s","content":"List.choice2s \nchoice2s \n\n Extracts from a list of Choice all the Choice2Of2 elements. All the Choice2Of2 elements are extracted in order.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#partitionChoices","title":"List.partitionChoices","content":"List.partitionChoices \npartitionChoices \n\n Partitions a list of Choice into two lists. All the Choice1Of2 elements are extracted, in order, to the first component of the output. Similarly the Choice2Of2 elements are extracted to the second component of the output.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-list.html#equalsWith","title":"List.equalsWith","content":"List.equalsWith \nequalsWith \n\n Compares two lists for equality using the given comparison function, element by element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-literals.html","title":"Literals","content":"Literals \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html","title":"Map","content":"Map \n\n Extensions for F#\u0027s Map module.\n \nMap.spanWithKey \nspanWithKey \nMap.splitWithKey \nsplitWithKey \nMap.insertWith \ninsertWith \nMap.updateWith \nupdateWith \nMap.valueList \nvalueList \nMap.union \nunion \nMap.choose \nchoose \nMap.removeMany \nremoveMany \nMap.values \nvalues \nMap.keys \nkeys \nMap.keySet \nkeySet \nMap.findOrDefault \nfindOrDefault \nMap.catOptionKeys \ncatOptionKeys \nMap.catOptionValues \ncatOptionValues \nMap.equalsWith \nequalsWith"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#spanWithKey","title":"Map.spanWithKey","content":"Map.spanWithKey \nspanWithKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#splitWithKey","title":"Map.splitWithKey","content":"Map.splitWithKey \nsplitWithKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#insertWith","title":"Map.insertWith","content":"Map.insertWith \ninsertWith \n\u003Cpre\u003EinsertWith f key defaultValue mp\u003C/pre\u003E will insert the pair \u003Cpre\u003E(key, value)\u003C/pre\u003E into \u003Cpre\u003Emp\u003C/pre\u003E if \u003Cpre\u003Ekey\u003C/pre\u003E does not exist in the map.\n If the key does exist, the function will insert \u003Cpre\u003Ef defaultValue oldValue\u003C/pre\u003E.\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#updateWith","title":"Map.updateWith","content":"Map.updateWith \nupdateWith \n\u003Cpre\u003Eupdate f k map\u003C/pre\u003E updates the value \u003Cpre\u003Ex\u003C/pre\u003E at key \u003Cpre\u003Ek\u003C/pre\u003E (if it is in the map).\n If \u003Cpre\u003Ef x\u003C/pre\u003E is \u003Cpre\u003ENone\u003C/pre\u003E, the element is deleted.\n If it is \u003Cpre\u003ESome y\u003C/pre\u003E, the key is bound to the new value \u003Cpre\u003Ey\u003C/pre\u003E.\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#valueList","title":"Map.valueList","content":"Map.valueList \nvalueList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#union","title":"Map.union","content":"Map.union \nunion \n\n Combines the two Maps into a single Map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#choose","title":"Map.choose","content":"Map.choose \nchoose \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#removeMany","title":"Map.removeMany","content":"Map.removeMany \nremoveMany \n\n Allows to remove many keys from a Map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#values","title":"Map.values","content":"Map.values \nvalues \n\n Retrieves the values from a Map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#keys","title":"Map.keys","content":"Map.keys \nkeys \n\n Retrieves the keys from a Map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#keySet","title":"Map.keySet","content":"Map.keySet \nkeySet \n\n Retrieves the key set from a Map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#findOrDefault","title":"Map.findOrDefault","content":"Map.findOrDefault \nfindOrDefault \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#catOptionKeys","title":"Map.catOptionKeys","content":"Map.catOptionKeys \ncatOptionKeys \n\n The catOptions function takes a map of Options and values and returns a map of all the Some keys and values.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#catOptionValues","title":"Map.catOptionValues","content":"Map.catOptionValues \ncatOptionValues \n\n The catOptions function takes a map of keys and Options and returns a map of all the keys and Some values.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-map.html#equalsWith","title":"Map.equalsWith","content":"Map.equalsWith \nequalsWith \n\n Compares two maps for equality using the given comparison function, element by element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html","title":"NameValueCollection","content":"NameValueCollection \n\n Extensions for NameValueCollections.\n \nNameValueCollection.concat \nconcat \nNameValueCollection.addInPlace \naddInPlace \nNameValueCollection.add \nadd \nNameValueCollection.toArray \ntoArray \nNameValueCollection.toSeq \ntoSeq \nNameValueCollection.toList \ntoList \nNameValueCollection.ofSeq \nofSeq \nNameValueCollection.toLookup \ntoLookup \nNameValueCollection.asDictionary \nasDictionary \nNameValueCollection.asReadonlyDictionary \nasReadonlyDictionary \nNameValueCollection.asLookup \nasLookup"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#concat","title":"NameValueCollection.concat","content":"NameValueCollection.concat \nconcat \n\n Returns a new \u003Ca href=\u0022http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html\u0022\u003ENameValueCollection\u003C/a\u003E with the concatenation of two \u003Ca href=\u0022http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html\u0022\u003ENameValueCollection\u003C/a\u003Es\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#addInPlace","title":"NameValueCollection.addInPlace","content":"NameValueCollection.addInPlace \naddInPlace \n\n In-place add of a key-value pair to a \u003Ca href=\u0022http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html\u0022\u003ENameValueCollection\u003C/a\u003E"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#add","title":"NameValueCollection.add","content":"NameValueCollection.add \nadd \n\n Adds an element to a copy of an existing NameValueCollection\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#toArray","title":"NameValueCollection.toArray","content":"NameValueCollection.toArray \ntoArray \n\n Returns a \u003Ca href=\u0022http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html\u0022\u003ENameValueCollection\u003C/a\u003E as an array of key-value pairs.\n Note that keys may be duplicated.\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#toSeq","title":"NameValueCollection.toSeq","content":"NameValueCollection.toSeq \ntoSeq \n\n Returns a \u003Ca href=\u0022http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html\u0022\u003ENameValueCollection\u003C/a\u003E as a sequence of key-value pairs.\n Note that keys may be duplicated.\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#toList","title":"NameValueCollection.toList","content":"NameValueCollection.toList \ntoList \n\n Returns a \u003Ca href=\u0022http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html\u0022\u003ENameValueCollection\u003C/a\u003E as a list of key-value pairs.\n Note that keys may be duplicated.\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#ofSeq","title":"NameValueCollection.ofSeq","content":"NameValueCollection.ofSeq \nofSeq \n\n Creates a \u003Ca href=\u0022http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html\u0022\u003ENameValueCollection\u003C/a\u003E from a list of key-value pairs\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#toLookup","title":"NameValueCollection.toLookup","content":"NameValueCollection.toLookup \ntoLookup \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#asDictionary","title":"NameValueCollection.asDictionary","content":"NameValueCollection.asDictionary \nasDictionary \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#asReadonlyDictionary","title":"NameValueCollection.asReadonlyDictionary","content":"NameValueCollection.asReadonlyDictionary \nasReadonlyDictionary \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-namevaluecollection.html#asLookup","title":"NameValueCollection.asLookup","content":"NameValueCollection.asLookup \nasLookup \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html","title":"NonEmptyList","content":"NonEmptyList \n \nNonEmptyList.create \ncreate \nNonEmptyList.createParamsArray \ncreateParamsArray \nNonEmptyList.singleton \nsingleton \nNonEmptyList.head \nhead \nNonEmptyList.tail \ntail \nNonEmptyList.toList \ntoList \nNonEmptyList.length \nlength \nNonEmptyList.toArray \ntoArray \nNonEmptyList.toSeq \ntoSeq \nNonEmptyList.ofArray \nofArray \nNonEmptyList.ofList \nofList \nNonEmptyList.ofSeq \nofSeq \nNonEmptyList.map \nmap \nNonEmptyList.cons \ncons \nNonEmptyList.appendList \nappendList \nNonEmptyList.append \nappend \nNonEmptyList.reduce \nreduce \nNonEmptyList.last \nlast \nNonEmptyList.rev \nrev \nNonEmptyList.collect \ncollect \nNonEmptyList.zip \nzip"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#create","title":"NonEmptyList.create","content":"NonEmptyList.create \ncreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#createParamsArray","title":"NonEmptyList.createParamsArray","content":"NonEmptyList.createParamsArray \ncreateParamsArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#singleton","title":"NonEmptyList.singleton","content":"NonEmptyList.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#head","title":"NonEmptyList.head","content":"NonEmptyList.head \nhead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#tail","title":"NonEmptyList.tail","content":"NonEmptyList.tail \ntail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#toList","title":"NonEmptyList.toList","content":"NonEmptyList.toList \ntoList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#length","title":"NonEmptyList.length","content":"NonEmptyList.length \nlength \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#toArray","title":"NonEmptyList.toArray","content":"NonEmptyList.toArray \ntoArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#toSeq","title":"NonEmptyList.toSeq","content":"NonEmptyList.toSeq \ntoSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#ofArray","title":"NonEmptyList.ofArray","content":"NonEmptyList.ofArray \nofArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#ofList","title":"NonEmptyList.ofList","content":"NonEmptyList.ofList \nofList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#ofSeq","title":"NonEmptyList.ofSeq","content":"NonEmptyList.ofSeq \nofSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#map","title":"NonEmptyList.map","content":"NonEmptyList.map \nmap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#cons","title":"NonEmptyList.cons","content":"NonEmptyList.cons \ncons \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#appendList","title":"NonEmptyList.appendList","content":"NonEmptyList.appendList \nappendList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#append","title":"NonEmptyList.append","content":"NonEmptyList.append \nappend \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#reduce","title":"NonEmptyList.reduce","content":"NonEmptyList.reduce \nreduce \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#last","title":"NonEmptyList.last","content":"NonEmptyList.last \nlast \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#rev","title":"NonEmptyList.rev","content":"NonEmptyList.rev \nrev \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#collect","title":"NonEmptyList.collect","content":"NonEmptyList.collect \ncollect \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist.html#zip","title":"NonEmptyList.zip","content":"NonEmptyList.zip \nzip \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html","title":"PersistentHashMap","content":"PersistentHashMap \n\n Defines functions which allow to access and manipulate PersistentHashMaps.\n \nPersistentHashMap.empty \nempty \nPersistentHashMap.length \nlength \nPersistentHashMap.count \ncount \nPersistentHashMap.containsKey \ncontainsKey \nPersistentHashMap.find \nfind \nPersistentHashMap.add \nadd \nPersistentHashMap.remove \nremove \nPersistentHashMap.toSeq \ntoSeq \nPersistentHashMap.ofSeq \nofSeq \nPersistentHashMap.map \nmap"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#empty","title":"PersistentHashMap.empty","content":"PersistentHashMap.empty \nempty \n\nO(1), returns an empty PersistentHashMap\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#length","title":"PersistentHashMap.length","content":"PersistentHashMap.length \nlength \n\nO(1), returns the count of the elements in the PersistentHashMap (same as count)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#count","title":"PersistentHashMap.count","content":"PersistentHashMap.count \ncount \n\nO(1), returns the count of the elements in the PersistentHashMap\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#containsKey","title":"PersistentHashMap.containsKey","content":"PersistentHashMap.containsKey \ncontainsKey \n\nO(log32n), returns if the key exists in the map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#find","title":"PersistentHashMap.find","content":"PersistentHashMap.find \nfind \n\nO(log32n), returns the value if the exists in the map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#add","title":"PersistentHashMap.add","content":"PersistentHashMap.add \nadd \n\nO(log32n), adds an element to the map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#remove","title":"PersistentHashMap.remove","content":"PersistentHashMap.remove \nremove \n\nO(log32n), removes the element with the given key from the map\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#toSeq","title":"PersistentHashMap.toSeq","content":"PersistentHashMap.toSeq \ntoSeq \n\nO(n). Views the given HashMap as a sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#ofSeq","title":"PersistentHashMap.ofSeq","content":"PersistentHashMap.ofSeq \nofSeq \n\nO(n). Returns a HashMap of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap.html#map","title":"PersistentHashMap.map","content":"PersistentHashMap.map \nmap \n\nO(n). Returns a HashMap whose elements are the results of applying the supplied function to each of the elements of a supplied HashMap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html","title":"PersistentVector","content":"PersistentVector \n\n Defines functions which allow to access and manipulate PersistentVectors.\n \nPersistentVector.append \nappend \nPersistentVector.conj \nconj \nPersistentVector.empty \nempty \nPersistentVector.flatten \nflatten \nPersistentVector.fold \nfold \nPersistentVector.foldBack \nfoldBack \nPersistentVector.init \ninit \nPersistentVector.initial \ninitial \nPersistentVector.tryInitial \ntryInitial \nPersistentVector.isEmpty \nisEmpty \nPersistentVector.last \nlast \nPersistentVector.tryLast \ntryLast \nPersistentVector.length \nlength \nPersistentVector.map \nmap \nPersistentVector.nth \nnth \nPersistentVector.nthNth \nnthNth \nPersistentVector.tryNth \ntryNth \nPersistentVector.tryNthNth \ntryNthNth \nPersistentVector.ofSeq \nofSeq \nPersistentVector.rev \nrev \nPersistentVector.singleton \nsingleton \nPersistentVector.rangedIterator \nrangedIterator \nPersistentVector.toSeq \ntoSeq \nPersistentVector.unconj \nunconj \nPersistentVector.tryUnconj \ntryUnconj \nPersistentVector.update \nupdate \nPersistentVector.updateNth \nupdateNth \nPersistentVector.tryUpdate \ntryUpdate \nPersistentVector.tryUpdateNth \ntryUpdateNth \nPersistentVector.windowSeq \nwindowSeq \nPersistentVector.( |Conj|Nil| ) \n( |Conj|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#append","title":"PersistentVector.append","content":"PersistentVector.append \nappend \n\n O(n). Returns a new vector with the elements of the second vector added at the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#conj","title":"PersistentVector.conj","content":"PersistentVector.conj \nconj \n\n O(1). Returns a new vector with the element added at the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#empty","title":"PersistentVector.empty","content":"PersistentVector.empty \nempty \n\n O(1). Returns vector of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#flatten","title":"PersistentVector.flatten","content":"PersistentVector.flatten \nflatten \n\n O(m,n). Returns a seq from a vector of vectors.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#fold","title":"PersistentVector.fold","content":"PersistentVector.fold \nfold \n\n O(n). Returns a state from the supplied state and a function operating from left to right.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#foldBack","title":"PersistentVector.foldBack","content":"PersistentVector.foldBack \nfoldBack \n\n O(n). Returns a state from the supplied state and a function operating from right to left.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#init","title":"PersistentVector.init","content":"PersistentVector.init \ninit \n\n O(n). Returns a vector of the supplied length using the supplied function operating on the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#initial","title":"PersistentVector.initial","content":"PersistentVector.initial \ninitial \n\n O(1) for all practical purposes; really O(log32n). Returns a new vector without the last item. If the collection is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#tryInitial","title":"PersistentVector.tryInitial","content":"PersistentVector.tryInitial \ntryInitial \n\n O(1) for all practical purposes; really O(log32n). Returns option vector without the last item.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#isEmpty","title":"PersistentVector.isEmpty","content":"PersistentVector.isEmpty \nisEmpty \n\n O(1). Returns true if the vector has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#last","title":"PersistentVector.last","content":"PersistentVector.last \nlast \n\n O(1). Returns the last element in the vector. If the vector is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#tryLast","title":"PersistentVector.tryLast","content":"PersistentVector.tryLast \ntryLast \n\n O(1). Returns option last element in the vector.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#length","title":"PersistentVector.length","content":"PersistentVector.length \nlength \n\n O(1). Returns the number of items in the vector.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#map","title":"PersistentVector.map","content":"PersistentVector.map \nmap \n\n O(n). Returns a vector whose elements are the results of applying the supplied function to each of the elements of a supplied vector.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#nth","title":"PersistentVector.nth","content":"PersistentVector.nth \nnth \n\n O(1) for all practical purposes; really O(log32n). Returns the value at the index. If the index is out of bounds it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#nthNth","title":"PersistentVector.nthNth","content":"PersistentVector.nthNth \nnthNth \n\n O(log32(m,n)). Returns the value at the outer index, inner index. If either index is out of bounds it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#tryNth","title":"PersistentVector.tryNth","content":"PersistentVector.tryNth \ntryNth \n\n O(1) for all practical purposes; really O(log32n). Returns option value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#tryNthNth","title":"PersistentVector.tryNthNth","content":"PersistentVector.tryNthNth \ntryNthNth \n\n O(log32(m,n)). Returns option value at the indices.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#ofSeq","title":"PersistentVector.ofSeq","content":"PersistentVector.ofSeq \nofSeq \n\n O(n). Returns a vector of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#rev","title":"PersistentVector.rev","content":"PersistentVector.rev \nrev \n\n O(n). Returns vector reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#singleton","title":"PersistentVector.singleton","content":"PersistentVector.singleton \nsingleton \n\n O(1). Returns a new vector of one element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#rangedIterator","title":"PersistentVector.rangedIterator","content":"PersistentVector.rangedIterator \nrangedIterator \n\n O(n). Views a subset of the given vector. startIndex is inclusive, endIndex is exclusive.\n \u0060rangedIterator 0 count\u0060 is the same as toSeq\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#toSeq","title":"PersistentVector.toSeq","content":"PersistentVector.toSeq \ntoSeq \n\n O(n). Views the given vector as a sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#unconj","title":"PersistentVector.unconj","content":"PersistentVector.unconj \nunconj \n\n O(1) for all practical purposes; really O(log32n). Returns tuple last element and vector without last item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#tryUnconj","title":"PersistentVector.tryUnconj","content":"PersistentVector.tryUnconj \ntryUnconj \n\n O(1) for all practical purposes; really O(log32n). Returns option tuple last element and vector without last item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#update","title":"PersistentVector.update","content":"PersistentVector.update \nupdate \n\n O(1) for all practical purposes; really O(log32n). Returns a new vector that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#updateNth","title":"PersistentVector.updateNth","content":"PersistentVector.updateNth \nupdateNth \n\n O(log32(m,n)). Returns a new vector of vectors that contains the given value at the indices.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#tryUpdate","title":"PersistentVector.tryUpdate","content":"PersistentVector.tryUpdate \ntryUpdate \n\n O(1) for all practical purposes; really O(log32n). Returns option vector that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#tryUpdateNth","title":"PersistentVector.tryUpdateNth","content":"PersistentVector.tryUpdateNth \ntryUpdateNth \n\n O(log32(m,n)). Returns option vector that contains the given value at the indices.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#windowSeq","title":"PersistentVector.windowSeq","content":"PersistentVector.windowSeq \nwindowSeq \n\n O(n). Returns a vector of vectors of given length from the seq. Result may be a jagged vector.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector.html#( |Conj|Nil| )","title":"PersistentVector.( |Conj|Nil| )","content":"PersistentVector.( |Conj|Nil| ) \n( |Conj|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html","title":"PriorityQueue","content":"PriorityQueue \n \nPriorityQueue.empty \nempty \nPriorityQueue.isEmpty \nisEmpty \nPriorityQueue.insert \ninsert \nPriorityQueue.tryPeek \ntryPeek \nPriorityQueue.peek \npeek \nPriorityQueue.tryPop \ntryPop \nPriorityQueue.pop \npop"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html#empty","title":"PriorityQueue.empty","content":"PriorityQueue.empty \nempty \n\nO(1). Returns a empty queue, with indicated ordering.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html#isEmpty","title":"PriorityQueue.isEmpty","content":"PriorityQueue.isEmpty \nisEmpty \n\nO(1). Returns true if the queue has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html#insert","title":"PriorityQueue.insert","content":"PriorityQueue.insert \ninsert \n\nO(log n) amortized time. Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html#tryPeek","title":"PriorityQueue.tryPeek","content":"PriorityQueue.tryPeek \ntryPeek \n\nO(1). Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html#peek","title":"PriorityQueue.peek","content":"PriorityQueue.peek \npeek \n\nO(1). Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html#tryPop","title":"PriorityQueue.tryPop","content":"PriorityQueue.tryPop \ntryPop \n\nO(log n) amortized time. Returns the option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-priorityqueue.html#pop","title":"PriorityQueue.pop","content":"PriorityQueue.pop \npop \n\nO(log n) amortized time. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html","title":"Queue","content":"Queue \n \nQueue.conj \nconj \nQueue.empty \nempty \nQueue.fold \nfold \nQueue.foldBack \nfoldBack \nQueue.head \nhead \nQueue.tryHead \ntryHead \nQueue.isEmpty \nisEmpty \nQueue.length \nlength \nQueue.ofList \nofList \nQueue.ofSeq \nofSeq \nQueue.rev \nrev \nQueue.tail \ntail \nQueue.tryTail \ntryTail \nQueue.toSeq \ntoSeq \nQueue.uncons \nuncons \nQueue.tryUncons \ntryUncons \nQueue.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#conj","title":"Queue.conj","content":"Queue.conj \nconj \n\nO(1). Returns a new queue with the element added to the end. (enqueue)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#empty","title":"Queue.empty","content":"Queue.empty \nempty \n\nO(1). Returns queue of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#fold","title":"Queue.fold","content":"Queue.fold \nfold \n\nO(n). Applies a function to each element of the queue, threading an accumulator argument through the computation, left to right.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#foldBack","title":"Queue.foldBack","content":"Queue.foldBack \nfoldBack \n\nO(n). Applies a function to each element of the queue, threading an accumulator argument through the computation, right to left.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#head","title":"Queue.head","content":"Queue.head \nhead \n\nO(1). Returns the first element. (peek)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#tryHead","title":"Queue.tryHead","content":"Queue.tryHead \ntryHead \n\nO(1). Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#isEmpty","title":"Queue.isEmpty","content":"Queue.isEmpty \nisEmpty \n\nO(1). Returns true if the queue has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#length","title":"Queue.length","content":"Queue.length \nlength \n\nO(1). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#ofList","title":"Queue.ofList","content":"Queue.ofList \nofList \n\nO(1). Returns a queue of the list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#ofSeq","title":"Queue.ofSeq","content":"Queue.ofSeq \nofSeq \n\nO(n). Returns a queue of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#rev","title":"Queue.rev","content":"Queue.rev \nrev \n\nO(n). Returns queue reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#tail","title":"Queue.tail","content":"Queue.tail \ntail \n\nO(1) amortized, O(n) worst-case. Returns a new queue of the elements trailing the first element. (dequeue)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#tryTail","title":"Queue.tryTail","content":"Queue.tryTail \ntryTail \n\nO(1) amortized, O(n) worst-case. Returns option queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#toSeq","title":"Queue.toSeq","content":"Queue.toSeq \ntoSeq \n\nO(n). Views the given queue as a sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#uncons","title":"Queue.uncons","content":"Queue.uncons \nuncons \n\nO(1) amortized, O(n) worst-case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#tryUncons","title":"Queue.tryUncons","content":"Queue.tryUncons \ntryUncons \n\nO(1) amortized, O(n) worst-case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue.html#( |Cons|Nil| )","title":"Queue.( |Cons|Nil| )","content":"Queue.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html","title":"RandomAccessList","content":"RandomAccessList \n\n Defines functions which allow to access and manipulate RandomAccessLists.\n \nRandomAccessList.append \nappend \nRandomAccessList.cons \ncons \nRandomAccessList.empty \nempty \nRandomAccessList.fold \nfold \nRandomAccessList.foldBack \nfoldBack \nRandomAccessList.init \ninit \nRandomAccessList.isEmpty \nisEmpty \nRandomAccessList.head \nhead \nRandomAccessList.tryHead \ntryHead \nRandomAccessList.length \nlength \nRandomAccessList.map \nmap \nRandomAccessList.nth \nnth \nRandomAccessList.tryNth \ntryNth \nRandomAccessList.nthNth \nnthNth \nRandomAccessList.tryNthNth \ntryNthNth \nRandomAccessList.ofSeq \nofSeq \nRandomAccessList.rev \nrev \nRandomAccessList.singleton \nsingleton \nRandomAccessList.tail \ntail \nRandomAccessList.tryTail \ntryTail \nRandomAccessList.toSeq \ntoSeq \nRandomAccessList.uncons \nuncons \nRandomAccessList.tryUncons \ntryUncons \nRandomAccessList.update \nupdate \nRandomAccessList.updateNth \nupdateNth \nRandomAccessList.tryUpdate \ntryUpdate \nRandomAccessList.tryUpdateNth \ntryUpdateNth \nRandomAccessList.windowSeq \nwindowSeq \nRandomAccessList.zip \nzip \nRandomAccessList.reduce \nreduce \nRandomAccessList.map2 \nmap2 \nRandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#append","title":"RandomAccessList.append","content":"RandomAccessList.append \nappend \n\n O(n). Returns a new random access list with the elements of the second random access list added at the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#cons","title":"RandomAccessList.cons","content":"RandomAccessList.cons \ncons \n\n O(1). Returns a new random access list with the element added at the start.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#empty","title":"RandomAccessList.empty","content":"RandomAccessList.empty \nempty \n\n O(1). Returns random access list of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#fold","title":"RandomAccessList.fold","content":"RandomAccessList.fold \nfold \n\n O(n). Returns a state from the supplied state and a function operating from left to right.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#foldBack","title":"RandomAccessList.foldBack","content":"RandomAccessList.foldBack \nfoldBack \n\n O(n). Returns a state from the supplied state and a function operating from right to left.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#init","title":"RandomAccessList.init","content":"RandomAccessList.init \ninit \n\n O(n). Returns a random access list of the supplied length using the supplied function operating on the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#isEmpty","title":"RandomAccessList.isEmpty","content":"RandomAccessList.isEmpty \nisEmpty \n\n O(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#head","title":"RandomAccessList.head","content":"RandomAccessList.head \nhead \n\n O(1). Returns the first element in the random access list. If the random access list is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tryHead","title":"RandomAccessList.tryHead","content":"RandomAccessList.tryHead \ntryHead \n\n O(1). Returns option first element in the random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#length","title":"RandomAccessList.length","content":"RandomAccessList.length \nlength \n\n O(1). Returns the number of items in the random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#map","title":"RandomAccessList.map","content":"RandomAccessList.map \nmap \n\n O(n). Returns a random access list whose elements are the results of applying the supplied function to each of the elements of a supplied random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#nth","title":"RandomAccessList.nth","content":"RandomAccessList.nth \nnth \n\n O(1) for all practical purposes; really O(log32n). Returns the value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tryNth","title":"RandomAccessList.tryNth","content":"RandomAccessList.tryNth \ntryNth \n\n O(1) for all practical purposes; really O(log32n). Returns option value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#nthNth","title":"RandomAccessList.nthNth","content":"RandomAccessList.nthNth \nnthNth \n\n O(log32(m,n)). Returns the value at the outer index, inner index. If either index is out of bounds it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tryNthNth","title":"RandomAccessList.tryNthNth","content":"RandomAccessList.tryNthNth \ntryNthNth \n\n O(log32(m,n)). Returns option value at the indices.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#ofSeq","title":"RandomAccessList.ofSeq","content":"RandomAccessList.ofSeq \nofSeq \n\n O(n). Returns a random access list of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#rev","title":"RandomAccessList.rev","content":"RandomAccessList.rev \nrev \n\n O(n). Returns new random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#singleton","title":"RandomAccessList.singleton","content":"RandomAccessList.singleton \nsingleton \n\n O(1). Returns a new random access list of one element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tail","title":"RandomAccessList.tail","content":"RandomAccessList.tail \ntail \n\n O(1) for all practical purposes; really O(log32n). Returns a new random access list without the first item. If the collection is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tryTail","title":"RandomAccessList.tryTail","content":"RandomAccessList.tryTail \ntryTail \n\n O(1) for all practical purposes; really O(log32n). Returns option random access list without the first item.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#toSeq","title":"RandomAccessList.toSeq","content":"RandomAccessList.toSeq \ntoSeq \n\n O(n). Views the given random access list as a sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#uncons","title":"RandomAccessList.uncons","content":"RandomAccessList.uncons \nuncons \n\n O(1) for all practical purposes; really O(log32n). Returns tuple first element and random access list without first item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tryUncons","title":"RandomAccessList.tryUncons","content":"RandomAccessList.tryUncons \ntryUncons \n\n O(1) for all practical purposes; really O(log32n). Returns option tuple first element and random access list without first item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#update","title":"RandomAccessList.update","content":"RandomAccessList.update \nupdate \n\n O(1) for all practical purposes; really O(log32n). Returns a new random access list that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#updateNth","title":"RandomAccessList.updateNth","content":"RandomAccessList.updateNth \nupdateNth \n\n O(log32(m,n)). Returns a new random access list of random access lists that contains the given value at the indices.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tryUpdate","title":"RandomAccessList.tryUpdate","content":"RandomAccessList.tryUpdate \ntryUpdate \n\n O(1) for all practical purposes; really O(log32n). Returns option random access list that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#tryUpdateNth","title":"RandomAccessList.tryUpdateNth","content":"RandomAccessList.tryUpdateNth \ntryUpdateNth \n\n O(log32(m,n)). Returns option random access list that contains the given value at the indices.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#windowSeq","title":"RandomAccessList.windowSeq","content":"RandomAccessList.windowSeq \nwindowSeq \n\n O(n). Returns a random access list of random access lists of given length from the seq. Result may be a jagged random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#zip","title":"RandomAccessList.zip","content":"RandomAccessList.zip \nzip \n\n O(n). Combines the two RandomAccessLists into a RandomAccessList of pairs. The two RandomAccessLists must have equal lengths, otherwise an ArgumentException is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#reduce","title":"RandomAccessList.reduce","content":"RandomAccessList.reduce \nreduce \n\n O(n). Applies a function to each element of the collection, threading an accumulator argument through the computation. This function first applies the function to the first two elements of the list. Then, it passes this result into the function along with the third element and so on. Finally, it returns the final result. If the input function is f and the elements are i0...iN, then it computes f (... (f i0 i1) i2 ...) iN.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#map2","title":"RandomAccessList.map2","content":"RandomAccessList.map2 \nmap2 \n\n O(n). Builds a new collection whose elements are the results of applying the given function to the corresponding elements of the two collections pairwise. The two input arrays must have the same lengths, otherwise ArgumentException is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist.html#( |Cons|Nil| )","title":"RandomAccessList.( |Cons|Nil| )","content":"RandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html","title":"ResizeArray","content":"ResizeArray \n\n Generic operations on the type System.Collections.Generic.List, which is called ResizeArray in the F# libraries.\n \nResizeArray.length \nlength \nResizeArray.get \nget \nResizeArray.set \nset \nResizeArray.create \ncreate \nResizeArray.init \ninit \nResizeArray.append \nappend \nResizeArray.concat \nconcat \nResizeArray.sub \nsub \nResizeArray.copy \ncopy \nResizeArray.fill \nfill \nResizeArray.blit \nblit \nResizeArray.toList \ntoList \nResizeArray.ofList \nofList \nResizeArray.ofSeq \nofSeq \nResizeArray.fold \nfold \nResizeArray.foldBack \nfoldBack \nResizeArray.iter \niter \nResizeArray.map \nmap \nResizeArray.iter2 \niter2 \nResizeArray.map2 \nmap2 \nResizeArray.iteri \niteri \nResizeArray.mapi \nmapi \nResizeArray.exists \nexists \nResizeArray.forall \nforall \nResizeArray.filter \nfilter \nResizeArray.partition \npartition \nResizeArray.choose \nchoose \nResizeArray.find \nfind \nResizeArray.tryFind \ntryFind \nResizeArray.tryPick \ntryPick \nResizeArray.rev \nrev \nResizeArray.sort \nsort \nResizeArray.sortBy \nsortBy \nResizeArray.toArray \ntoArray \nResizeArray.ofArray \nofArray \nResizeArray.toSeq \ntoSeq \nResizeArray.exists2 \nexists2 \nResizeArray.findIndex \nfindIndex \nResizeArray.findIndexi \nfindIndexi \nResizeArray.reduce \nreduce \nResizeArray.reduceBack \nreduceBack \nResizeArray.fold2 \nfold2 \nResizeArray.foldBack2 \nfoldBack2 \nResizeArray.forall2 \nforall2 \nResizeArray.isEmpty \nisEmpty \nResizeArray.iteri2 \niteri2 \nResizeArray.mapi2 \nmapi2 \nResizeArray.scan \nscan \nResizeArray.scanBack \nscanBack \nResizeArray.singleton \nsingleton \nResizeArray.tryFindIndex \ntryFindIndex \nResizeArray.tryFindIndexi \ntryFindIndexi \nResizeArray.zip \nzip \nResizeArray.unzip \nunzip \nResizeArray.distinctBy \ndistinctBy \nResizeArray.distinct \ndistinct"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#length","title":"ResizeArray.length","content":"ResizeArray.length \nlength \n\n Return the length of the collection.  You can also use property \u003Cc\u003Earr.Length\u003C/c\u003E.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#get","title":"ResizeArray.get","content":"ResizeArray.get \nget \n\n Fetch an element from the collection.  You can also use the syntax \u003Cc\u003Earr.[idx]\u003C/c\u003E.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#set","title":"ResizeArray.set","content":"ResizeArray.set \nset \n\n Set the value of an element in the collection. You can also use the syntax \u003Cc\u003Earr.[idx] \u0026lt;- e\u003C/c\u003E.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#create","title":"ResizeArray.create","content":"ResizeArray.create \ncreate \n\n Create an array whose elements are all initially the given value.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#init","title":"ResizeArray.init","content":"ResizeArray.init \ninit \n\n Create an array by calling the given generator on each index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#append","title":"ResizeArray.append","content":"ResizeArray.append \nappend \n\n Build a new array that contains the elements of the first array followed by the elements of the second array\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#concat","title":"ResizeArray.concat","content":"ResizeArray.concat \nconcat \n\n Build a new array that contains the elements of each of the given list of arrays\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#sub","title":"ResizeArray.sub","content":"ResizeArray.sub \nsub \n\n Build a new array that contains the given subrange specified by\n starting index and length.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#copy","title":"ResizeArray.copy","content":"ResizeArray.copy \ncopy \n\n Build a new array that contains the elements of the given array\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#fill","title":"ResizeArray.fill","content":"ResizeArray.fill \nfill \n\n Fill a range of the collection with the given element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#blit","title":"ResizeArray.blit","content":"ResizeArray.blit \nblit \n\n Read a range of elements from the first array and write them into the second.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#toList","title":"ResizeArray.toList","content":"ResizeArray.toList \ntoList \n\n Build a list from the given array\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#ofList","title":"ResizeArray.ofList","content":"ResizeArray.ofList \nofList \n\n Build an array from the given list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#ofSeq","title":"ResizeArray.ofSeq","content":"ResizeArray.ofSeq \nofSeq \n\n Build and array from the given seq\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#fold","title":"ResizeArray.fold","content":"ResizeArray.fold \nfold \n\n Apply a function to each element of the collection, threading an accumulator argument\n through the computation. If the input function is \u003Cc\u003Ef\u003C/c\u003E and the elements are \u003Cc\u003Ei0...iN\u003C/c\u003E \n then computes \u003Cc\u003Ef (... (f s i0)...) iN\u003C/c\u003E\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#foldBack","title":"ResizeArray.foldBack","content":"ResizeArray.foldBack \nfoldBack \n\n Apply a function to each element of the array, threading an accumulator argument\n through the computation. If the input function is \u003Cc\u003Ef\u003C/c\u003E and the elements are \u003Cc\u003Ei0...iN\u003C/c\u003E then \n computes \u003Cc\u003Ef i0 (...(f iN s))\u003C/c\u003E.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#iter","title":"ResizeArray.iter","content":"ResizeArray.iter \niter \n\n Apply the given function to each element of the array. \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#map","title":"ResizeArray.map","content":"ResizeArray.map \nmap \n\n Build a new array whose elements are the results of applying the given function\n to each of the elements of the array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#iter2","title":"ResizeArray.iter2","content":"ResizeArray.iter2 \niter2 \n\n Apply the given function to two arrays simultaneously. The\n two arrays must have the same lengths, otherwise an Invalid_argument exception is\n raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#map2","title":"ResizeArray.map2","content":"ResizeArray.map2 \nmap2 \n\n Build a new collection whose elements are the results of applying the given function\n to the corresponding elements of the two collections pairwise.  The two input\n arrays must have the same lengths.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#iteri","title":"ResizeArray.iteri","content":"ResizeArray.iteri \niteri \n\n Apply the given function to each element of the array.  The integer passed to the\n function indicates the index of element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#mapi","title":"ResizeArray.mapi","content":"ResizeArray.mapi \nmapi \n\n Build a new array whose elements are the results of applying the given function\n to each of the elements of the array. The integer index passed to the\n function indicates the index of element being transformed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#exists","title":"ResizeArray.exists","content":"ResizeArray.exists \nexists \n\n Test if any element of the array satisfies the given predicate.\n If the input function is \u003Cc\u003Ef\u003C/c\u003E and the elements are \u003Cc\u003Ei0...iN\u003C/c\u003E \n then computes \u003Cc\u003Ep i0 or ... or p iN\u003C/c\u003E.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#forall","title":"ResizeArray.forall","content":"ResizeArray.forall \nforall \n\n Test if all elements of the array satisfy the given predicate.\n If the input function is \u003Cc\u003Ef\u003C/c\u003E and the elements are \u003Cc\u003Ei0...iN\u003C/c\u003E and \u0022j0...jN\u0022\n then computes \u003Cc\u003Ep i0 \u0026\u0026 ... \u0026\u0026 p iN\u003C/c\u003E.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#filter","title":"ResizeArray.filter","content":"ResizeArray.filter \nfilter \n\n Return a new collection containing only the elements of the collection\n for which the given predicate returns \u003Cc\u003Etrue\u003C/c\u003E\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#partition","title":"ResizeArray.partition","content":"ResizeArray.partition \npartition \n\n Split the collection into two collections, containing the \n elements for which the given predicate returns \u003Cc\u003Etrue\u003C/c\u003E and \u003Cc\u003Efalse\u003C/c\u003E\n respectively \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#choose","title":"ResizeArray.choose","content":"ResizeArray.choose \nchoose \n\n Apply the given function to each element of the array. Return\n the array comprised of the results \u0022x\u0022 for each element where\n the function returns Some(x)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#find","title":"ResizeArray.find","content":"ResizeArray.find \nfind \n\n Return the first element for which the given function returns \u003Cc\u003Etrue\u003C/c\u003E.\n Raise \u003Cc\u003EKeyNotFoundException\u003C/c\u003E if no such element exists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#tryFind","title":"ResizeArray.tryFind","content":"ResizeArray.tryFind \ntryFind \n\n Return the first element for which the given function returns \u003Cc\u003Etrue\u003C/c\u003E.\n Return None if no such element exists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#tryPick","title":"ResizeArray.tryPick","content":"ResizeArray.tryPick \ntryPick \n\n Apply the given function to successive elements, returning the first\n result where function returns \u0022Some(x)\u0022 for some x.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#rev","title":"ResizeArray.rev","content":"ResizeArray.rev \nrev \n\n Return a new array with the elements in reverse order\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#sort","title":"ResizeArray.sort","content":"ResizeArray.sort \nsort \n\n Sort the elements using the given comparison function\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#sortBy","title":"ResizeArray.sortBy","content":"ResizeArray.sortBy \nsortBy \n\n Sort the elements using the key extractor and generic comparison on the keys\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#toArray","title":"ResizeArray.toArray","content":"ResizeArray.toArray \ntoArray \n\n Return a fixed-length array containing the elements of the input ResizeArray\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#ofArray","title":"ResizeArray.ofArray","content":"ResizeArray.ofArray \nofArray \n\n Build a ResizeArray from the given elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#toSeq","title":"ResizeArray.toSeq","content":"ResizeArray.toSeq \ntoSeq \n\n Return a view of the array as an enumerable object\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#exists2","title":"ResizeArray.exists2","content":"ResizeArray.exists2 \nexists2 \n\n Test elements of the two arrays pairwise to see if any pair of element satisfies the given predicate.\n Raise ArgumentException if the arrays have different lengths.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#findIndex","title":"ResizeArray.findIndex","content":"ResizeArray.findIndex \nfindIndex \n\n Return the index of the first element in the array\n that satisfies the given predicate. Raise \u003Cc\u003EKeyNotFoundException\u003C/c\u003E if \n none of the elements satisfy the predicate.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#findIndexi","title":"ResizeArray.findIndexi","content":"ResizeArray.findIndexi \nfindIndexi \n\n Return the index of the first element in the array\n that satisfies the given predicate. Raise \u003Cc\u003EKeyNotFoundException\u003C/c\u003E if \n none of the elements satisfy the predicate.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#reduce","title":"ResizeArray.reduce","content":"ResizeArray.reduce \nreduce \n\n Apply a function to each element of the array, threading an accumulator argument\n through the computation. If the input function is \u003Cc\u003Ef\u003C/c\u003E and the elements are \u003Cc\u003Ei0...iN\u003C/c\u003E \n then computes \u003Cc\u003Ef (... (f i0 i1)...) iN\u003C/c\u003E. Raises ArgumentException if the array has size zero.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#reduceBack","title":"ResizeArray.reduceBack","content":"ResizeArray.reduceBack \nreduceBack \n\n Apply a function to each element of the array, threading an accumulator argument\n through the computation. If the input function is \u003Cc\u003Ef\u003C/c\u003E and the elements are \u003Cc\u003Ei0...iN\u003C/c\u003E then \n computes \u003Cc\u003Ef i0 (...(f iN-1 iN))\u003C/c\u003E. Raises ArgumentException if the array has size zero.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#fold2","title":"ResizeArray.fold2","content":"ResizeArray.fold2 \nfold2 \n\n Apply a function to pairs of elements drawn from the two collections, \n left-to-right, threading an accumulator argument\n through the computation.  The two input\n arrays must have the same lengths, otherwise an \u003Cc\u003EArgumentException\u003C/c\u003E is\n raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#foldBack2","title":"ResizeArray.foldBack2","content":"ResizeArray.foldBack2 \nfoldBack2 \n\n Apply a function to pairs of elements drawn from the two collections, right-to-left, \n threading an accumulator argument through the computation.  The two input\n arrays must have the same lengths, otherwise an \u003Cc\u003EArgumentException\u003C/c\u003E is\n raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#forall2","title":"ResizeArray.forall2","content":"ResizeArray.forall2 \nforall2 \n\n Test elements of the two arrays pairwise to see if all pairs of elements satisfy the given predicate.\n Raise ArgumentException if the arrays have different lengths.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#isEmpty","title":"ResizeArray.isEmpty","content":"ResizeArray.isEmpty \nisEmpty \n\n Return true if the given array is empty, otherwise false\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#iteri2","title":"ResizeArray.iteri2","content":"ResizeArray.iteri2 \niteri2 \n\n Apply the given function to pair of elements drawn from matching indices in two arrays,\n also passing the index of the elements. The two arrays must have the same lengths, \n otherwise an \u003Cc\u003EArgumentException\u003C/c\u003E is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#mapi2","title":"ResizeArray.mapi2","content":"ResizeArray.mapi2 \nmapi2 \n\n Build a new collection whose elements are the results of applying the given function\n to the corresponding elements of the two collections pairwise.  The two input\n arrays must have the same lengths, otherwise an \u003Cc\u003EArgumentException\u003C/c\u003E is\n raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#scan","title":"ResizeArray.scan","content":"ResizeArray.scan \nscan \n\n Like \u003Cc\u003Efold\u003C/c\u003E, but return the intermediary and final results\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#scanBack","title":"ResizeArray.scanBack","content":"ResizeArray.scanBack \nscanBack \n\n Like \u003Cc\u003EfoldBack\u003C/c\u003E, but return both the intermediary and final results\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#singleton","title":"ResizeArray.singleton","content":"ResizeArray.singleton \nsingleton \n\n Return an array containing the given element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#tryFindIndex","title":"ResizeArray.tryFindIndex","content":"ResizeArray.tryFindIndex \ntryFindIndex \n\n Return the index of the first element in the array\n that satisfies the given predicate.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#tryFindIndexi","title":"ResizeArray.tryFindIndexi","content":"ResizeArray.tryFindIndexi \ntryFindIndexi \n\n Return the index of the first element in the array\n that satisfies the given predicate.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#zip","title":"ResizeArray.zip","content":"ResizeArray.zip \nzip \n\n Combine the two arrays into an array of pairs. The two arrays must have equal lengths, otherwise an \u003Cc\u003EArgumentException\u003C/c\u003E is\n raised..\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#unzip","title":"ResizeArray.unzip","content":"ResizeArray.unzip \nunzip \n\n Split an array of pairs into two arrays\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#distinctBy","title":"ResizeArray.distinctBy","content":"ResizeArray.distinctBy \ndistinctBy \n\n Returns an array that contains no duplicate entries according to the \n generic hash and equality comparisons on the keys returned by the given key-generating function.\n If an element occurs multiple times in the array then the later occurrences are discarded.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-resizearray.html#distinct","title":"ResizeArray.distinct","content":"ResizeArray.distinct \ndistinct \n\n Returns an array that contains no duplicate entries according to generic hash and\n equality comparisons on the entries.\n If an element occurs multiple times in the array then the later occurrences are discarded.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html","title":"Seq","content":"Seq \n\n Extensions for F#\u0027s Seq module.\n \nSeq.cons \ncons \nSeq.unCons \nunCons \nSeq.index \nindex \nSeq.tryFindWithIndex \ntryFindWithIndex \nSeq.lift2 \nlift2 \nSeq.iterBreak \niterBreak \nSeq.tryAverage \ntryAverage \nSeq.splitAt \nsplitAt \nSeq.span \nspan \nSeq.groupNeighboursBy \ngroupNeighboursBy \nSeq.ofStreamReader \nofStreamReader \nSeq.ofStreamByByte \nofStreamByByte \nSeq.ofStreamByChunk \nofStreamByChunk \nSeq.asCircular \nasCircular \nSeq.asCircularOnLoop \nasCircularOnLoop \nSeq.asCircularWithBreak \nasCircularWithBreak \nSeq.tryHead \ntryHead \nSeq.tail \ntail \nSeq.tailNoFail \ntailNoFail \nSeq.tryNth \ntryNth \nSeq.skipNoFail \nskipNoFail \nSeq.repeat \nrepeat \nSeq.contract \ncontract \nSeq.combine \ncombine \nSeq.grow \ngrow \nSeq.page \npage \nSeq.prependToAll \nprependToAll \nSeq.intersperse \nintersperse \nSeq.catOptions \ncatOptions \nSeq.choice1s \nchoice1s \nSeq.choice2s \nchoice2s \nSeq.partitionChoices \npartitionChoices \nSeq.equalsWith \nequalsWith"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#cons","title":"Seq.cons","content":"Seq.cons \ncons \n\n Prepends \u0060x\u0060 to the seq \u0060xs\u0060\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#unCons","title":"Seq.unCons","content":"Seq.unCons \nunCons \n\n Returns the head and tail of the seq. If the seq is empty, returns \u0060None\u0060.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#index","title":"Seq.index","content":"Seq.index \nindex \n\n Adds an index to a sequence\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#tryFindWithIndex","title":"Seq.tryFindWithIndex","content":"Seq.tryFindWithIndex \ntryFindWithIndex \n\n Returns the first element (with its index) for which the given function returns true.\n Return None if no such element exists.\n "},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#lift2","title":"Seq.lift2","content":"Seq.lift2 \nlift2 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#iterBreak","title":"Seq.iterBreak","content":"Seq.iterBreak \niterBreak \n\n Will iterate the current sequence until the given predicate is satisfied\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#tryAverage","title":"Seq.tryAverage","content":"Seq.tryAverage \ntryAverage \n\n The same as Seq.average except will return None if the seq is empty\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#splitAt","title":"Seq.splitAt","content":"Seq.splitAt \nsplitAt \n\n Splits a sequences at the given index\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#span","title":"Seq.span","content":"Seq.span \nspan \n\n Splits a sequences up to the point where the predicate holds\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#groupNeighboursBy","title":"Seq.groupNeighboursBy","content":"Seq.groupNeighboursBy \ngroupNeighboursBy \n\n Applies a key-generating function to each element of a sequence and yields a sequence of unique keys and a sequence of all elements that have each key.\n This function groups together only neighbouring elements in the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#ofStreamReader","title":"Seq.ofStreamReader","content":"Seq.ofStreamReader \nofStreamReader \n\n Converts a streamReader into a seq yielding on each line\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#ofStreamByByte","title":"Seq.ofStreamByByte","content":"Seq.ofStreamByByte \nofStreamByByte \n\n Converts a Stream into a sequence of bytes\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#ofStreamByChunk","title":"Seq.ofStreamByChunk","content":"Seq.ofStreamByChunk \nofStreamByChunk \n\n Converts a stream into a seq of byte[] where the array is of the length given\n Note: the last chunk maybe less than the given chunk size\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#asCircular","title":"Seq.asCircular","content":"Seq.asCircular \nasCircular \n\n Creates a infinite sequences of the given values\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#asCircularOnLoop","title":"Seq.asCircularOnLoop","content":"Seq.asCircularOnLoop \nasCircularOnLoop \n\n Creates a infinite sequences of the given values, executing the given function everytime the given seq is exhausted\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#asCircularWithBreak","title":"Seq.asCircularWithBreak","content":"Seq.asCircularWithBreak \nasCircularWithBreak \n\n Creates a infinite sequences of the given values returning None everytime the given seq is exhausted\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#tryHead","title":"Seq.tryHead","content":"Seq.tryHead \ntryHead \n\n A safe version of seq head\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#tail","title":"Seq.tail","content":"Seq.tail \ntail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#tailNoFail","title":"Seq.tailNoFail","content":"Seq.tailNoFail \ntailNoFail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#tryNth","title":"Seq.tryNth","content":"Seq.tryNth \ntryNth \n\n The same as Seq.nth except returns None if the sequence is empty or does not have enough elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#skipNoFail","title":"Seq.skipNoFail","content":"Seq.skipNoFail \nskipNoFail \n\n The same as Seq.skip except it returns empty if the sequence is empty or does not have enough elements.\n Alias for Enumerable.Skip\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#repeat","title":"Seq.repeat","content":"Seq.repeat \nrepeat \n\n Creates an infinite sequence of the given value\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#contract","title":"Seq.contract","content":"Seq.contract \ncontract \n\n Contracts a seq selecting every n values\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#combine","title":"Seq.combine","content":"Seq.combine \ncombine \n\n Creates a new collection whose elements are the results of applying the given function to the corresponding pairs of elements from the two sequences.\n Unlike Seq.map2, if one input sequence is shorter than the other then the remaining elements of the longer sequence are not ignored, they are yielded at the end of the resulting sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#grow","title":"Seq.grow","content":"Seq.grow \ngrow \n\n Replicates each element in the seq n-times\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#page","title":"Seq.page","content":"Seq.page \npage \n\n Pages the underlying sequence\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#prependToAll","title":"Seq.prependToAll","content":"Seq.prependToAll \nprependToAll \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#intersperse","title":"Seq.intersperse","content":"Seq.intersperse \nintersperse \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#catOptions","title":"Seq.catOptions","content":"Seq.catOptions \ncatOptions \n\n The catOptions function takes a list of Options and returns a seq of all the Some values.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#choice1s","title":"Seq.choice1s","content":"Seq.choice1s \nchoice1s \n\n Extracts from a seq of Choice all the Choice1Of2 elements. All the Choice1Of2 elements are extracted in order.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#choice2s","title":"Seq.choice2s","content":"Seq.choice2s \nchoice2s \n\n Extracts from a seq of Choice all the Choice2Of2 elements. All the Choice2Of2 elements are extracted in order.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#partitionChoices","title":"Seq.partitionChoices","content":"Seq.partitionChoices \npartitionChoices \n\n Partitions a seq of Choice into two seqs. All the Choice1Of2 elements are extracted, in order, to the first component of the output. Similarly the Choice2Of2 elements are extracted to the second component of the output.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-seq.html#equalsWith","title":"Seq.equalsWith","content":"Seq.equalsWith \nequalsWith \n\n Compares two sequences for equality using the given comparison function, element by element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html","title":"ByteString","content":"ByteString \n\n An ArraySegment with structural comparison and equality.\n \nByteString.( .ctor ) \n( .ctor ) \nByteString.( .ctor ) \n( .ctor ) \nByteString.GetEnumerator \nGetEnumerator \nByteString.Array \nArray \nByteString.Item \nItem \nByteString.Offset \nOffset \nByteString.Count \nCount \nByteString.Compare \nCompare"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#( .ctor )","title":"ByteString.( .ctor )","content":"ByteString.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#( .ctor )","title":"ByteString.( .ctor )","content":"ByteString.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#GetEnumerator","title":"ByteString.GetEnumerator","content":"ByteString.GetEnumerator \nGetEnumerator \n\n Gets an enumerator for the bytes stored in the byte string.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#Array","title":"ByteString.Array","content":"ByteString.Array \nArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#Item","title":"ByteString.Item","content":"ByteString.Item \nItem \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#Offset","title":"ByteString.Offset","content":"ByteString.Offset \nOffset \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#Count","title":"ByteString.Count","content":"ByteString.Count \nCount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-bytestring.html#Compare","title":"ByteString.Compare","content":"ByteString.Compare \nCompare \n\n Compares two byte strings based on their structure.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html","title":"DList\u003C\u0027T\u003E","content":"DList\u003C\u0027T\u003E \n\n DList is an ordered linear structure implementing the List signature (head, tail, cons),\n end-insertion (conj), and O(1) append. Ordering is by insertion history.\n DList is an implementation of [John Hughes\u0027 append list](http://dl.acm.org/citation.cfm?id=8475).\n \nDList\u003C\u0027T\u003E.Conj \nConj \nDList\u003C\u0027T\u003E.Cons \nCons \nDList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nDList\u003C\u0027T\u003E.Head \nHead \nDList\u003C\u0027T\u003E.TryTail \nTryTail \nDList\u003C\u0027T\u003E.TryUncons \nTryUncons \nDList\u003C\u0027T\u003E.Uncons \nUncons \nDList\u003C\u0027T\u003E.Length \nLength \nDList\u003C\u0027T\u003E.TryHead \nTryHead \nDList\u003C\u0027T\u003E.Tail \nTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#Conj","title":"DList\u003C\u0027T\u003E.Conj","content":"DList\u003C\u0027T\u003E.Conj \nConj \n\nO(1). Returns a new DList with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#Cons","title":"DList\u003C\u0027T\u003E.Cons","content":"DList\u003C\u0027T\u003E.Cons \nCons \n\nO(1). Returns a new DList with the element added to the front.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#IsEmpty","title":"DList\u003C\u0027T\u003E.IsEmpty","content":"DList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the DList has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#Head","title":"DList\u003C\u0027T\u003E.Head","content":"DList\u003C\u0027T\u003E.Head \nHead \n\nO(log n). Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#TryTail","title":"DList\u003C\u0027T\u003E.TryTail","content":"DList\u003C\u0027T\u003E.TryTail \nTryTail \n\nO(log n). Returns option DList of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#TryUncons","title":"DList\u003C\u0027T\u003E.TryUncons","content":"DList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(log n). Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#Uncons","title":"DList\u003C\u0027T\u003E.Uncons","content":"DList\u003C\u0027T\u003E.Uncons \nUncons \n\nO(log n). Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#Length","title":"DList\u003C\u0027T\u003E.Length","content":"DList\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#TryHead","title":"DList\u003C\u0027T\u003E.TryHead","content":"DList\u003C\u0027T\u003E.TryHead \nTryHead \n\nO(log n). Returns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-dlist-1.html#Tail","title":"DList\u003C\u0027T\u003E.Tail","content":"DList\u003C\u0027T\u003E.Tail \nTail \n\nO(log n). Returns a new DList of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html","title":"Deque\u003C\u0027T\u003E","content":"Deque\u003C\u0027T\u003E \n\n Double-ended queue is an ordered linear linear structure implementing the signature of List\n (head, tail, cons) as well as the mirror-image Vector signature (last, initial, conj). \u0022head\u0022 inspects\n the first or left-most element in the structure, while \u0022last\u0022 inspects the last or\n right-most element. \u0022rev\u0022 (reverse) has time complexity O(1). Ordering is by insertion history.\n \nDeque\u003C\u0027T\u003E.Conj \nConj \nDeque\u003C\u0027T\u003E.Cons \nCons \nDeque\u003C\u0027T\u003E.TryUnconj \nTryUnconj \nDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \nDeque\u003C\u0027T\u003E.Head \nHead \nDeque\u003C\u0027T\u003E.Rev \nRev \nDeque\u003C\u0027T\u003E.Length \nLength \nDeque\u003C\u0027T\u003E.Last \nLast \nDeque\u003C\u0027T\u003E.Unconj \nUnconj \nDeque\u003C\u0027T\u003E.Tail \nTail \nDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nDeque\u003C\u0027T\u003E.Uncons \nUncons \nDeque\u003C\u0027T\u003E.TryInitial \nTryInitial \nDeque\u003C\u0027T\u003E.Initial \nInitial \nDeque\u003C\u0027T\u003E.TryTail \nTryTail \nDeque\u003C\u0027T\u003E.TryLast \nTryLast \nDeque\u003C\u0027T\u003E.TryHead \nTryHead"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Conj","title":"Deque\u003C\u0027T\u003E.Conj","content":"Deque\u003C\u0027T\u003E.Conj \nConj \n\nO(1). Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Cons","title":"Deque\u003C\u0027T\u003E.Cons","content":"Deque\u003C\u0027T\u003E.Cons \nCons \n\nO(1). Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#TryUnconj","title":"Deque\u003C\u0027T\u003E.TryUnconj","content":"Deque\u003C\u0027T\u003E.TryUnconj \nTryUnconj \n\nO(1) amortized, O(n), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#TryUncons","title":"Deque\u003C\u0027T\u003E.TryUncons","content":"Deque\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1) amortized, O(n), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Head","title":"Deque\u003C\u0027T\u003E.Head","content":"Deque\u003C\u0027T\u003E.Head \nHead \n\nO(1) amortized, O(n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Rev","title":"Deque\u003C\u0027T\u003E.Rev","content":"Deque\u003C\u0027T\u003E.Rev \nRev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Length","title":"Deque\u003C\u0027T\u003E.Length","content":"Deque\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Last","title":"Deque\u003C\u0027T\u003E.Last","content":"Deque\u003C\u0027T\u003E.Last \nLast \n\nO(1) amortized, O(n), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Unconj","title":"Deque\u003C\u0027T\u003E.Unconj","content":"Deque\u003C\u0027T\u003E.Unconj \nUnconj \n\nO(1) amortized, O(n), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Tail","title":"Deque\u003C\u0027T\u003E.Tail","content":"Deque\u003C\u0027T\u003E.Tail \nTail \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#IsEmpty","title":"Deque\u003C\u0027T\u003E.IsEmpty","content":"Deque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Uncons","title":"Deque\u003C\u0027T\u003E.Uncons","content":"Deque\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1) amortized, O(n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#TryInitial","title":"Deque\u003C\u0027T\u003E.TryInitial","content":"Deque\u003C\u0027T\u003E.TryInitial \nTryInitial \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#Initial","title":"Deque\u003C\u0027T\u003E.Initial","content":"Deque\u003C\u0027T\u003E.Initial \nInitial \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#TryTail","title":"Deque\u003C\u0027T\u003E.TryTail","content":"Deque\u003C\u0027T\u003E.TryTail \nTryTail \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#TryLast","title":"Deque\u003C\u0027T\u003E.TryLast","content":"Deque\u003C\u0027T\u003E.TryLast \nTryLast \n\nO(1) amortized, O(n), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-deque-1.html#TryHead","title":"Deque\u003C\u0027T\u003E.TryHead","content":"Deque\u003C\u0027T\u003E.TryHead \nTryHead \n\nO(1) amortized, O(n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html","title":"Heap\u003C\u0027T\u003E","content":"Heap\u003C\u0027T\u003E \n\n Heap is an ordered linear structure where the ordering is either ascending or descending.\n \u0022head\u0022 inspects the first element in the ordering, \u0022tail\u0022 takes the remaining structure\n after head, and \u0022insert\u0022 places elements within the ordering. PriorityQueue is available\n as an alternate interface.\n According to Okasaki the time complexity of the heap functions in this Heap implementation\n (based on the \u0022pairing\u0022 heap) have \u0022resisted\u0022 time complexity analysis.\n \nHeap\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nHeap\u003C\u0027T\u003E.Insert \nInsert \nHeap\u003C\u0027T\u003E.Merge \nMerge \nHeap\u003C\u0027T\u003E.Rev \nRev \nHeap\u003C\u0027T\u003E.Tail \nTail \nHeap\u003C\u0027T\u003E.TryMerge \nTryMerge \nHeap\u003C\u0027T\u003E.TryTail \nTryTail \nHeap\u003C\u0027T\u003E.TryUncons \nTryUncons \nHeap\u003C\u0027T\u003E.Uncons \nUncons \nHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nHeap\u003C\u0027T\u003E.Head \nHead \nHeap\u003C\u0027T\u003E.IsDescending \nIsDescending \nHeap\u003C\u0027T\u003E.Length \nLength \nHeap\u003C\u0027T\u003E.TryHead \nTryHead"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#( .ctor )","title":"Heap\u003C\u0027T\u003E.( .ctor )","content":"Heap\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#Insert","title":"Heap\u003C\u0027T\u003E.Insert","content":"Heap\u003C\u0027T\u003E.Insert \nInsert \n\nO(log n) amortized time. Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#Merge","title":"Heap\u003C\u0027T\u003E.Merge","content":"Heap\u003C\u0027T\u003E.Merge \nMerge \n\nO(log n) amortized time. Returns heap from merging two heaps, both must have same descending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#Rev","title":"Heap\u003C\u0027T\u003E.Rev","content":"Heap\u003C\u0027T\u003E.Rev \nRev \n\nO(n log n). Returns heap reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#Tail","title":"Heap\u003C\u0027T\u003E.Tail","content":"Heap\u003C\u0027T\u003E.Tail \nTail \n\nO(log n) amortized time. Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#TryMerge","title":"Heap\u003C\u0027T\u003E.TryMerge","content":"Heap\u003C\u0027T\u003E.TryMerge \nTryMerge \n\nO(log n) amortized time. Returns heap option from merging two heaps.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#TryTail","title":"Heap\u003C\u0027T\u003E.TryTail","content":"Heap\u003C\u0027T\u003E.TryTail \nTryTail \n\nO(log n) amortized time. Returns option heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#TryUncons","title":"Heap\u003C\u0027T\u003E.TryUncons","content":"Heap\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(log n) amortized time. Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#Uncons","title":"Heap\u003C\u0027T\u003E.Uncons","content":"Heap\u003C\u0027T\u003E.Uncons \nUncons \n\nO(log n) amortized time. Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#IsEmpty","title":"Heap\u003C\u0027T\u003E.IsEmpty","content":"Heap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#Head","title":"Heap\u003C\u0027T\u003E.Head","content":"Heap\u003C\u0027T\u003E.Head \nHead \n\nO(1) worst case. Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#IsDescending","title":"Heap\u003C\u0027T\u003E.IsDescending","content":"Heap\u003C\u0027T\u003E.IsDescending \nIsDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#Length","title":"Heap\u003C\u0027T\u003E.Length","content":"Heap\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heap-1.html#TryHead","title":"Heap\u003C\u0027T\u003E.TryHead","content":"Heap\u003C\u0027T\u003E.TryHead \nTryHead \n\nO(1) worst case. Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heapdata-1.html","title":"HeapData\u003C\u0027T\u003E","content":"HeapData\u003C\u0027T\u003E \n \nHeapData\u003C\u0027T\u003E.E \nE \nHeapData\u003C\u0027T\u003E.T \nT"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heapdata-1.html#E","title":"HeapData\u003C\u0027T\u003E.E","content":"HeapData\u003C\u0027T\u003E.E \nE \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-heapdata-1.html#T","title":"HeapData\u003C\u0027T\u003E.T","content":"HeapData\u003C\u0027T\u003E.T \nT \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html","title":"IPriorityQueue\u003C\u0027T\u003E","content":"IPriorityQueue\u003C\u0027T\u003E \n \nIPriorityQueue\u003C\u0027T\u003E.Insert \nInsert \nIPriorityQueue\u003C\u0027T\u003E.Peek \nPeek \nIPriorityQueue\u003C\u0027T\u003E.Pop \nPop \nIPriorityQueue\u003C\u0027T\u003E.TryPeek \nTryPeek \nIPriorityQueue\u003C\u0027T\u003E.TryPop \nTryPop \nIPriorityQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nIPriorityQueue\u003C\u0027T\u003E.Length \nLength"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html#Insert","title":"IPriorityQueue\u003C\u0027T\u003E.Insert","content":"IPriorityQueue\u003C\u0027T\u003E.Insert \nInsert \n\nreturns a new queue with the element added to the end\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html#Peek","title":"IPriorityQueue\u003C\u0027T\u003E.Peek","content":"IPriorityQueue\u003C\u0027T\u003E.Peek \nPeek \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html#Pop","title":"IPriorityQueue\u003C\u0027T\u003E.Pop","content":"IPriorityQueue\u003C\u0027T\u003E.Pop \nPop \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html#TryPeek","title":"IPriorityQueue\u003C\u0027T\u003E.TryPeek","content":"IPriorityQueue\u003C\u0027T\u003E.TryPeek \nTryPeek \n\nreturns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html#TryPop","title":"IPriorityQueue\u003C\u0027T\u003E.TryPop","content":"IPriorityQueue\u003C\u0027T\u003E.TryPop \nTryPop \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html#IsEmpty","title":"IPriorityQueue\u003C\u0027T\u003E.IsEmpty","content":"IPriorityQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-ipriorityqueue-1.html#Length","title":"IPriorityQueue\u003C\u0027T\u003E.Length","content":"IPriorityQueue\u003C\u0027T\u003E.Length \nLength \n\nreturns the count of the elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html","title":"LazyList\u003C\u0027T\u003E","content":"LazyList\u003C\u0027T\u003E \n\n LazyLists are possibly-infinite, cached sequences.  See also IEnumerable/Seq for\n uncached sequences. LazyLists normally involve delayed computations without\n side-effects.  The results of these computations are cached and evaluations will be\n performed only once for each element of the lazy list.  In contrast, for sequences\n (IEnumerable) recomputation happens each time an enumerator is created and the sequence\n traversed.\n\n LazyLists can represent cached, potentially-infinite computations.  Because they are\n cached they may cause memory leaks if some active code or data structure maintains a\n live reference to the head of an infinite or very large lazy list while iterating it,\n or if a reference is maintained after the list is no longer required.\n\n Lazy lists may be matched using the LazyList.Cons and LazyList.Nil active patterns.\n These may force the computation of elements of the list.\n \nLazyList\u003C\u0027T\u003E.Length \nLength \nLazyList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nLazyList\u003C\u0027T\u003E.Head \nHead \nLazyList\u003C\u0027T\u003E.TryTail \nTryTail \nLazyList\u003C\u0027T\u003E.TryUncons \nTryUncons \nLazyList\u003C\u0027T\u003E.Uncons \nUncons \nLazyList\u003C\u0027T\u003E.TryHead \nTryHead \nLazyList\u003C\u0027T\u003E.Tail \nTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#Length","title":"LazyList\u003C\u0027T\u003E.Length","content":"LazyList\u003C\u0027T\u003E.Length \nLength \n\nO(n). Return the length of the list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#IsEmpty","title":"LazyList\u003C\u0027T\u003E.IsEmpty","content":"LazyList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Test if a list is empty.  Forces the evaluation of\n the first element of the stream if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#Head","title":"LazyList\u003C\u0027T\u003E.Head","content":"LazyList\u003C\u0027T\u003E.Head \nHead \n\nO(1). Return the first element of the list.  Forces the evaluation of\n the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#TryTail","title":"LazyList\u003C\u0027T\u003E.TryTail","content":"LazyList\u003C\u0027T\u003E.TryTail \nTryTail \n\nO(1). Return option the list corresponding to the remaining items in the sequence.\n Forces the evaluation of the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#TryUncons","title":"LazyList\u003C\u0027T\u003E.TryUncons","content":"LazyList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1). Returns option tuple of head element and tail of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#Uncons","title":"LazyList\u003C\u0027T\u003E.Uncons","content":"LazyList\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1). Returns tuple of head element and tail of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#TryHead","title":"LazyList\u003C\u0027T\u003E.TryHead","content":"LazyList\u003C\u0027T\u003E.TryHead \nTryHead \n\nO(1). Return option the first element of the list.  Forces the evaluation of\n the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-lazylist-1.html#Tail","title":"LazyList\u003C\u0027T\u003E.Tail","content":"LazyList\u003C\u0027T\u003E.Tail \nTail \n\nO(1). Return the list corresponding to the remaining items in the sequence.\n Forces the evaluation of the first cell of the list if it is not already evaluated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist-1.html","title":"NonEmptyList\u003C\u0027T\u003E","content":"NonEmptyList\u003C\u0027T\u003E \n \nNonEmptyList\u003C\u0027T\u003E.Head \nHead \nNonEmptyList\u003C\u0027T\u003E.Length \nLength \nNonEmptyList\u003C\u0027T\u003E.Tail \nTail \nNonEmptyList\u003C\u0027T\u003E.List \nList"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist-1.html#Head","title":"NonEmptyList\u003C\u0027T\u003E.Head","content":"NonEmptyList\u003C\u0027T\u003E.Head \nHead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist-1.html#Length","title":"NonEmptyList\u003C\u0027T\u003E.Length","content":"NonEmptyList\u003C\u0027T\u003E.Length \nLength \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist-1.html#Tail","title":"NonEmptyList\u003C\u0027T\u003E.Tail","content":"NonEmptyList\u003C\u0027T\u003E.Tail \nTail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-nonemptylist-1.html#List","title":"NonEmptyList\u003C\u0027T\u003E.List","content":"NonEmptyList\u003C\u0027T\u003E.List \nList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E \n\n A Map is a collection that maps keys to values. Hash maps require keys that correctly support GetHashCode and Equals.\n Hash maps provide fast access (log32N hops). count is O(1).\n \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.Add \nAdd \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.ContainsKey \nContainsKey \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.Iterator \nIterator \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.Remove \nRemove \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.Item \nItem \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.Count \nCount \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.Length \nLength \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.Empty \nEmpty \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.ofSeq \nofSeq \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.count \ncount \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.root \nroot \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.hasNull \nhasNull \nPersistentHashMap\u003C\u0027T, \u0027S\u003E.nullValue \nnullValue"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#Add","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Add","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Add \nAdd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#ContainsKey","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.ContainsKey","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.ContainsKey \nContainsKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#Iterator","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Iterator","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Iterator \nIterator \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#Remove","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Remove","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Remove \nRemove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#Item","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Item","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Item \nItem \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#Count","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Count","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Count \nCount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#Length","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Length","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Length \nLength \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#Empty","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Empty","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.Empty \nEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#ofSeq","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.ofSeq","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.ofSeq \nofSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#count","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.count","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.count \ncount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#root","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.root","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.root \nroot \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#hasNull","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.hasNull","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.hasNull \nhasNull \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistenthashmap-2.html#nullValue","title":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.nullValue","content":"PersistentHashMap\u003C\u0027T, \u0027S\u003E.nullValue \nnullValue \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html","title":"PersistentVector\u003C\u0027T\u003E","content":"PersistentVector\u003C\u0027T\u003E \n\n PersistentVector is an ordered linear structure implementing the inverse of the List signature,\n (last, initial, conj) in place of (head, tail, cons). Length is O(1). Indexed lookup or update\n (returning a new immutable instance of Vector) of any element is O(log32n), which is close enough\n to O(1) as to make no practical difference: a PersistentVector containing 4 billion items can\n lookup or update any item in at most 7 steps.\n Ordering is by insertion history. The original idea can be found in [Clojure](http://clojure.org/data_structures).\n \nPersistentVector\u003C\u0027T\u003E.Conj \nConj \nPersistentVector\u003C\u0027T\u003E.Rev \nRev \nPersistentVector\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nPersistentVector\u003C\u0027T\u003E.Update \nUpdate \nPersistentVector\u003C\u0027T\u003E.Last \nLast \nPersistentVector\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nPersistentVector\u003C\u0027T\u003E.TryInitial \nTryInitial \nPersistentVector\u003C\u0027T\u003E.Initial \nInitial \nPersistentVector\u003C\u0027T\u003E.Item \nItem \nPersistentVector\u003C\u0027T\u003E.Unconj \nUnconj \nPersistentVector\u003C\u0027T\u003E.TryLast \nTryLast \nPersistentVector\u003C\u0027T\u003E.Length \nLength \nPersistentVector\u003C\u0027T\u003E.TryUnconj \nTryUnconj \nPersistentVector\u003C\u0027T\u003E.Empty \nEmpty"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Conj","title":"PersistentVector\u003C\u0027T\u003E.Conj","content":"PersistentVector\u003C\u0027T\u003E.Conj \nConj \n\n O(1). Returns a new vector with the element added at the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Rev","title":"PersistentVector\u003C\u0027T\u003E.Rev","content":"PersistentVector\u003C\u0027T\u003E.Rev \nRev \n\n O(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#TryUpdate","title":"PersistentVector\u003C\u0027T\u003E.TryUpdate","content":"PersistentVector\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\n O(1) for all practical purposes; really O(log32n). Returns option vector that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Update","title":"PersistentVector\u003C\u0027T\u003E.Update","content":"PersistentVector\u003C\u0027T\u003E.Update \nUpdate \n\n O(1) for all practical purposes; really O(log32n). Returns a new vector that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Last","title":"PersistentVector\u003C\u0027T\u003E.Last","content":"PersistentVector\u003C\u0027T\u003E.Last \nLast \n\n O(1). Returns the last element in the vector. If the vector is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#IsEmpty","title":"PersistentVector\u003C\u0027T\u003E.IsEmpty","content":"PersistentVector\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\n O(1). Returns true if the vector has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#TryInitial","title":"PersistentVector\u003C\u0027T\u003E.TryInitial","content":"PersistentVector\u003C\u0027T\u003E.TryInitial \nTryInitial \n\n O(1) for all practical purposes; really O(log32n). Returns option vector without the last item.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Initial","title":"PersistentVector\u003C\u0027T\u003E.Initial","content":"PersistentVector\u003C\u0027T\u003E.Initial \nInitial \n\n O(1) for all practical purposes; really O(log32n). Returns a new vector without the last item. If the collection is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Item","title":"PersistentVector\u003C\u0027T\u003E.Item","content":"PersistentVector\u003C\u0027T\u003E.Item \nItem \n\n O(1) for all practical purposes; really O(log32n). Returns vector element at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Unconj","title":"PersistentVector\u003C\u0027T\u003E.Unconj","content":"PersistentVector\u003C\u0027T\u003E.Unconj \nUnconj \n\n O(1) for all practical purposes; really O(log32n). Returns tuple last element and vector without last item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#TryLast","title":"PersistentVector\u003C\u0027T\u003E.TryLast","content":"PersistentVector\u003C\u0027T\u003E.TryLast \nTryLast \n\n O(1). Returns option last element in the vector.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Length","title":"PersistentVector\u003C\u0027T\u003E.Length","content":"PersistentVector\u003C\u0027T\u003E.Length \nLength \n\n O(1). Returns the number of items in the vector.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#TryUnconj","title":"PersistentVector\u003C\u0027T\u003E.TryUnconj","content":"PersistentVector\u003C\u0027T\u003E.TryUnconj \nTryUnconj \n\n O(1) for all practical purposes; really O(log32n). Returns option tuple last element and vector without last item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-persistentvector-1.html#Empty","title":"PersistentVector\u003C\u0027T\u003E.Empty","content":"PersistentVector\u003C\u0027T\u003E.Empty \nEmpty \n\n O(1). Returns a new PersistentVector with no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html","title":"Queue\u003C\u0027T\u003E","content":"Queue\u003C\u0027T\u003E \n\n Queue is an ordered linear data structure where elements are added at the end (right)\n and inspected and removed at the beginning (left). Ordering is by insertion history.\n The qualities of the Queue structure make elements first in, first out (fifo).\n \u0022head\u0022 inspects the first or left-most element in the structure, while \u0022conj\u0022\n inserts an element at the end, or right of the structure.\n Purely functional (immutable) Queue based on Okasaki\u0027s batched queue.\n \nQueue\u003C\u0027T\u003E.Conj \nConj \nQueue\u003C\u0027T\u003E.Rev \nRev \nQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nQueue\u003C\u0027T\u003E.Head \nHead \nQueue\u003C\u0027T\u003E.TryTail \nTryTail \nQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \nQueue\u003C\u0027T\u003E.Uncons \nUncons \nQueue\u003C\u0027T\u003E.Length \nLength \nQueue\u003C\u0027T\u003E.TryHead \nTryHead \nQueue\u003C\u0027T\u003E.Tail \nTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#Conj","title":"Queue\u003C\u0027T\u003E.Conj","content":"Queue\u003C\u0027T\u003E.Conj \nConj \n\nO(1). Returns a new queue with the element added to the end. (Enqueue)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#Rev","title":"Queue\u003C\u0027T\u003E.Rev","content":"Queue\u003C\u0027T\u003E.Rev \nRev \n\nO(n). Returns queue reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#IsEmpty","title":"Queue\u003C\u0027T\u003E.IsEmpty","content":"Queue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the queue has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#Head","title":"Queue\u003C\u0027T\u003E.Head","content":"Queue\u003C\u0027T\u003E.Head \nHead \n\nO(1). Returns the first element. (Peek)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#TryTail","title":"Queue\u003C\u0027T\u003E.TryTail","content":"Queue\u003C\u0027T\u003E.TryTail \nTryTail \n\nO(1) amortized, O(n) worst-case. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#TryUncons","title":"Queue\u003C\u0027T\u003E.TryUncons","content":"Queue\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1) amortized, O(n) worst-case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#Uncons","title":"Queue\u003C\u0027T\u003E.Uncons","content":"Queue\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1) amortized, O(n) worst-case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#Length","title":"Queue\u003C\u0027T\u003E.Length","content":"Queue\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elememts.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#TryHead","title":"Queue\u003C\u0027T\u003E.TryHead","content":"Queue\u003C\u0027T\u003E.TryHead \nTryHead \n\nO(1). Returns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-queue-1.html#Tail","title":"Queue\u003C\u0027T\u003E.Tail","content":"Queue\u003C\u0027T\u003E.Tail \nTail \n\nO(1) amortized, O(n) worst-case. Returns a new queue of the elements trailing the first element. (Dequeue)\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html","title":"RandomAccessList\u003C\u0027T\u003E","content":"RandomAccessList\u003C\u0027T\u003E \n\n RandomAccessList is an ordered linear structure implementing the List signature\n (head, tail, cons), as well as inspection (lookup) and update (returning a new\n immutable instance) of any element in the structure by index. Length is O(1). Indexed\n lookup or update (returning a new immutable instance of RandomAccessList) of any element\n is O(log32n), which is close enough to O(1) as to make no practical difference: a\n RandomAccessList containing 4 billion items can lookup or update any item in at most 7\n steps. Ordering is by insertion history. While PersistentVector\u0026lt;\u0027T\u0026gt; is appending to the\n end this version prepends elements to the list.\n \nRandomAccessList\u003C\u0027T\u003E.Cons \nCons \nRandomAccessList\u003C\u0027T\u003E.Rev \nRev \nRandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nRandomAccessList\u003C\u0027T\u003E.Update \nUpdate \nRandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nRandomAccessList\u003C\u0027T\u003E.Head \nHead \nRandomAccessList\u003C\u0027T\u003E.Item \nItem \nRandomAccessList\u003C\u0027T\u003E.TryTail \nTryTail \nRandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \nRandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \nRandomAccessList\u003C\u0027T\u003E.Length \nLength \nRandomAccessList\u003C\u0027T\u003E.TryHead \nTryHead \nRandomAccessList\u003C\u0027T\u003E.Tail \nTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Cons","title":"RandomAccessList\u003C\u0027T\u003E.Cons","content":"RandomAccessList\u003C\u0027T\u003E.Cons \nCons \n\n O(1). Returns a new random access list with the element added at the start.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Rev","title":"RandomAccessList\u003C\u0027T\u003E.Rev","content":"RandomAccessList\u003C\u0027T\u003E.Rev \nRev \n\n O(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#TryUpdate","title":"RandomAccessList\u003C\u0027T\u003E.TryUpdate","content":"RandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\n O(1) for all practical purposes; really O(log32n). Returns option random access list that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Update","title":"RandomAccessList\u003C\u0027T\u003E.Update","content":"RandomAccessList\u003C\u0027T\u003E.Update \nUpdate \n\n O(1) for all practical purposes; really O(log32n). Returns a new random access list that contains the given value at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#IsEmpty","title":"RandomAccessList\u003C\u0027T\u003E.IsEmpty","content":"RandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\n O(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Head","title":"RandomAccessList\u003C\u0027T\u003E.Head","content":"RandomAccessList\u003C\u0027T\u003E.Head \nHead \n\n O(1). Returns the first element in the random access list. If the random access list is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Item","title":"RandomAccessList\u003C\u0027T\u003E.Item","content":"RandomAccessList\u003C\u0027T\u003E.Item \nItem \n\n O(1) for all practical purposes; really O(log32n). Returns random access list element at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#TryTail","title":"RandomAccessList\u003C\u0027T\u003E.TryTail","content":"RandomAccessList\u003C\u0027T\u003E.TryTail \nTryTail \n\n O(1) for all practical purposes; really O(log32n). Returns option random access list without the first item.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#TryUncons","title":"RandomAccessList\u003C\u0027T\u003E.TryUncons","content":"RandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\n O(1) for all practical purposes; really O(log32n). Returns option tuple first element and random access list without first item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Uncons","title":"RandomAccessList\u003C\u0027T\u003E.Uncons","content":"RandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \n\n O(1) for all practical purposes; really O(log32n). Returns tuple first element and random access list without first item\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Length","title":"RandomAccessList\u003C\u0027T\u003E.Length","content":"RandomAccessList\u003C\u0027T\u003E.Length \nLength \n\n O(1). Returns the number of items in the random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#TryHead","title":"RandomAccessList\u003C\u0027T\u003E.TryHead","content":"RandomAccessList\u003C\u0027T\u003E.TryHead \nTryHead \n\n O(1). Returns option first element in the random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-randomaccesslist-1.html#Tail","title":"RandomAccessList\u003C\u0027T\u003E.Tail","content":"RandomAccessList\u003C\u0027T\u003E.Tail \nTail \n\n O(1) for all practical purposes; really O(log32n). Returns a new random access list without the first item. If the collection is empty it throws an exception.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html","title":"AltBinaryRandomAccessList","content":"AltBinaryRandomAccessList \n \nAltBinaryRandomAccessList.append \nappend \nAltBinaryRandomAccessList.cons \ncons \nAltBinaryRandomAccessList.head \nhead \nAltBinaryRandomAccessList.empty \nempty \nAltBinaryRandomAccessList.tryGetHead \ntryGetHead \nAltBinaryRandomAccessList.isEmpty \nisEmpty \nAltBinaryRandomAccessList.length \nlength \nAltBinaryRandomAccessList.lookup \nlookup \nAltBinaryRandomAccessList.tryLookup \ntryLookup \nAltBinaryRandomAccessList.ofSeq \nofSeq \nAltBinaryRandomAccessList.remove \nremove \nAltBinaryRandomAccessList.tryRemove \ntryRemove \nAltBinaryRandomAccessList.rev \nrev \nAltBinaryRandomAccessList.tail \ntail \nAltBinaryRandomAccessList.tryGetTail \ntryGetTail \nAltBinaryRandomAccessList.uncons \nuncons \nAltBinaryRandomAccessList.tryUncons \ntryUncons \nAltBinaryRandomAccessList.update \nupdate \nAltBinaryRandomAccessList.tryUpdate \ntryUpdate \nAltBinaryRandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#append","title":"AltBinaryRandomAccessList.append","content":"AltBinaryRandomAccessList.append \nappend \n\nO(xs). Returns random access list from elements of 2 random access lists concatenated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#cons","title":"AltBinaryRandomAccessList.cons","content":"AltBinaryRandomAccessList.cons \ncons \n\nO(log n). Returns a new random access list with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#head","title":"AltBinaryRandomAccessList.head","content":"AltBinaryRandomAccessList.head \nhead \n\nO(log n). Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#empty","title":"AltBinaryRandomAccessList.empty","content":"AltBinaryRandomAccessList.empty \nempty \n\nO(1). Returns a empty random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#tryGetHead","title":"AltBinaryRandomAccessList.tryGetHead","content":"AltBinaryRandomAccessList.tryGetHead \ntryGetHead \n\nO(log n). Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#isEmpty","title":"AltBinaryRandomAccessList.isEmpty","content":"AltBinaryRandomAccessList.isEmpty \nisEmpty \n\nO(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#length","title":"AltBinaryRandomAccessList.length","content":"AltBinaryRandomAccessList.length \nlength \n\nO(log n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#lookup","title":"AltBinaryRandomAccessList.lookup","content":"AltBinaryRandomAccessList.lookup \nlookup \n\nO(log n). Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#tryLookup","title":"AltBinaryRandomAccessList.tryLookup","content":"AltBinaryRandomAccessList.tryLookup \ntryLookup \n\nO(log n). Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#ofSeq","title":"AltBinaryRandomAccessList.ofSeq","content":"AltBinaryRandomAccessList.ofSeq \nofSeq \n\nO(n). Returns random access list from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#remove","title":"AltBinaryRandomAccessList.remove","content":"AltBinaryRandomAccessList.remove \nremove \n\nO(n). Returns random access list with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#tryRemove","title":"AltBinaryRandomAccessList.tryRemove","content":"AltBinaryRandomAccessList.tryRemove \ntryRemove \n\nO(n). Returns option random access list with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#rev","title":"AltBinaryRandomAccessList.rev","content":"AltBinaryRandomAccessList.rev \nrev \n\nO(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#tail","title":"AltBinaryRandomAccessList.tail","content":"AltBinaryRandomAccessList.tail \ntail \n\nO(log n). Returns a new random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#tryGetTail","title":"AltBinaryRandomAccessList.tryGetTail","content":"AltBinaryRandomAccessList.tryGetTail \ntryGetTail \n\nO(log n). Returns a option random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#uncons","title":"AltBinaryRandomAccessList.uncons","content":"AltBinaryRandomAccessList.uncons \nuncons \n\nO(log n). Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#tryUncons","title":"AltBinaryRandomAccessList.tryUncons","content":"AltBinaryRandomAccessList.tryUncons \ntryUncons \n\nO(log n). Returns the option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#update","title":"AltBinaryRandomAccessList.update","content":"AltBinaryRandomAccessList.update \nupdate \n\nO(log n). Returns random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#tryUpdate","title":"AltBinaryRandomAccessList.tryUpdate","content":"AltBinaryRandomAccessList.tryUpdate \ntryUpdate \n\nO(log n). Returns option random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinaryrandomaccesslist.html#( |Cons|Nil| )","title":"AltBinaryRandomAccessList.( |Cons|Nil| )","content":"AltBinaryRandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html","title":"BKTree","content":"BKTree \n \nBKTree.\u0027T Functions \n\u0027T Functions \nBKTree.isEmpty \nisEmpty \nBKTree.empty \nempty \nBKTree.size \nsize \nBKTree.singleton \nsingleton \nBKTree.toList \ntoList \nBKTree.toSeq \ntoSeq \nBKTree.toArray \ntoArray \nBKTree.Int \nInt \nBKTree.Char \nChar \nBKTree.List \nList \nBKTree.ByteString \nByteString"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#isEmpty","title":"BKTree.isEmpty","content":"BKTree.isEmpty \nisEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#empty","title":"BKTree.empty","content":"BKTree.empty \nempty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#size","title":"BKTree.size","content":"BKTree.size \nsize \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#singleton","title":"BKTree.singleton","content":"BKTree.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#toList","title":"BKTree.toList","content":"BKTree.toList \ntoList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#toSeq","title":"BKTree.toSeq","content":"BKTree.toSeq \ntoSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#toArray","title":"BKTree.toArray","content":"BKTree.toArray \ntoArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#Int","title":"BKTree.Int","content":"BKTree.Int \nInt \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#Char","title":"BKTree.Char","content":"BKTree.Char \nChar \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#List","title":"BKTree.List","content":"BKTree.List \nList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree.html#ByteString","title":"BKTree.ByteString","content":"BKTree.ByteString \nByteString \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html","title":"\u0027T Functions","content":"\u0027T Functions \n \n\u0027T Functions.( .ctor ) \n( .ctor ) \n\u0027T Functions.add \nadd \n\u0027T Functions.append \nappend \n\u0027T Functions.concat \nconcat \n\u0027T Functions.delete \ndelete \n\u0027T Functions.exists \nexists \n\u0027T Functions.existsDistance \nexistsDistance \n\u0027T Functions.ofArray \nofArray \n\u0027T Functions.ofList \nofList \n\u0027T Functions.ofSeq \nofSeq \n\u0027T Functions.toListDistance \ntoListDistance \n\u0027T Functions.distance \ndistance"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#( .ctor )","title":"\u0027T Functions.( .ctor )","content":"\u0027T Functions.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#add","title":"\u0027T Functions.add","content":"\u0027T Functions.add \nadd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#append","title":"\u0027T Functions.append","content":"\u0027T Functions.append \nappend \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#concat","title":"\u0027T Functions.concat","content":"\u0027T Functions.concat \nconcat \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#delete","title":"\u0027T Functions.delete","content":"\u0027T Functions.delete \ndelete \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#exists","title":"\u0027T Functions.exists","content":"\u0027T Functions.exists \nexists \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#existsDistance","title":"\u0027T Functions.existsDistance","content":"\u0027T Functions.existsDistance \nexistsDistance \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#ofArray","title":"\u0027T Functions.ofArray","content":"\u0027T Functions.ofArray \nofArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#ofList","title":"\u0027T Functions.ofList","content":"\u0027T Functions.ofList \nofList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#ofSeq","title":"\u0027T Functions.ofSeq","content":"\u0027T Functions.ofSeq \nofSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#toListDistance","title":"\u0027T Functions.toListDistance","content":"\u0027T Functions.toListDistance \ntoListDistance \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-functions-1.html#distance","title":"\u0027T Functions.distance","content":"\u0027T Functions.distance \ndistance \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html","title":"BankersDeque","content":"BankersDeque \n \nBankersDeque.append \nappend \nBankersDeque.appendC \nappendC \nBankersDeque.cons \ncons \nBankersDeque.empty \nempty \nBankersDeque.head \nhead \nBankersDeque.tryGetHead \ntryGetHead \nBankersDeque.init \ninit \nBankersDeque.tryGetInit \ntryGetInit \nBankersDeque.isEmpty \nisEmpty \nBankersDeque.last \nlast \nBankersDeque.tryGetLast \ntryGetLast \nBankersDeque.length \nlength \nBankersDeque.lookup \nlookup \nBankersDeque.tryLookup \ntryLookup \nBankersDeque.ofCatLists \nofCatLists \nBankersDeque.ofCatListsC \nofCatListsC \nBankersDeque.ofCatSeqs \nofCatSeqs \nBankersDeque.ofCatSeqsC \nofCatSeqsC \nBankersDeque.ofSeq \nofSeq \nBankersDeque.ofSeqC \nofSeqC \nBankersDeque.remove \nremove \nBankersDeque.tryRemove \ntryRemove \nBankersDeque.rev \nrev \nBankersDeque.singleton \nsingleton \nBankersDeque.singletonC \nsingletonC \nBankersDeque.snoc \nsnoc \nBankersDeque.tail \ntail \nBankersDeque.tryGetTail \ntryGetTail \nBankersDeque.uncons \nuncons \nBankersDeque.tryUncons \ntryUncons \nBankersDeque.unsnoc \nunsnoc \nBankersDeque.tryUnsnoc \ntryUnsnoc \nBankersDeque.update \nupdate \nBankersDeque.tryUpdate \ntryUpdate \nBankersDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \nBankersDeque.( |Snoc|Nil| ) \n( |Snoc|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#append","title":"BankersDeque.append","content":"BankersDeque.append \nappend \n\nO(ys-xs). Returns a deque of the two deques concatenated, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#appendC","title":"BankersDeque.appendC","content":"BankersDeque.appendC \nappendC \n\nO(ys-xs). Returns a deque of the two deques concatenated, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#cons","title":"BankersDeque.cons","content":"BankersDeque.cons \ncons \n\nO(1), amortized. Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#empty","title":"BankersDeque.empty","content":"BankersDeque.empty \nempty \n\nO(1). Returns deque of no elements, c is front-back stream ration constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#head","title":"BankersDeque.head","content":"BankersDeque.head \nhead \n\nO(1), amortized. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryGetHead","title":"BankersDeque.tryGetHead","content":"BankersDeque.tryGetHead \ntryGetHead \n\nO(1), amortized. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#init","title":"BankersDeque.init","content":"BankersDeque.init \ninit \n\nO(1), amortized. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryGetInit","title":"BankersDeque.tryGetInit","content":"BankersDeque.tryGetInit \ntryGetInit \n\nO(1), amortized. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#isEmpty","title":"BankersDeque.isEmpty","content":"BankersDeque.isEmpty \nisEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#last","title":"BankersDeque.last","content":"BankersDeque.last \nlast \n\nO(1), amortized. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryGetLast","title":"BankersDeque.tryGetLast","content":"BankersDeque.tryGetLast \ntryGetLast \n\nO(1), amortized. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#length","title":"BankersDeque.length","content":"BankersDeque.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#lookup","title":"BankersDeque.lookup","content":"BankersDeque.lookup \nlookup \n\nO(n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryLookup","title":"BankersDeque.tryLookup","content":"BankersDeque.tryLookup \ntryLookup \n\nO(n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#ofCatLists","title":"BankersDeque.ofCatLists","content":"BankersDeque.ofCatLists \nofCatLists \n\nO(ys-xs). Returns a deque of the two lists concatenated, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#ofCatListsC","title":"BankersDeque.ofCatListsC","content":"BankersDeque.ofCatListsC \nofCatListsC \n\nO(ys-xs). Returns a deque of the two lists concatenated, c is front-back stream ration constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#ofCatSeqs","title":"BankersDeque.ofCatSeqs","content":"BankersDeque.ofCatSeqs \nofCatSeqs \n\nO(ys). Returns a deque of the two seqs concatenated, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#ofCatSeqsC","title":"BankersDeque.ofCatSeqsC","content":"BankersDeque.ofCatSeqsC \nofCatSeqsC \n\nO(ys). Returns a deque of the two seqs concatenated, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#ofSeq","title":"BankersDeque.ofSeq","content":"BankersDeque.ofSeq \nofSeq \n\nO(1). Returns a deque of the seq, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#ofSeqC","title":"BankersDeque.ofSeqC","content":"BankersDeque.ofSeqC \nofSeqC \n\nO(1). Returns a deque of the seq, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#remove","title":"BankersDeque.remove","content":"BankersDeque.remove \nremove \n\nO(n), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryRemove","title":"BankersDeque.tryRemove","content":"BankersDeque.tryRemove \ntryRemove \n\nO(n), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#rev","title":"BankersDeque.rev","content":"BankersDeque.rev \nrev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#singleton","title":"BankersDeque.singleton","content":"BankersDeque.singleton \nsingleton \n\nO(1). Returns a deque of one element, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#singletonC","title":"BankersDeque.singletonC","content":"BankersDeque.singletonC \nsingletonC \n\nO(1). Returns a deque of one element, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#snoc","title":"BankersDeque.snoc","content":"BankersDeque.snoc \nsnoc \n\nO(1), amortized. Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tail","title":"BankersDeque.tail","content":"BankersDeque.tail \ntail \n\nO(1), amortized. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryGetTail","title":"BankersDeque.tryGetTail","content":"BankersDeque.tryGetTail \ntryGetTail \n\nO(1), amortized. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#uncons","title":"BankersDeque.uncons","content":"BankersDeque.uncons \nuncons \n\nO(1), amortized. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryUncons","title":"BankersDeque.tryUncons","content":"BankersDeque.tryUncons \ntryUncons \n\nO(1), amortized. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#unsnoc","title":"BankersDeque.unsnoc","content":"BankersDeque.unsnoc \nunsnoc \n\nO(1), amortized. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryUnsnoc","title":"BankersDeque.tryUnsnoc","content":"BankersDeque.tryUnsnoc \ntryUnsnoc \n\nO(1), amortized. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#update","title":"BankersDeque.update","content":"BankersDeque.update \nupdate \n\nO(n), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#tryUpdate","title":"BankersDeque.tryUpdate","content":"BankersDeque.tryUpdate \ntryUpdate \n\nO(n), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#( |Cons|Nil| )","title":"BankersDeque.( |Cons|Nil| )","content":"BankersDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque.html#( |Snoc|Nil| )","title":"BankersDeque.( |Snoc|Nil| )","content":"BankersDeque.( |Snoc|Nil| ) \n( |Snoc|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html","title":"BankersQueue","content":"BankersQueue \n \nBankersQueue.empty \nempty \nBankersQueue.head \nhead \nBankersQueue.tryGetHead \ntryGetHead \nBankersQueue.isEmpty \nisEmpty \nBankersQueue.length \nlength \nBankersQueue.ofSeq \nofSeq \nBankersQueue.rev \nrev \nBankersQueue.snoc \nsnoc \nBankersQueue.tail \ntail \nBankersQueue.tryGetTail \ntryGetTail \nBankersQueue.uncons \nuncons \nBankersQueue.tryUncons \ntryUncons \nBankersQueue.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#empty","title":"BankersQueue.empty","content":"BankersQueue.empty \nempty \n\nO(1). Returns queue of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#head","title":"BankersQueue.head","content":"BankersQueue.head \nhead \n\nO(1), amortized. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#tryGetHead","title":"BankersQueue.tryGetHead","content":"BankersQueue.tryGetHead \ntryGetHead \n\nO(1), amortized. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#isEmpty","title":"BankersQueue.isEmpty","content":"BankersQueue.isEmpty \nisEmpty \n\nO(1). Returns true if the queue has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#length","title":"BankersQueue.length","content":"BankersQueue.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#ofSeq","title":"BankersQueue.ofSeq","content":"BankersQueue.ofSeq \nofSeq \n\nO(1). Returns a queue of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#rev","title":"BankersQueue.rev","content":"BankersQueue.rev \nrev \n\nO(1). Returns queue reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#snoc","title":"BankersQueue.snoc","content":"BankersQueue.snoc \nsnoc \n\nO(1), amortized. Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#tail","title":"BankersQueue.tail","content":"BankersQueue.tail \ntail \n\nO(1), amortized. Returns a new queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#tryGetTail","title":"BankersQueue.tryGetTail","content":"BankersQueue.tryGetTail \ntryGetTail \n\nO(1), amortized. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#uncons","title":"BankersQueue.uncons","content":"BankersQueue.uncons \nuncons \n\nO(1), amortized. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#tryUncons","title":"BankersQueue.tryUncons","content":"BankersQueue.tryUncons \ntryUncons \n\nO(1), amortized. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue.html#( |Cons|Nil| )","title":"BankersQueue.( |Cons|Nil| )","content":"BankersQueue.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html","title":"BatchedDeque","content":"BatchedDeque \n \nBatchedDeque.cons \ncons \nBatchedDeque.empty \nempty \nBatchedDeque.head \nhead \nBatchedDeque.tryGetHead \ntryGetHead \nBatchedDeque.init \ninit \nBatchedDeque.tryGetInit \ntryGetInit \nBatchedDeque.isEmpty \nisEmpty \nBatchedDeque.last \nlast \nBatchedDeque.tryGetLast \ntryGetLast \nBatchedDeque.length \nlength \nBatchedDeque.lookup \nlookup \nBatchedDeque.tryLookup \ntryLookup \nBatchedDeque.ofCatLists \nofCatLists \nBatchedDeque.ofList \nofList \nBatchedDeque.ofSeq \nofSeq \nBatchedDeque.remove \nremove \nBatchedDeque.tryRemove \ntryRemove \nBatchedDeque.rev \nrev \nBatchedDeque.singleton \nsingleton \nBatchedDeque.snoc \nsnoc \nBatchedDeque.tail \ntail \nBatchedDeque.tryGetTail \ntryGetTail \nBatchedDeque.uncons \nuncons \nBatchedDeque.tryUncons \ntryUncons \nBatchedDeque.unsnoc \nunsnoc \nBatchedDeque.tryUnsnoc \ntryUnsnoc \nBatchedDeque.update \nupdate \nBatchedDeque.tryUpdate \ntryUpdate \nBatchedDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \nBatchedDeque.( |Snoc|Nil| ) \n( |Snoc|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#cons","title":"BatchedDeque.cons","content":"BatchedDeque.cons \ncons \n\nO(1). Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#empty","title":"BatchedDeque.empty","content":"BatchedDeque.empty \nempty \n\nO(1). Returns deque of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#head","title":"BatchedDeque.head","content":"BatchedDeque.head \nhead \n\nO(1) amortized, O(n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryGetHead","title":"BatchedDeque.tryGetHead","content":"BatchedDeque.tryGetHead \ntryGetHead \n\nO(1) amortized, O(n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#init","title":"BatchedDeque.init","content":"BatchedDeque.init \ninit \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryGetInit","title":"BatchedDeque.tryGetInit","content":"BatchedDeque.tryGetInit \ntryGetInit \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#isEmpty","title":"BatchedDeque.isEmpty","content":"BatchedDeque.isEmpty \nisEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#last","title":"BatchedDeque.last","content":"BatchedDeque.last \nlast \n\nO(1) amortized, O(n), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryGetLast","title":"BatchedDeque.tryGetLast","content":"BatchedDeque.tryGetLast \ntryGetLast \n\nO(1) amortized, O(n), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#length","title":"BatchedDeque.length","content":"BatchedDeque.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#lookup","title":"BatchedDeque.lookup","content":"BatchedDeque.lookup \nlookup \n\nO(n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryLookup","title":"BatchedDeque.tryLookup","content":"BatchedDeque.tryLookup \ntryLookup \n\nO(n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#ofCatLists","title":"BatchedDeque.ofCatLists","content":"BatchedDeque.ofCatLists \nofCatLists \n\nO(n), worst case. Returns a deque of the two lists concatenated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#ofList","title":"BatchedDeque.ofList","content":"BatchedDeque.ofList \nofList \n\nO(n), worst case. Returns a deque of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#ofSeq","title":"BatchedDeque.ofSeq","content":"BatchedDeque.ofSeq \nofSeq \n\nO(n), worst case. Returns a deque of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#remove","title":"BatchedDeque.remove","content":"BatchedDeque.remove \nremove \n\nO(n), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryRemove","title":"BatchedDeque.tryRemove","content":"BatchedDeque.tryRemove \ntryRemove \n\nO(n), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#rev","title":"BatchedDeque.rev","content":"BatchedDeque.rev \nrev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#singleton","title":"BatchedDeque.singleton","content":"BatchedDeque.singleton \nsingleton \n\nO(1). Returns a deque of one element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#snoc","title":"BatchedDeque.snoc","content":"BatchedDeque.snoc \nsnoc \n\nO(1). Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tail","title":"BatchedDeque.tail","content":"BatchedDeque.tail \ntail \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryGetTail","title":"BatchedDeque.tryGetTail","content":"BatchedDeque.tryGetTail \ntryGetTail \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#uncons","title":"BatchedDeque.uncons","content":"BatchedDeque.uncons \nuncons \n\nO(1) amortized, O(n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryUncons","title":"BatchedDeque.tryUncons","content":"BatchedDeque.tryUncons \ntryUncons \n\nO(1) amortized, O(n), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#unsnoc","title":"BatchedDeque.unsnoc","content":"BatchedDeque.unsnoc \nunsnoc \n\nO(1) amortized, O(n), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryUnsnoc","title":"BatchedDeque.tryUnsnoc","content":"BatchedDeque.tryUnsnoc \ntryUnsnoc \n\nO(1) amortized, O(n), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#update","title":"BatchedDeque.update","content":"BatchedDeque.update \nupdate \n\nO(n), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#tryUpdate","title":"BatchedDeque.tryUpdate","content":"BatchedDeque.tryUpdate \ntryUpdate \n\nO(n), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#( |Cons|Nil| )","title":"BatchedDeque.( |Cons|Nil| )","content":"BatchedDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque.html#( |Snoc|Nil| )","title":"BatchedDeque.( |Snoc|Nil| )","content":"BatchedDeque.( |Snoc|Nil| ) \n( |Snoc|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html","title":"BatchedQueue","content":"BatchedQueue \n \nBatchedQueue.empty \nempty \nBatchedQueue.fold \nfold \nBatchedQueue.foldBack \nfoldBack \nBatchedQueue.head \nhead \nBatchedQueue.tryGetHead \ntryGetHead \nBatchedQueue.isEmpty \nisEmpty \nBatchedQueue.length \nlength \nBatchedQueue.ofList \nofList \nBatchedQueue.ofSeq \nofSeq \nBatchedQueue.rev \nrev \nBatchedQueue.snoc \nsnoc \nBatchedQueue.tail \ntail \nBatchedQueue.tryGetTail \ntryGetTail \nBatchedQueue.uncons \nuncons \nBatchedQueue.tryUncons \ntryUncons \nBatchedQueue.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#empty","title":"BatchedQueue.empty","content":"BatchedQueue.empty \nempty \n\nreturns queue of no elements\nc is front-back stream ration constant, should be at least 2\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#fold","title":"BatchedQueue.fold","content":"BatchedQueue.fold \nfold \n\napplies a function to each element of the queue, threading an accumulator argument through the computation, left to right\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#foldBack","title":"BatchedQueue.foldBack","content":"BatchedQueue.foldBack \nfoldBack \n\napplies a function to each element of the queue, threading an accumulator argument through the computation, right to left\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#head","title":"BatchedQueue.head","content":"BatchedQueue.head \nhead \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#tryGetHead","title":"BatchedQueue.tryGetHead","content":"BatchedQueue.tryGetHead \ntryGetHead \n\nreturns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#isEmpty","title":"BatchedQueue.isEmpty","content":"BatchedQueue.isEmpty \nisEmpty \n\nreturns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#length","title":"BatchedQueue.length","content":"BatchedQueue.length \nlength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#ofList","title":"BatchedQueue.ofList","content":"BatchedQueue.ofList \nofList \n\nreturns a queue of the list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#ofSeq","title":"BatchedQueue.ofSeq","content":"BatchedQueue.ofSeq \nofSeq \n\nreturns a queue of the seq\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#rev","title":"BatchedQueue.rev","content":"BatchedQueue.rev \nrev \n\nreturns queue reversed\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#snoc","title":"BatchedQueue.snoc","content":"BatchedQueue.snoc \nsnoc \n\nreturns a new queue with the element added to the end\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#tail","title":"BatchedQueue.tail","content":"BatchedQueue.tail \ntail \n\nreturns a new queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#tryGetTail","title":"BatchedQueue.tryGetTail","content":"BatchedQueue.tryGetTail \ntryGetTail \n\nreturns option queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#uncons","title":"BatchedQueue.uncons","content":"BatchedQueue.uncons \nuncons \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#tryUncons","title":"BatchedQueue.tryUncons","content":"BatchedQueue.tryUncons \ntryUncons \n\nreturns option first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue.html#( |Cons|Nil| )","title":"BatchedQueue.( |Cons|Nil| )","content":"BatchedQueue.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html","title":"BinaryRandomAccessList","content":"BinaryRandomAccessList \n \nBinaryRandomAccessList.cons \ncons \nBinaryRandomAccessList.head \nhead \nBinaryRandomAccessList.tryGetHead \ntryGetHead \nBinaryRandomAccessList.empty \nempty \nBinaryRandomAccessList.isEmpty \nisEmpty \nBinaryRandomAccessList.length \nlength \nBinaryRandomAccessList.lookup \nlookup \nBinaryRandomAccessList.tryLookup \ntryLookup \nBinaryRandomAccessList.ofSeq \nofSeq \nBinaryRandomAccessList.rev \nrev \nBinaryRandomAccessList.tail \ntail \nBinaryRandomAccessList.tryGetTail \ntryGetTail \nBinaryRandomAccessList.uncons \nuncons \nBinaryRandomAccessList.tryUncons \ntryUncons \nBinaryRandomAccessList.update \nupdate \nBinaryRandomAccessList.tryUpdate \ntryUpdate \nBinaryRandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#cons","title":"BinaryRandomAccessList.cons","content":"BinaryRandomAccessList.cons \ncons \n\nO(log n), worst case. Returns a new random access list with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#head","title":"BinaryRandomAccessList.head","content":"BinaryRandomAccessList.head \nhead \n\nO(log n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#tryGetHead","title":"BinaryRandomAccessList.tryGetHead","content":"BinaryRandomAccessList.tryGetHead \ntryGetHead \n\nO(log n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#empty","title":"BinaryRandomAccessList.empty","content":"BinaryRandomAccessList.empty \nempty \n\nO(1). Returns a empty random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#isEmpty","title":"BinaryRandomAccessList.isEmpty","content":"BinaryRandomAccessList.isEmpty \nisEmpty \n\nO(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#length","title":"BinaryRandomAccessList.length","content":"BinaryRandomAccessList.length \nlength \n\nO(log n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#lookup","title":"BinaryRandomAccessList.lookup","content":"BinaryRandomAccessList.lookup \nlookup \n\nO(log n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#tryLookup","title":"BinaryRandomAccessList.tryLookup","content":"BinaryRandomAccessList.tryLookup \ntryLookup \n\nO(log n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#ofSeq","title":"BinaryRandomAccessList.ofSeq","content":"BinaryRandomAccessList.ofSeq \nofSeq \n\nO(n). Returns random access list from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#rev","title":"BinaryRandomAccessList.rev","content":"BinaryRandomAccessList.rev \nrev \n\nO(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#tail","title":"BinaryRandomAccessList.tail","content":"BinaryRandomAccessList.tail \ntail \n\nO(log n), worst case. Returns a new random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#tryGetTail","title":"BinaryRandomAccessList.tryGetTail","content":"BinaryRandomAccessList.tryGetTail \ntryGetTail \n\nO(log n), worst case. Returns a option random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#uncons","title":"BinaryRandomAccessList.uncons","content":"BinaryRandomAccessList.uncons \nuncons \n\nO(log n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#tryUncons","title":"BinaryRandomAccessList.tryUncons","content":"BinaryRandomAccessList.tryUncons \ntryUncons \n\nO(log n), worst case. Returns the option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#update","title":"BinaryRandomAccessList.update","content":"BinaryRandomAccessList.update \nupdate \n\nO(log n), worst case. Returns random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#tryUpdate","title":"BinaryRandomAccessList.tryUpdate","content":"BinaryRandomAccessList.tryUpdate \ntryUpdate \n\nO(log n), worst case. Returns option random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist.html#( |Cons|Nil| )","title":"BinaryRandomAccessList.( |Cons|Nil| )","content":"BinaryRandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html","title":"BinaryRoseTree","content":"BinaryRoseTree \n \nBinaryRoseTree.createTree \ncreateTree \nBinaryRoseTree.createForest \ncreateForest \nBinaryRoseTree.empty \nempty \nBinaryRoseTree.singleton \nsingleton \nBinaryRoseTree.ofSeq \nofSeq \nBinaryRoseTree.map \nmap \nBinaryRoseTree.preOrder \npreOrder \nBinaryRoseTree.postOrder \npostOrder"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#createTree","title":"BinaryRoseTree.createTree","content":"BinaryRoseTree.createTree \ncreateTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#createForest","title":"BinaryRoseTree.createForest","content":"BinaryRoseTree.createForest \ncreateForest \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#empty","title":"BinaryRoseTree.empty","content":"BinaryRoseTree.empty \nempty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#singleton","title":"BinaryRoseTree.singleton","content":"BinaryRoseTree.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#ofSeq","title":"BinaryRoseTree.ofSeq","content":"BinaryRoseTree.ofSeq \nofSeq \n\n loads from sequences of objects and sequences of objects, assumed to be well-constructed\n elements in final tree will be objects, regardless of original type\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#map","title":"BinaryRoseTree.map","content":"BinaryRoseTree.map \nmap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#preOrder","title":"BinaryRoseTree.preOrder","content":"BinaryRoseTree.preOrder \npreOrder \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree.html#postOrder","title":"BinaryRoseTree.postOrder","content":"BinaryRoseTree.postOrder \npostOrder \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html","title":"BinaryTreeZipper","content":"BinaryTreeZipper \n\n TreeZipper\n original implementation taken from http://blog.xquant.net/?p=156\n \nBinaryTreeZipper.TreeZipperDirection \nTreeZipperDirection \nBinaryTreeZipper.branch \nbranch \nBinaryTreeZipper.up \nup \nBinaryTreeZipper.top \ntop \nBinaryTreeZipper.left \nleft \nBinaryTreeZipper.right \nright \nBinaryTreeZipper.setFocus \nsetFocus \nBinaryTreeZipper.zipper \nzipper \nBinaryTreeZipper.getMove \ngetMove \nBinaryTreeZipper.move \nmove"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#branch","title":"BinaryTreeZipper.branch","content":"BinaryTreeZipper.branch \nbranch \n\n Creates a new branch with the label x and two leaves as subbranches\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#up","title":"BinaryTreeZipper.up","content":"BinaryTreeZipper.up \nup \n\n Moves the zipper one level up\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#top","title":"BinaryTreeZipper.top","content":"BinaryTreeZipper.top \ntop \n\n Moves the zipper to the top\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#left","title":"BinaryTreeZipper.left","content":"BinaryTreeZipper.left \nleft \n\n Moves the zipper to the left\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#right","title":"BinaryTreeZipper.right","content":"BinaryTreeZipper.right \nright \n\n Moves the zipper to the right\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#setFocus","title":"BinaryTreeZipper.setFocus","content":"BinaryTreeZipper.setFocus \nsetFocus \n\n Modifies the current focus inside the zipper\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#zipper","title":"BinaryTreeZipper.zipper","content":"BinaryTreeZipper.zipper \nzipper \n\n Creates a zipper from a tree\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#getMove","title":"BinaryTreeZipper.getMove","content":"BinaryTreeZipper.getMove \ngetMove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper.html#move","title":"BinaryTreeZipper.move","content":"BinaryTreeZipper.move \nmove \n\n Moves the zipper in the directions of the given list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper-treezipperdirection.html","title":"TreeZipperDirection","content":"TreeZipperDirection \n \nTreeZipperDirection.Up \nUp \nTreeZipperDirection.Left \nLeft \nTreeZipperDirection.Right \nRight"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper-treezipperdirection.html#Up","title":"TreeZipperDirection.Up","content":"TreeZipperDirection.Up \nUp \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper-treezipperdirection.html#Left","title":"TreeZipperDirection.Left","content":"TreeZipperDirection.Left \nLeft \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper-treezipperdirection.html#Right","title":"TreeZipperDirection.Right","content":"TreeZipperDirection.Right \nRight \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html","title":"BinomialHeap","content":"BinomialHeap \n \nBinomialHeap.empty \nempty \nBinomialHeap.head \nhead \nBinomialHeap.tryGetHead \ntryGetHead \nBinomialHeap.insert \ninsert \nBinomialHeap.isEmpty \nisEmpty \nBinomialHeap.isDescending \nisDescending \nBinomialHeap.length \nlength \nBinomialHeap.merge \nmerge \nBinomialHeap.tryMerge \ntryMerge \nBinomialHeap.ofSeq \nofSeq \nBinomialHeap.tail \ntail \nBinomialHeap.tryGetTail \ntryGetTail \nBinomialHeap.uncons \nuncons \nBinomialHeap.tryUncons \ntryUncons \nBinomialHeap.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#empty","title":"BinomialHeap.empty","content":"BinomialHeap.empty \nempty \n\nO(1). Returns a empty heap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#head","title":"BinomialHeap.head","content":"BinomialHeap.head \nhead \n\nO(log n). Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#tryGetHead","title":"BinomialHeap.tryGetHead","content":"BinomialHeap.tryGetHead \ntryGetHead \n\nO(log n). Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#insert","title":"BinomialHeap.insert","content":"BinomialHeap.insert \ninsert \n\nO(log n). Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#isEmpty","title":"BinomialHeap.isEmpty","content":"BinomialHeap.isEmpty \nisEmpty \n\nO(1). Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#isDescending","title":"BinomialHeap.isDescending","content":"BinomialHeap.isDescending \nisDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#length","title":"BinomialHeap.length","content":"BinomialHeap.length \nlength \n\nO(log n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#merge","title":"BinomialHeap.merge","content":"BinomialHeap.merge \nmerge \n\nO(log n) Returns heap from merging two heaps, both must have same isDescending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#tryMerge","title":"BinomialHeap.tryMerge","content":"BinomialHeap.tryMerge \ntryMerge \n\nO(log n). Returns heap option from merging two heaps.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#ofSeq","title":"BinomialHeap.ofSeq","content":"BinomialHeap.ofSeq \nofSeq \n\nO(n * log n). Returns heap from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#tail","title":"BinomialHeap.tail","content":"BinomialHeap.tail \ntail \n\nO(log n). Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#tryGetTail","title":"BinomialHeap.tryGetTail","content":"BinomialHeap.tryGetTail \ntryGetTail \n\nO(log n). Returns option heap of the elements trailing the head\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#uncons","title":"BinomialHeap.uncons","content":"BinomialHeap.uncons \nuncons \n\n O(log n). Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#tryUncons","title":"BinomialHeap.tryUncons","content":"BinomialHeap.tryUncons \ntryUncons \n\n O(log n). Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap.html#( |Cons|Nil| )","title":"BinomialHeap.( |Cons|Nil| )","content":"BinomialHeap.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html","title":"BlockResizeArray","content":"BlockResizeArray \n \nBlockResizeArray.iter \niter \nBlockResizeArray.fold \nfold \nBlockResizeArray.count \ncount \nBlockResizeArray.map \nmap \nBlockResizeArray.filter \nfilter \nBlockResizeArray.tryFind \ntryFind \nBlockResizeArray.find \nfind \nBlockResizeArray.toArray \ntoArray \nBlockResizeArray.add \nadd"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#iter","title":"BlockResizeArray.iter","content":"BlockResizeArray.iter \niter \n\nApplies the given function to each element of the block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#fold","title":"BlockResizeArray.fold","content":"BlockResizeArray.fold \nfold \n\nApplies a function to each element of the collection, threading an accumulator argument through the computation.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#count","title":"BlockResizeArray.count","content":"BlockResizeArray.count \ncount \n\nReturns the length of a block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#map","title":"BlockResizeArray.map","content":"BlockResizeArray.map \nmap \n\nBuilds a new block resize array whose elements are the results of applying the given function to each of the elements of the array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#filter","title":"BlockResizeArray.filter","content":"BlockResizeArray.filter \nfilter \n\nReturns a new collection containing only the elements of the collection for which the given predicate returns true.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#tryFind","title":"BlockResizeArray.tryFind","content":"BlockResizeArray.tryFind \ntryFind \n\nReturns the first element for which the given function returns true. Return None if no such element exists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#find","title":"BlockResizeArray.find","content":"BlockResizeArray.find \nfind \n\nReturns the first element for which the given function returns true. \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#toArray","title":"BlockResizeArray.toArray","content":"BlockResizeArray.toArray \ntoArray \n\nCreates an array from the given block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray.html#add","title":"BlockResizeArray.add","content":"BlockResizeArray.add \nadd \n\nAdds element to the block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html","title":"BootstrappedQueue","content":"BootstrappedQueue \n\n bootstrapped queue from Chris Okasaki\u0027s \u0022Purely functional data structures\u0022\n original implementation taken from http://lepensemoi.free.fr/index.php/2010/02/18/bootstrapped-queue\n \nBootstrappedQueue.empty \nempty \nBootstrappedQueue.isEmpty \nisEmpty \nBootstrappedQueue.snoc \nsnoc \nBootstrappedQueue.head \nhead \nBootstrappedQueue.tryGetHead \ntryGetHead \nBootstrappedQueue.tail \ntail \nBootstrappedQueue.tryGetTail \ntryGetTail \nBootstrappedQueue.length \nlength \nBootstrappedQueue.ofList \nofList"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#empty","title":"BootstrappedQueue.empty","content":"BootstrappedQueue.empty \nempty \n\nO(1). Returns queue of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#isEmpty","title":"BootstrappedQueue.isEmpty","content":"BootstrappedQueue.isEmpty \nisEmpty \n\nO(1). Returns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#snoc","title":"BootstrappedQueue.snoc","content":"BootstrappedQueue.snoc \nsnoc \n\nO(log* n). Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#head","title":"BootstrappedQueue.head","content":"BootstrappedQueue.head \nhead \n\nO(1), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#tryGetHead","title":"BootstrappedQueue.tryGetHead","content":"BootstrappedQueue.tryGetHead \ntryGetHead \n\nO(1), worst case.  Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#tail","title":"BootstrappedQueue.tail","content":"BootstrappedQueue.tail \ntail \n\nO(log* n), worst case. Returns a new queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#tryGetTail","title":"BootstrappedQueue.tryGetTail","content":"BootstrappedQueue.tryGetTail \ntryGetTail \n\nO(log* n), worst case. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#length","title":"BootstrappedQueue.length","content":"BootstrappedQueue.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue.html#ofList","title":"BootstrappedQueue.ofList","content":"BootstrappedQueue.ofList \nofList \n\nO(1). Returns a queue of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html","title":"BottomUpMergeSort","content":"BottomUpMergeSort \n \nBottomUpMergeSort.Sortable\u003C\u0027T\u003E \nSortable\u003C\u0027T\u003E \nBottomUpMergeSort.merge \nmerge \nBottomUpMergeSort.empty \nempty \nBottomUpMergeSort.isEmpty \nisEmpty \nBottomUpMergeSort.singleton \nsingleton \nBottomUpMergeSort.addSeg \naddSeg \nBottomUpMergeSort.add \nadd \nBottomUpMergeSort.mergeAll \nmergeAll \nBottomUpMergeSort.sort \nsort"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#merge","title":"BottomUpMergeSort.merge","content":"BottomUpMergeSort.merge \nmerge \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#empty","title":"BottomUpMergeSort.empty","content":"BottomUpMergeSort.empty \nempty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#isEmpty","title":"BottomUpMergeSort.isEmpty","content":"BottomUpMergeSort.isEmpty \nisEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#singleton","title":"BottomUpMergeSort.singleton","content":"BottomUpMergeSort.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#addSeg","title":"BottomUpMergeSort.addSeg","content":"BottomUpMergeSort.addSeg \naddSeg \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#add","title":"BottomUpMergeSort.add","content":"BottomUpMergeSort.add \nadd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#mergeAll","title":"BottomUpMergeSort.mergeAll","content":"BottomUpMergeSort.mergeAll \nmergeAll \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort.html#sort","title":"BottomUpMergeSort.sort","content":"BottomUpMergeSort.sort \nsort \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort-sortable-1.html","title":"Sortable\u003C\u0027T\u003E","content":"Sortable\u003C\u0027T\u003E \n \nSortable\u003C\u0027T\u003E.Size \nSize \nSortable\u003C\u0027T\u003E.Segments \nSegments"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort-sortable-1.html#Size","title":"Sortable\u003C\u0027T\u003E.Size","content":"Sortable\u003C\u0027T\u003E.Size \nSize \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bottomupmergesort-sortable-1.html#Segments","title":"Sortable\u003C\u0027T\u003E.Segments","content":"Sortable\u003C\u0027T\u003E.Segments \nSegments \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap.html","title":"ChampHashMap","content":"ChampHashMap \n \nChampHashMap.count \ncount \nChampHashMap.getValue \ngetValue \nChampHashMap.tryGetValue \ntryGetValue \nChampHashMap.add \nadd \nChampHashMap.remove \nremove \nChampHashMap.toSeq \ntoSeq"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap.html#count","title":"ChampHashMap.count","content":"ChampHashMap.count \ncount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap.html#getValue","title":"ChampHashMap.getValue","content":"ChampHashMap.getValue \ngetValue \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap.html#tryGetValue","title":"ChampHashMap.tryGetValue","content":"ChampHashMap.tryGetValue \ntryGetValue \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap.html#add","title":"ChampHashMap.add","content":"ChampHashMap.add \nadd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap.html#remove","title":"ChampHashMap.remove","content":"ChampHashMap.remove \nremove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap.html#toSeq","title":"ChampHashMap.toSeq","content":"ChampHashMap.toSeq \ntoSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html","title":"DList","content":"DList \n \nDList.empty \nempty \nDList.isEmpty \nisEmpty \nDList.length \nlength \nDList.singleton \nsingleton \nDList.ofSeq \nofSeq \nDList.toSeq \ntoSeq \nDList.cons \ncons \nDList.append \nappend \nDList.head \nhead \nDList.snoc \nsnoc \nDList.tail \ntail \nDList.fold \nfold \nDList.toList \ntoList \nDList.toArray \ntoArray"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#empty","title":"DList.empty","content":"DList.empty \nempty \n\nO(1). Returns DList of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#isEmpty","title":"DList.isEmpty","content":"DList.isEmpty \nisEmpty \n\nO(1). Returns true if the DList has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#length","title":"DList.length","content":"DList.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#singleton","title":"DList.singleton","content":"DList.singleton \nsingleton \n\nO(1). Returns DList of one elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#ofSeq","title":"DList.ofSeq","content":"DList.ofSeq \nofSeq \n\nO(n). Returns a DList of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#toSeq","title":"DList.toSeq","content":"DList.toSeq \ntoSeq \n\nO(n). Returns a seq of the DList elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#cons","title":"DList.cons","content":"DList.cons \ncons \n\nO(1). Returns a new DList with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#append","title":"DList.append","content":"DList.append \nappend \n\nO(1). Returns a new DList of two lists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#head","title":"DList.head","content":"DList.head \nhead \n\nO(log n). Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#snoc","title":"DList.snoc","content":"DList.snoc \nsnoc \n\nO(1). Returns a new DList with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#tail","title":"DList.tail","content":"DList.tail \ntail \n\nO(log n). Returns a new DList of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#fold","title":"DList.fold","content":"DList.fold \nfold \n\n Fold walks the DList using constant stack space. Implementation is from Norman Ramsey.\n See http://stackoverflow.com/questions/5324623/functional-o1-append-and-on-iteration-from-first-element-list-data-structure/5334068#5334068\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#toList","title":"DList.toList","content":"DList.toList \ntoList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist.html#toArray","title":"DList.toArray","content":"DList.toArray \ntoArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html","title":"Deque","content":"Deque \n \nDeque.cons \ncons \nDeque.empty \nempty \nDeque.head \nhead \nDeque.tryGetHead \ntryGetHead \nDeque.init \ninit \nDeque.tryGetInit \ntryGetInit \nDeque.isEmpty \nisEmpty \nDeque.last \nlast \nDeque.tryGetLast \ntryGetLast \nDeque.length \nlength \nDeque.lookup \nlookup \nDeque.tryLookup \ntryLookup \nDeque.ofCatLists \nofCatLists \nDeque.ofSeq \nofSeq \nDeque.remove \nremove \nDeque.tryRemove \ntryRemove \nDeque.rev \nrev \nDeque.singleton \nsingleton \nDeque.snoc \nsnoc \nDeque.tail \ntail \nDeque.tryGetTail \ntryGetTail \nDeque.uncons \nuncons \nDeque.tryUncons \ntryUncons \nDeque.unsnoc \nunsnoc \nDeque.tryUnsnoc \ntryUnsnoc \nDeque.update \nupdate \nDeque.tryUpdate \ntryUpdate \nDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \nDeque.( |Snoc|Nil| ) \n( |Snoc|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#cons","title":"Deque.cons","content":"Deque.cons \ncons \n\nO(n), worst case. Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#empty","title":"Deque.empty","content":"Deque.empty \nempty \n\nO(1). Returns deque of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#head","title":"Deque.head","content":"Deque.head \nhead \n\nO(1) amortized, O(n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryGetHead","title":"Deque.tryGetHead","content":"Deque.tryGetHead \ntryGetHead \n\nO(1) amortized, O(n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#init","title":"Deque.init","content":"Deque.init \ninit \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryGetInit","title":"Deque.tryGetInit","content":"Deque.tryGetInit \ntryGetInit \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#isEmpty","title":"Deque.isEmpty","content":"Deque.isEmpty \nisEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#last","title":"Deque.last","content":"Deque.last \nlast \n\nO(1) amortized, O(n), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryGetLast","title":"Deque.tryGetLast","content":"Deque.tryGetLast \ntryGetLast \n\nO(1) amortized, O(n), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#length","title":"Deque.length","content":"Deque.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#lookup","title":"Deque.lookup","content":"Deque.lookup \nlookup \n\nO(n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryLookup","title":"Deque.tryLookup","content":"Deque.tryLookup \ntryLookup \n\nO(n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#ofCatLists","title":"Deque.ofCatLists","content":"Deque.ofCatLists \nofCatLists \n\nO(ys). Returns a deque of the two lists concatenated.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#ofSeq","title":"Deque.ofSeq","content":"Deque.ofSeq \nofSeq \n\nO(n/2). Returns a deque of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#remove","title":"Deque.remove","content":"Deque.remove \nremove \n\nO(n), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryRemove","title":"Deque.tryRemove","content":"Deque.tryRemove \ntryRemove \n\nO(n), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#rev","title":"Deque.rev","content":"Deque.rev \nrev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#singleton","title":"Deque.singleton","content":"Deque.singleton \nsingleton \n\nO(1). Returns a deque of one element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#snoc","title":"Deque.snoc","content":"Deque.snoc \nsnoc \n\nO(1) amortized, O(n), worst case. Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tail","title":"Deque.tail","content":"Deque.tail \ntail \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryGetTail","title":"Deque.tryGetTail","content":"Deque.tryGetTail \ntryGetTail \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#uncons","title":"Deque.uncons","content":"Deque.uncons \nuncons \n\nO(1) amortized, O(n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryUncons","title":"Deque.tryUncons","content":"Deque.tryUncons \ntryUncons \n\nO(1) amortized, /O(n), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#unsnoc","title":"Deque.unsnoc","content":"Deque.unsnoc \nunsnoc \n\nO(1) amortized, O(n), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryUnsnoc","title":"Deque.tryUnsnoc","content":"Deque.tryUnsnoc \ntryUnsnoc \n\nO(1) amortized, O(n), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#update","title":"Deque.update","content":"Deque.update \nupdate \n\nO(n), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#tryUpdate","title":"Deque.tryUpdate","content":"Deque.tryUpdate \ntryUpdate \n\nO(n), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#( |Cons|Nil| )","title":"Deque.( |Cons|Nil| )","content":"Deque.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque.html#( |Snoc|Nil| )","title":"Deque.( |Snoc|Nil| )","content":"Deque.( |Snoc|Nil| ) \n( |Snoc|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html","title":"EagerRoseTree","content":"EagerRoseTree \n \nEagerRoseTree.create \ncreate \nEagerRoseTree.singleton \nsingleton \nEagerRoseTree.map \nmap \nEagerRoseTree.ap \nap \nEagerRoseTree.lift2 \nlift2 \nEagerRoseTree.bind \nbind \nEagerRoseTree.dfsPre \ndfsPre \nEagerRoseTree.dfsPost \ndfsPost \nEagerRoseTree.unfold \nunfold \nEagerRoseTree.unfoldForest \nunfoldForest \nEagerRoseTree.mapAccum \nmapAccum"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#create","title":"EagerRoseTree.create","content":"EagerRoseTree.create \ncreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#singleton","title":"EagerRoseTree.singleton","content":"EagerRoseTree.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#map","title":"EagerRoseTree.map","content":"EagerRoseTree.map \nmap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#ap","title":"EagerRoseTree.ap","content":"EagerRoseTree.ap \nap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#lift2","title":"EagerRoseTree.lift2","content":"EagerRoseTree.lift2 \nlift2 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#bind","title":"EagerRoseTree.bind","content":"EagerRoseTree.bind \nbind \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#dfsPre","title":"EagerRoseTree.dfsPre","content":"EagerRoseTree.dfsPre \ndfsPre \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#dfsPost","title":"EagerRoseTree.dfsPost","content":"EagerRoseTree.dfsPost \ndfsPost \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#unfold","title":"EagerRoseTree.unfold","content":"EagerRoseTree.unfold \nunfold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#unfoldForest","title":"EagerRoseTree.unfoldForest","content":"EagerRoseTree.unfoldForest \nunfoldForest \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree.html#mapAccum","title":"EagerRoseTree.mapAccum","content":"EagerRoseTree.mapAccum \nmapAccum \n\n Behaves like a combination of map and fold; \n it applies a function to each element of a tree, \n passing an accumulating parameter, \n and returning a final value of this accumulator together with the new tree.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html","title":"FlatList","content":"FlatList \n \nFlatList.append \nappend \nFlatList.collect \ncollect \nFlatList.concat \nconcat \nFlatList.empty \nempty \nFlatList.exists \nexists \nFlatList.filter \nfilter \nFlatList.fold \nfold \nFlatList.fold2 \nfold2 \nFlatList.foldBack \nfoldBack \nFlatList.foldBack2 \nfoldBack2 \nFlatList.forall \nforall \nFlatList.forall2 \nforall2 \nFlatList.init \ninit \nFlatList.isEmpty \nisEmpty \nFlatList.iter \niter \nFlatList.iter2 \niter2 \nFlatList.iteri \niteri \nFlatList.length \nlength \nFlatList.map \nmap \nFlatList.map2 \nmap2 \nFlatList.mapi \nmapi \nFlatList.ofList \nofList \nFlatList.ofSeq \nofSeq \nFlatList.partition \npartition \nFlatList.physicalEquality \nphysicalEquality \nFlatList.rev \nrev \nFlatList.singleton \nsingleton \nFlatList.sum \nsum \nFlatList.sumBy \nsumBy \nFlatList.toList \ntoList \nFlatList.toMap \ntoMap \nFlatList.tryFind \ntryFind \nFlatList.unzip \nunzip \nFlatList.zip \nzip"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#append","title":"FlatList.append","content":"FlatList.append \nappend \n\n O(n). Creates a flatlist that contains the elements of one flatlist followed by the elements of another flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#collect","title":"FlatList.collect","content":"FlatList.collect \ncollect \n\nO(n). Applies the supplied function to each element of a flatlist, concatenates the results, and returns the combined flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#concat","title":"FlatList.concat","content":"FlatList.concat \nconcat \n\n O(n). Creates a flatlist that contains the elements of each of the supplied sequence of flatlists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#empty","title":"FlatList.empty","content":"FlatList.empty \nempty \n\n O(1). Returns flatlist of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#exists","title":"FlatList.exists","content":"FlatList.exists \nexists \n\n O(n) worst case. Tests whether any element of a flatlist satisfies the supplied predicate.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#filter","title":"FlatList.filter","content":"FlatList.filter \nfilter \n\n O(n). Returns a flatlist that contains only the elements of the supplied flatlist for which the supplied condition returns true.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#fold","title":"FlatList.fold","content":"FlatList.fold \nfold \n\n O(n). Applies a function to each element of a flatlist from left to right (first to last), threading an accumulator argument through the computation. \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#fold2","title":"FlatList.fold2","content":"FlatList.fold2 \nfold2 \n\n O(n). Applies a function to pairs of elements from two supplied flatlists, left-to-right, threading an accumulator argument through the computation. The two input flatlists must have the same lengths; otherwise, ArgumentException is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#foldBack","title":"FlatList.foldBack","content":"FlatList.foldBack \nfoldBack \n\n O(n). Applies a function to each element of a flatlist from right to left (last to first), threading an accumulator argument through the computation.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#foldBack2","title":"FlatList.foldBack2","content":"FlatList.foldBack2 \nfoldBack2 \n\n O(n). Applies a function to pairs of elements from two supplied flatlists, right-to-left, threading an accumulator argument through the computation. The two input flatlists must have the same lengths; otherwise, ArgumentException is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#forall","title":"FlatList.forall","content":"FlatList.forall \nforall \n\n O(n). Tests whether all elements of a flatlist satisfy the supplied condition.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#forall2","title":"FlatList.forall2","content":"FlatList.forall2 \nforall2 \n\n O(n). Tests whether all corresponding elements of two supplied flatlists satisfy a supplied condition.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#init","title":"FlatList.init","content":"FlatList.init \ninit \n\n O(n). Uses a supplied function to create a flatlist of the supplied dimension.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#isEmpty","title":"FlatList.isEmpty","content":"FlatList.isEmpty \nisEmpty \n\n O(1). O(1). Returns true if the flatlist has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#iter","title":"FlatList.iter","content":"FlatList.iter \niter \n\n O(n). Applies the supplied function to each element of a flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#iter2","title":"FlatList.iter2","content":"FlatList.iter2 \niter2 \n\n O(n). Applies the supplied function to a pair of elements from matching indexes in two flatlists, also passing the index of the elements. The two flatlists must have the same lengths; otherwise, an ArgumentException is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#iteri","title":"FlatList.iteri","content":"FlatList.iteri \niteri \n\n O(n). Applies the supplied function to each element of a flatlist. The integer passed to the function indicates the index of the element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#length","title":"FlatList.length","content":"FlatList.length \nlength \n\n O(1). Returns the number of items in the flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#map","title":"FlatList.map","content":"FlatList.map \nmap \n\n O(n). Creates a flatlist whose elements are the results of applying the supplied function to each of the elements of a supplied flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#map2","title":"FlatList.map2","content":"FlatList.map2 \nmap2 \n\n O(n). Creates a flatlist whose elements are the results of applying the supplied function to the corresponding elements of two supplied flatlists. The two input flatlists must have the same lengths; otherwise, ArgumentException is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#mapi","title":"FlatList.mapi","content":"FlatList.mapi \nmapi \n\n O(n). Creates a flatlist whose elements are the results of applying the supplied function to each of the elements of a supplied flatlist. An integer index passed to the function indicates the index of the element being transformed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#ofList","title":"FlatList.ofList","content":"FlatList.ofList \nofList \n\n O(n). Creates a flatlist from the supplied list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#ofSeq","title":"FlatList.ofSeq","content":"FlatList.ofSeq \nofSeq \n\n O(n). Creates a flatlist from the supplied enumerable object.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#partition","title":"FlatList.partition","content":"FlatList.partition \npartition \n\n O(n). Splits a flatlist into two flatlists, one containing the elements for which the supplied condition returns true, and the other containing those for which it returns false.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#physicalEquality","title":"FlatList.physicalEquality","content":"FlatList.physicalEquality \nphysicalEquality \n\n O(1). True if the flatlists are reference-equal, false otherwise\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#rev","title":"FlatList.rev","content":"FlatList.rev \nrev \n\n O(n). Reverses the order of the elements in a supplied array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#singleton","title":"FlatList.singleton","content":"FlatList.singleton \nsingleton \n\n O(1). Returns a flatlist of one element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#sum","title":"FlatList.sum","content":"FlatList.sum \nsum \n\n O(n). Returns the sum of the elements in the flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#sumBy","title":"FlatList.sumBy","content":"FlatList.sumBy \nsumBy \n\n O(n). Returns the sum of the results generated by applying a function to each element of a flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#toList","title":"FlatList.toList","content":"FlatList.toList \ntoList \n\n O(n). Converts the supplied flatlist to a list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#toMap","title":"FlatList.toMap","content":"FlatList.toMap \ntoMap \n\n O(n). Converts the supplied flatlist of tuple pairs to a map.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#tryFind","title":"FlatList.tryFind","content":"FlatList.tryFind \ntryFind \n\n O(n). Returns the first element in the supplied flatlist for which the supplied function returns true. Returns None if no such element exists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#unzip","title":"FlatList.unzip","content":"FlatList.unzip \nunzip \n\n O(n). Splits a flatlist of tuple pairs into a tuple of two flatlists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist.html#zip","title":"FlatList.zip","content":"FlatList.zip \nzip \n\n O(n). Combines two flatlists into a flatlist of tuples that have two elements. The two flatlists must have equal lengths; otherwise, ArgumentException is raised.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html","title":"HeapPriorityQueue","content":"HeapPriorityQueue \n \nHeapPriorityQueue.empty \nempty \nHeapPriorityQueue.isEmpty \nisEmpty \nHeapPriorityQueue.insert \ninsert \nHeapPriorityQueue.tryPeek \ntryPeek \nHeapPriorityQueue.peek \npeek \nHeapPriorityQueue.tryPop \ntryPop \nHeapPriorityQueue.pop \npop"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html#empty","title":"HeapPriorityQueue.empty","content":"HeapPriorityQueue.empty \nempty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html#isEmpty","title":"HeapPriorityQueue.isEmpty","content":"HeapPriorityQueue.isEmpty \nisEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html#insert","title":"HeapPriorityQueue.insert","content":"HeapPriorityQueue.insert \ninsert \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html#tryPeek","title":"HeapPriorityQueue.tryPeek","content":"HeapPriorityQueue.tryPeek \ntryPeek \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html#peek","title":"HeapPriorityQueue.peek","content":"HeapPriorityQueue.peek \npeek \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html#tryPop","title":"HeapPriorityQueue.tryPop","content":"HeapPriorityQueue.tryPop \ntryPop \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-heappriorityqueue.html#pop","title":"HeapPriorityQueue.pop","content":"HeapPriorityQueue.pop \npop \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html","title":"HoodMelvilleQueue","content":"HoodMelvilleQueue \n \nHoodMelvilleQueue.empty \nempty \nHoodMelvilleQueue.fold \nfold \nHoodMelvilleQueue.foldBack \nfoldBack \nHoodMelvilleQueue.head \nhead \nHoodMelvilleQueue.tryGetHead \ntryGetHead \nHoodMelvilleQueue.isEmpty \nisEmpty \nHoodMelvilleQueue.length \nlength \nHoodMelvilleQueue.ofList \nofList \nHoodMelvilleQueue.ofSeq \nofSeq \nHoodMelvilleQueue.snoc \nsnoc \nHoodMelvilleQueue.tail \ntail \nHoodMelvilleQueue.tryGetTail \ntryGetTail \nHoodMelvilleQueue.uncons \nuncons \nHoodMelvilleQueue.tryUncons \ntryUncons \nHoodMelvilleQueue.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#empty","title":"HoodMelvilleQueue.empty","content":"HoodMelvilleQueue.empty \nempty \n\nreturns queue of no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#fold","title":"HoodMelvilleQueue.fold","content":"HoodMelvilleQueue.fold \nfold \n\napplies a function to each element of the queue, threading an accumulator argument through the computation, left to right\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#foldBack","title":"HoodMelvilleQueue.foldBack","content":"HoodMelvilleQueue.foldBack \nfoldBack \n\napplies a function to each element of the queue, threading an accumulator argument through the computation, right to left\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#head","title":"HoodMelvilleQueue.head","content":"HoodMelvilleQueue.head \nhead \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#tryGetHead","title":"HoodMelvilleQueue.tryGetHead","content":"HoodMelvilleQueue.tryGetHead \ntryGetHead \n\nreturns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#isEmpty","title":"HoodMelvilleQueue.isEmpty","content":"HoodMelvilleQueue.isEmpty \nisEmpty \n\nreturns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#length","title":"HoodMelvilleQueue.length","content":"HoodMelvilleQueue.length \nlength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#ofList","title":"HoodMelvilleQueue.ofList","content":"HoodMelvilleQueue.ofList \nofList \n\nreturns a queue of the list\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#ofSeq","title":"HoodMelvilleQueue.ofSeq","content":"HoodMelvilleQueue.ofSeq \nofSeq \n\nreturns a queue of the seq\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#snoc","title":"HoodMelvilleQueue.snoc","content":"HoodMelvilleQueue.snoc \nsnoc \n\nreturns a new queue with the element added to the end\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#tail","title":"HoodMelvilleQueue.tail","content":"HoodMelvilleQueue.tail \ntail \n\nreturns a new queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#tryGetTail","title":"HoodMelvilleQueue.tryGetTail","content":"HoodMelvilleQueue.tryGetTail \ntryGetTail \n\nreturns option queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#uncons","title":"HoodMelvilleQueue.uncons","content":"HoodMelvilleQueue.uncons \nuncons \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#tryUncons","title":"HoodMelvilleQueue.tryUncons","content":"HoodMelvilleQueue.tryUncons \ntryUncons \n\nreturns option first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue.html#( |Cons|Nil| )","title":"HoodMelvilleQueue.( |Cons|Nil| )","content":"HoodMelvilleQueue.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html","title":"ImplicitQueue","content":"ImplicitQueue \n\n implicit queue from Chris Okasaki\u0027s \u0022Purely functional data structures\u0022\n original implementation taken from http://lepensemoi.free.fr/index.php/2010/02/18/implicit-queue\n \nImplicitQueue.empty \nempty \nImplicitQueue.isEmpty \nisEmpty \nImplicitQueue.snoc \nsnoc \nImplicitQueue.head \nhead \nImplicitQueue.tryGetHead \ntryGetHead \nImplicitQueue.tail \ntail \nImplicitQueue.tryGetTail \ntryGetTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html#empty","title":"ImplicitQueue.empty","content":"ImplicitQueue.empty \nempty \n\nO(1). Returns queue of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html#isEmpty","title":"ImplicitQueue.isEmpty","content":"ImplicitQueue.isEmpty \nisEmpty \n\nO(1). Returns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html#snoc","title":"ImplicitQueue.snoc","content":"ImplicitQueue.snoc \nsnoc \n\nO(1), amortized. Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html#head","title":"ImplicitQueue.head","content":"ImplicitQueue.head \nhead \n\nO(1), amortized. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html#tryGetHead","title":"ImplicitQueue.tryGetHead","content":"ImplicitQueue.tryGetHead \ntryGetHead \n\nO(1), amortized. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html#tail","title":"ImplicitQueue.tail","content":"ImplicitQueue.tail \ntail \n\nO(1), amortized. Returns a new queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue.html#tryGetTail","title":"ImplicitQueue.tryGetTail","content":"ImplicitQueue.tryGetTail \ntryGetTail \n\nO(1), amortized. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html","title":"IndexedRoseTree","content":"IndexedRoseTree \n \nIndexedRoseTree.create \ncreate \nIndexedRoseTree.singleton \nsingleton \nIndexedRoseTree.map \nmap \nIndexedRoseTree.ap \nap \nIndexedRoseTree.lift2 \nlift2 \nIndexedRoseTree.bind \nbind \nIndexedRoseTree.preOrder \npreOrder \nIndexedRoseTree.postOrder \npostOrder \nIndexedRoseTree.unfold \nunfold \nIndexedRoseTree.unfoldForest \nunfoldForest"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#create","title":"IndexedRoseTree.create","content":"IndexedRoseTree.create \ncreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#singleton","title":"IndexedRoseTree.singleton","content":"IndexedRoseTree.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#map","title":"IndexedRoseTree.map","content":"IndexedRoseTree.map \nmap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#ap","title":"IndexedRoseTree.ap","content":"IndexedRoseTree.ap \nap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#lift2","title":"IndexedRoseTree.lift2","content":"IndexedRoseTree.lift2 \nlift2 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#bind","title":"IndexedRoseTree.bind","content":"IndexedRoseTree.bind \nbind \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#preOrder","title":"IndexedRoseTree.preOrder","content":"IndexedRoseTree.preOrder \npreOrder \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#postOrder","title":"IndexedRoseTree.postOrder","content":"IndexedRoseTree.postOrder \npostOrder \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#unfold","title":"IndexedRoseTree.unfold","content":"IndexedRoseTree.unfold \nunfold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree.html#unfoldForest","title":"IndexedRoseTree.unfoldForest","content":"IndexedRoseTree.unfoldForest \nunfoldForest \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html","title":"IntMap","content":"IntMap \n \nIntMap.isEmpty \nisEmpty \nIntMap.size \nsize \nIntMap.tryFind \ntryFind \nIntMap.exists \nexists \nIntMap.notExists \nnotExists \nIntMap.find \nfind \nIntMap.findWithDefault \nfindWithDefault \nIntMap.tryFindLT \ntryFindLT \nIntMap.tryFindGT \ntryFindGT \nIntMap.tryFindLE \ntryFindLE \nIntMap.tryFindGE \ntryFindGE \nIntMap.empty \nempty \nIntMap.singleton \nsingleton \nIntMap.insert \ninsert \nIntMap.insertWithKey \ninsertWithKey \nIntMap.insertWith \ninsertWith \nIntMap.insertTryFindWithKey \ninsertTryFindWithKey \nIntMap.delete \ndelete \nIntMap.updateWithKey \nupdateWithKey \nIntMap.update \nupdate \nIntMap.adjustWithKey \nadjustWithKey \nIntMap.adjust \nadjust \nIntMap.updateTryFindWithKey \nupdateTryFindWithKey \nIntMap.alter \nalter \nIntMap.mergeWithKey \nmergeWithKey \nIntMap.konst \nkonst \nIntMap.append \nappend \nIntMap.appendWithKey \nappendWithKey \nIntMap.appendWith \nappendWith \nIntMap.concat \nconcat \nIntMap.concatWith \nconcatWith \nIntMap.difference \ndifference \nIntMap.differenceWithKey \ndifferenceWithKey \nIntMap.differenceWith \ndifferenceWith \nIntMap.intersection \nintersection \nIntMap.intersectionWithKey \nintersectionWithKey \nIntMap.intersectionWith \nintersectionWith \nIntMap.updateMinWithKey \nupdateMinWithKey \nIntMap.updateMaxWithKey \nupdateMaxWithKey \nIntMap.maxViewWithKey \nmaxViewWithKey \nIntMap.minViewWithKey \nminViewWithKey \nIntMap.updateMax \nupdateMax \nIntMap.updateMin \nupdateMin \nIntMap.maxView \nmaxView \nIntMap.minView \nminView \nIntMap.deleteFindMax \ndeleteFindMax \nIntMap.deleteFindMin \ndeleteFindMin \nIntMap.findMin \nfindMin \nIntMap.findMax \nfindMax \nIntMap.deleteMin \ndeleteMin \nIntMap.deleteMax \ndeleteMax \nIntMap.mapWithKey \nmapWithKey \nIntMap.map \nmap \nIntMap.mapAccumWithKey \nmapAccumWithKey \nIntMap.mapAccum \nmapAccum \nIntMap.filterWithKey \nfilterWithKey \nIntMap.filter \nfilter \nIntMap.partitionWithKey \npartitionWithKey \nIntMap.partition \npartition \nIntMap.mapOptionWithKey \nmapOptionWithKey \nIntMap.mapOption \nmapOption \nIntMap.mapChoiceWithKey \nmapChoiceWithKey \nIntMap.mapChoice \nmapChoice \nIntMap.split \nsplit \nIntMap.splitTryFind \nsplitTryFind \nIntMap.foldBack \nfoldBack \nIntMap.fold \nfold \nIntMap.foldBackWithKey \nfoldBackWithKey \nIntMap.foldWithKey \nfoldWithKey \nIntMap.values \nvalues \nIntMap.keys \nkeys \nIntMap.toList \ntoList \nIntMap.toSeq \ntoSeq \nIntMap.toArray \ntoArray \nIntMap.ofList \nofList \nIntMap.ofListWithKey \nofListWithKey \nIntMap.ofListWith \nofListWith \nIntMap.ofSeq \nofSeq \nIntMap.ofSeqWithKey \nofSeqWithKey \nIntMap.ofSeqWith \nofSeqWith \nIntMap.ofArray \nofArray \nIntMap.ofArrayWithKey \nofArrayWithKey \nIntMap.ofArrayWith \nofArrayWith \nIntMap.mapKeys \nmapKeys \nIntMap.mapKeysWith \nmapKeysWith \nIntMap.isSubmapOfBy \nisSubmapOfBy \nIntMap.isSubmapOf \nisSubmapOf \nIntMap.isProperSubmapOfBy \nisProperSubmapOfBy \nIntMap.isProperSubmapOf \nisProperSubmapOf"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#isEmpty","title":"IntMap.isEmpty","content":"IntMap.isEmpty \nisEmpty \n\nO(1). Map is empty.  Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#size","title":"IntMap.size","content":"IntMap.size \nsize \n\nO(n). Number of elements in the map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#tryFind","title":"IntMap.tryFind","content":"IntMap.tryFind \ntryFind \n\nO(min(n,W)). Lookup the value at a key in the map. Returns \u0027T option. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#exists","title":"IntMap.exists","content":"IntMap.exists \nexists \n\nO(min(n,W)). Is the key a member of the map? Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#notExists","title":"IntMap.notExists","content":"IntMap.notExists \nnotExists \n\nO(log n). Is the key not a member of the map? Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#find","title":"IntMap.find","content":"IntMap.find \nfind \n\nO(min(n,W)). Lookup the value at a key in the map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#findWithDefault","title":"IntMap.findWithDefault","content":"IntMap.findWithDefault \nfindWithDefault \n\nO(min(n,W)). The expression (findWithDefault def k map) returns the value at key k or returns def when the key is not an element of the map.  Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#tryFindLT","title":"IntMap.tryFindLT","content":"IntMap.tryFindLT \ntryFindLT \n\nO(log n). Find largest key smaller than the given one and return the corresponding (key, value) pair.  Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#tryFindGT","title":"IntMap.tryFindGT","content":"IntMap.tryFindGT \ntryFindGT \n\nO(log n). Find smallest key greater than the given one and return the corresponding (key, value) pair. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#tryFindLE","title":"IntMap.tryFindLE","content":"IntMap.tryFindLE \ntryFindLE \n\nO(log n). Find largest key smaller or equal to the given one and return the corresponding (key, value) pair. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#tryFindGE","title":"IntMap.tryFindGE","content":"IntMap.tryFindGE \ntryFindGE \n\nO(log n). Find smallest key greater or equal to the given one and return the corresponding (key, value) pair Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#empty","title":"IntMap.empty","content":"IntMap.empty \nempty \n\nO(1). The empty map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#singleton","title":"IntMap.singleton","content":"IntMap.singleton \nsingleton \n\nO(1). A map of one element. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#insert","title":"IntMap.insert","content":"IntMap.insert \ninsert \n\nO(min(n,W)). Insert a new key/value pair in the map. If the key is already present in the map, the associated value is replaced with the supplied value, i.e. insert is equivalent to insertWith const. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#insertWithKey","title":"IntMap.insertWithKey","content":"IntMap.insertWithKey \ninsertWithKey \n\nO(min(n,W)). Insert with a combining function. insertWithKey f key value mp will insert the pair (key, value) into mp if key does not exist in the map. If the key does exist, the function will insert f key new_value old_value. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#insertWith","title":"IntMap.insertWith","content":"IntMap.insertWith \ninsertWith \n\nO(min(n,W)). Insert with a combining function. insertWith f key value mp will insert the pair (key, value) into mp if key does not exist in the map. If the key does exist, the function will insert f new_value old_value. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#insertTryFindWithKey","title":"IntMap.insertTryFindWithKey","content":"IntMap.insertTryFindWithKey \ninsertTryFindWithKey \n\nO(min(n,W)). The expression (insertLookupWithKey f k x map) is a pair where the first element is equal to (lookup k map) and the second element equal to (insertWithKey f k x map). Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#delete","title":"IntMap.delete","content":"IntMap.delete \ndelete \n\nO(min(n,W)). Delete a key and its value from the map. When the key is not a member of the map, the original map is returned. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#updateWithKey","title":"IntMap.updateWithKey","content":"IntMap.updateWithKey \nupdateWithKey \n\nO(min(n,W)). The expression (update f k map) updates the value x at k (if it is in the map). If (f k x) is Nothing, the element is deleted. If it is (Just y), the key k is bound to the new value y. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#update","title":"IntMap.update","content":"IntMap.update \nupdate \n\nO(min(n,W)). The expression (update f k map) updates the value x at k (if it is in the map). If (f x) is Nothing, the element is deleted. If it is (Just y), the key k is bound to the new value y. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#adjustWithKey","title":"IntMap.adjustWithKey","content":"IntMap.adjustWithKey \nadjustWithKey \n\nO(min(n,W)). Adjust a value at a specific key. When the key is not a member of the map, the original map is returned. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#adjust","title":"IntMap.adjust","content":"IntMap.adjust \nadjust \n\nO(min(n,W)). Adjust a value at a specific key. When the key is not a member of the map, the original map is returned. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#updateTryFindWithKey","title":"IntMap.updateTryFindWithKey","content":"IntMap.updateTryFindWithKey \nupdateTryFindWithKey \n\nO(min(n,W)). Lookup and update. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#alter","title":"IntMap.alter","content":"IntMap.alter \nalter \n\nO(log n). The expression (alter f k map) alters the value x at k, or absence thereof. alter can be used to insert, delete, or update a value in an IntMap. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mergeWithKey","title":"IntMap.mergeWithKey","content":"IntMap.mergeWithKey \nmergeWithKey \n\nRefer to Haskell documentation. Unexpected code growth or corruption of the data structure can occur from wrong use. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#konst","title":"IntMap.konst","content":"IntMap.konst \nkonst \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#append","title":"IntMap.append","content":"IntMap.append \nappend \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#appendWithKey","title":"IntMap.appendWithKey","content":"IntMap.appendWithKey \nappendWithKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#appendWith","title":"IntMap.appendWith","content":"IntMap.appendWith \nappendWith \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#concat","title":"IntMap.concat","content":"IntMap.concat \nconcat \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#concatWith","title":"IntMap.concatWith","content":"IntMap.concatWith \nconcatWith \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#difference","title":"IntMap.difference","content":"IntMap.difference \ndifference \n\nO(n\u002Bm). Difference between two maps (based on keys). Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#differenceWithKey","title":"IntMap.differenceWithKey","content":"IntMap.differenceWithKey \ndifferenceWithKey \n\nO(n\u002Bm). Difference with a combining function. When two equal keys are encountered, the combining function is applied to the key and both values. If it returns Nothing, the element is discarded (proper set difference). If it returns (Just y), the element is updated with a new value y. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#differenceWith","title":"IntMap.differenceWith","content":"IntMap.differenceWith \ndifferenceWith \n\nO(n\u002Bm). Difference with a combining function. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#intersection","title":"IntMap.intersection","content":"IntMap.intersection \nintersection \n\nO(n\u002Bm). The (left-biased) intersection of two maps (based on keys). Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#intersectionWithKey","title":"IntMap.intersectionWithKey","content":"IntMap.intersectionWithKey \nintersectionWithKey \n\nO(n\u002Bm). The intersection with a combining function. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#intersectionWith","title":"IntMap.intersectionWith","content":"IntMap.intersectionWith \nintersectionWith \n\nO(n\u002Bm). The intersection with a combining function. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#updateMinWithKey","title":"IntMap.updateMinWithKey","content":"IntMap.updateMinWithKey \nupdateMinWithKey \n\nO(log n). Update the value at the minimal key. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#updateMaxWithKey","title":"IntMap.updateMaxWithKey","content":"IntMap.updateMaxWithKey \nupdateMaxWithKey \n\nO(log n). Update the value at the maximal key. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#maxViewWithKey","title":"IntMap.maxViewWithKey","content":"IntMap.maxViewWithKey \nmaxViewWithKey \n\nO(log n). Retrieves the maximal (key,value) couple of the map, and the map stripped from that element. fails (in the monad) when passed an empty map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#minViewWithKey","title":"IntMap.minViewWithKey","content":"IntMap.minViewWithKey \nminViewWithKey \n\nO(log n). Retrieves the minimal (key,value) couple of the map, and the map stripped from that element. fails (in the monad) when passed an empty map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#updateMax","title":"IntMap.updateMax","content":"IntMap.updateMax \nupdateMax \n\nO(log n). Update the value at the maximal key. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#updateMin","title":"IntMap.updateMin","content":"IntMap.updateMin \nupdateMin \n\nO(log n). Update the value at the minimal key. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#maxView","title":"IntMap.maxView","content":"IntMap.maxView \nmaxView \n\nO(min(n,W)). Retrieves the maximal key of the map, and the map stripped of that element, or Nothing if passed an empty map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#minView","title":"IntMap.minView","content":"IntMap.minView \nminView \n\nO(min(n,W)). Retrieves the minimal key of the map, and the map stripped of that element, or Nothing if passed an empty map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#deleteFindMax","title":"IntMap.deleteFindMax","content":"IntMap.deleteFindMax \ndeleteFindMax \n\nO(log n). Retrieves the maximal key of the map, and the map stripped from that element. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#deleteFindMin","title":"IntMap.deleteFindMin","content":"IntMap.deleteFindMin \ndeleteFindMin \n\nO(log n). Retrieves the minimal key of the map, and the map stripped from that element. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#findMin","title":"IntMap.findMin","content":"IntMap.findMin \nfindMin \n\nO(log n). The minimal key of the map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#findMax","title":"IntMap.findMax","content":"IntMap.findMax \nfindMax \n\nO(log n). The maximal key of the map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#deleteMin","title":"IntMap.deleteMin","content":"IntMap.deleteMin \ndeleteMin \n\nO(log n). Delete the minimal key. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#deleteMax","title":"IntMap.deleteMax","content":"IntMap.deleteMax \ndeleteMax \n\nO(log n). Delete the maximal key. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapWithKey","title":"IntMap.mapWithKey","content":"IntMap.mapWithKey \nmapWithKey \n\nO(n). Map a function over all values in the map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#map","title":"IntMap.map","content":"IntMap.map \nmap \n\nO(n). Map a function over all values in the map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapAccumWithKey","title":"IntMap.mapAccumWithKey","content":"IntMap.mapAccumWithKey \nmapAccumWithKey \n\nO(n). The function mapAccum threads an accumulating argument through the map in ascending order of keys. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapAccum","title":"IntMap.mapAccum","content":"IntMap.mapAccum \nmapAccum \n\nO(n). The function mapAccumWithKey threads an accumulating argument through the map in ascending order of keys. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#filterWithKey","title":"IntMap.filterWithKey","content":"IntMap.filterWithKey \nfilterWithKey \n\nO(n). Filter all keys/values that satisfy some predicate. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#filter","title":"IntMap.filter","content":"IntMap.filter \nfilter \n\nO(n). Filter all values that satisfy some predicate. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#partitionWithKey","title":"IntMap.partitionWithKey","content":"IntMap.partitionWithKey \npartitionWithKey \n\nO(n). partition the map according to some predicate. The first map contains all elements that satisfy the predicate, the second all elements that fail the predicate. See also split. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#partition","title":"IntMap.partition","content":"IntMap.partition \npartition \n\nO(n). partition the map according to some predicate. The first map contains all elements that satisfy the predicate, the second all elements that fail the predicate. See also split. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapOptionWithKey","title":"IntMap.mapOptionWithKey","content":"IntMap.mapOptionWithKey \nmapOptionWithKey \n\nO(n). Map keys/values and collect the Just results. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapOption","title":"IntMap.mapOption","content":"IntMap.mapOption \nmapOption \n\nO(n). Map values and collect the Just results. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapChoiceWithKey","title":"IntMap.mapChoiceWithKey","content":"IntMap.mapChoiceWithKey \nmapChoiceWithKey \n\nO(n). Map keys/values and separate the Left and Right results. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapChoice","title":"IntMap.mapChoice","content":"IntMap.mapChoice \nmapChoice \n\nO(n). Map values and separate the Left and Right results. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#split","title":"IntMap.split","content":"IntMap.split \nsplit \n\nO(log n). The expression (split k map) is a pair (map1,map2) where all keys in map1 are lower than k and all keys in map2 larger than k. Any key equal to k is found in neither map1 nor map2. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#splitTryFind","title":"IntMap.splitTryFind","content":"IntMap.splitTryFind \nsplitTryFind \n\nO(log n). Performs a split but also returns whether the pivot key was found in the original map. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#foldBack","title":"IntMap.foldBack","content":"IntMap.foldBack \nfoldBack \n\nO(n). FoldBack the values in the map, such that fold f z == Prelude.foldr f z . elems. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#fold","title":"IntMap.fold","content":"IntMap.fold \nfold \n\nO(n). Fold the values in the map, such that fold f z == Prelude.foldr f z . elems. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#foldBackWithKey","title":"IntMap.foldBackWithKey","content":"IntMap.foldBackWithKey \nfoldBackWithKey \n\nO(n). FoldBack the keys and values in the map, such that foldWithKey f z == Prelude.foldr (uncurry f) z . toAscList. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#foldWithKey","title":"IntMap.foldWithKey","content":"IntMap.foldWithKey \nfoldWithKey \n\nO(n). Fold the keys and values in the map, such that foldWithKey f z == Prelude.foldr (uncurry f) z . toAscList. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#values","title":"IntMap.values","content":"IntMap.values \nvalues \n\nO(n). Return all elements of the map in the ascending order of their keys. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#keys","title":"IntMap.keys","content":"IntMap.keys \nkeys \n\nO(n). Return all keys of the map in ascending order. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#toList","title":"IntMap.toList","content":"IntMap.toList \ntoList \n\nO(n). Convert the map to a list of key/value pairs. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#toSeq","title":"IntMap.toSeq","content":"IntMap.toSeq \ntoSeq \n\nO(n). Convert the map to a seq of key/value pairs. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#toArray","title":"IntMap.toArray","content":"IntMap.toArray \ntoArray \n\nO(n). Convert the map to an array of key/value pairs. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofList","title":"IntMap.ofList","content":"IntMap.ofList \nofList \n\nO(n*min(n,W)). Create a map from a list of key/value pairs. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofListWithKey","title":"IntMap.ofListWithKey","content":"IntMap.ofListWithKey \nofListWithKey \n\nO(n*min(n,W)). Build a map from a list of key/value pairs with a combining function. See also fromAscListWithKey\u0027. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofListWith","title":"IntMap.ofListWith","content":"IntMap.ofListWith \nofListWith \n\nO(n*min(n,W)). Create a map from a list of key/value pairs with a combining function. See also fromAscListWith. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofSeq","title":"IntMap.ofSeq","content":"IntMap.ofSeq \nofSeq \n\nO(n*min(n,W)). Create a map from a seq of key/value pairs. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofSeqWithKey","title":"IntMap.ofSeqWithKey","content":"IntMap.ofSeqWithKey \nofSeqWithKey \n\nO(n*min(n,W)). Build a map from a seq of key/value pairs with a combining function. See also fromAscListWithKey\u0027. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofSeqWith","title":"IntMap.ofSeqWith","content":"IntMap.ofSeqWith \nofSeqWith \n\nO(n*min(n,W)). Create a map from a seq of key/value pairs with a combining function. See also fromAscListWith. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofArray","title":"IntMap.ofArray","content":"IntMap.ofArray \nofArray \n\nO(n*min(n,W)). Create a map from an array of key/value pairs. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofArrayWithKey","title":"IntMap.ofArrayWithKey","content":"IntMap.ofArrayWithKey \nofArrayWithKey \n\nO(n*min(n,W)). Build a map from an array of key/value pairs with a combining function. See also fromAscListWithKey\u0027. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#ofArrayWith","title":"IntMap.ofArrayWith","content":"IntMap.ofArrayWith \nofArrayWith \n\nO(n*min(n,W)). Create a map from an array of key/value pairs with a combining function. See also fromAscListWith. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapKeys","title":"IntMap.mapKeys","content":"IntMap.mapKeys \nmapKeys \n\nO(n*min(n,W)). mapKeys f s is the map obtained by applying f to each key of s. The size of the result may be smaller if f maps two or more distinct keys to the same new key. In this case the value at the greatest of the original keys is retained. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#mapKeysWith","title":"IntMap.mapKeysWith","content":"IntMap.mapKeysWith \nmapKeysWith \n\nO(n*log n). mapKeysWith c f s is the map obtained by applying f to each key of s. The size of the result may be smaller if f maps two or more distinct keys to the same new key. In this case the associated values will be combined using c. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#isSubmapOfBy","title":"IntMap.isSubmapOfBy","content":"IntMap.isSubmapOfBy \nisSubmapOfBy \n\nO(n\u002Bm). The expression (isSubmapOfBy f m1 m2) returns True if all keys in m1 are in m2, and when f returns True when applied to their respective values. Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#isSubmapOf","title":"IntMap.isSubmapOf","content":"IntMap.isSubmapOf \nisSubmapOf \n\nO(n\u002Bm). Is this a submap? Defined as (isSubmapOf = isSubmapOfBy (==)). Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#isProperSubmapOfBy","title":"IntMap.isProperSubmapOfBy","content":"IntMap.isProperSubmapOfBy \nisProperSubmapOfBy \n\nO(n\u002Bm). Is this a proper submap? (ie. a submap but not equal). The expression (isProperSubmapOfBy f m1 m2) returns True when m1 and m2 are not equal, all keys in m1 are in m2, and when f returns True when applied to their respective values.  Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap.html#isProperSubmapOf","title":"IntMap.isProperSubmapOf","content":"IntMap.isProperSubmapOf \nisProperSubmapOf \n\nO(n\u002Bm). Is this a proper submap? (ie. a submap but not equal). Defined as (isProperSubmapOf = isProperSubmapOfBy (==)). Credit: Haskell.org\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html","title":"LeftistHeap","content":"LeftistHeap \n \nLeftistHeap.empty \nempty \nLeftistHeap.head \nhead \nLeftistHeap.tryGetHead \ntryGetHead \nLeftistHeap.insert \ninsert \nLeftistHeap.isEmpty \nisEmpty \nLeftistHeap.isDescending \nisDescending \nLeftistHeap.length \nlength \nLeftistHeap.merge \nmerge \nLeftistHeap.tryMerge \ntryMerge \nLeftistHeap.ofSeq \nofSeq \nLeftistHeap.tail \ntail \nLeftistHeap.tryGetTail \ntryGetTail \nLeftistHeap.uncons \nuncons \nLeftistHeap.tryUncons \ntryUncons \nLeftistHeap.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#empty","title":"LeftistHeap.empty","content":"LeftistHeap.empty \nempty \n\nO(1). Returns a empty heap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#head","title":"LeftistHeap.head","content":"LeftistHeap.head \nhead \n\nO(1). Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#tryGetHead","title":"LeftistHeap.tryGetHead","content":"LeftistHeap.tryGetHead \ntryGetHead \n\nO(1). Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#insert","title":"LeftistHeap.insert","content":"LeftistHeap.insert \ninsert \n\nO(log n). Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#isEmpty","title":"LeftistHeap.isEmpty","content":"LeftistHeap.isEmpty \nisEmpty \n\nO(1). Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#isDescending","title":"LeftistHeap.isDescending","content":"LeftistHeap.isDescending \nisDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#length","title":"LeftistHeap.length","content":"LeftistHeap.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#merge","title":"LeftistHeap.merge","content":"LeftistHeap.merge \nmerge \n\nO(log n). Returns heap from merging two heaps, both must have same isDescending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#tryMerge","title":"LeftistHeap.tryMerge","content":"LeftistHeap.tryMerge \ntryMerge \n\nO(log n). Returns heap option from merging two heaps.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#ofSeq","title":"LeftistHeap.ofSeq","content":"LeftistHeap.ofSeq \nofSeq \n\nO(log n). Returns heap from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#tail","title":"LeftistHeap.tail","content":"LeftistHeap.tail \ntail \n\nO(log n). Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#tryGetTail","title":"LeftistHeap.tryGetTail","content":"LeftistHeap.tryGetTail \ntryGetTail \n\nO(log n). Returns option heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#uncons","title":"LeftistHeap.uncons","content":"LeftistHeap.uncons \nuncons \n\nO(log n). Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#tryUncons","title":"LeftistHeap.tryUncons","content":"LeftistHeap.tryUncons \ntryUncons \n\nO(log n). Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap.html#( |Cons|Nil| )","title":"LeftistHeap.( |Cons|Nil| )","content":"LeftistHeap.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html","title":"ListZipper","content":"ListZipper \n \nListZipper.focus \nfocus \nListZipper.modify \nmodify \nListZipper.forward \nforward \nListZipper.back \nback \nListZipper.front \nfront \nListZipper.zipper \nzipper \nListZipper.getList \ngetList"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html#focus","title":"ListZipper.focus","content":"ListZipper.focus \nfocus \n\n Returns the head element from the list under focus\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html#modify","title":"ListZipper.modify","content":"ListZipper.modify \nmodify \n\n Changes the element under the focus\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html#forward","title":"ListZipper.forward","content":"ListZipper.forward \nforward \n\n Moves the zipper forward\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html#back","title":"ListZipper.back","content":"ListZipper.back \nback \n\n Moves the zipper backwards\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html#front","title":"ListZipper.front","content":"ListZipper.front \nfront \n\n Moves the zipper to the front\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html#zipper","title":"ListZipper.zipper","content":"ListZipper.zipper \nzipper \n\n Creates a list zipper\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper.html#getList","title":"ListZipper.getList","content":"ListZipper.getList \ngetList \n\n Returns the whole list from the zipper\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html","title":"PairingHeap","content":"PairingHeap \n \nPairingHeap.empty \nempty \nPairingHeap.head \nhead \nPairingHeap.tryGetHead \ntryGetHead \nPairingHeap.insert \ninsert \nPairingHeap.isEmpty \nisEmpty \nPairingHeap.isDescending \nisDescending \nPairingHeap.length \nlength \nPairingHeap.merge \nmerge \nPairingHeap.tryMerge \ntryMerge \nPairingHeap.ofSeq \nofSeq \nPairingHeap.tail \ntail \nPairingHeap.tryGetTail \ntryGetTail \nPairingHeap.uncons \nuncons \nPairingHeap.tryUncons \ntryUncons \nPairingHeap.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#empty","title":"PairingHeap.empty","content":"PairingHeap.empty \nempty \n\nO(1) Returns a empty heap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#head","title":"PairingHeap.head","content":"PairingHeap.head \nhead \n\nO(1) worst case. Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#tryGetHead","title":"PairingHeap.tryGetHead","content":"PairingHeap.tryGetHead \ntryGetHead \n\nO(1) worst case. Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#insert","title":"PairingHeap.insert","content":"PairingHeap.insert \ninsert \n\nO(1) amortized time. Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#isEmpty","title":"PairingHeap.isEmpty","content":"PairingHeap.isEmpty \nisEmpty \n\nO(1) Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#isDescending","title":"PairingHeap.isDescending","content":"PairingHeap.isDescending \nisDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#length","title":"PairingHeap.length","content":"PairingHeap.length \nlength \n\nO(n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#merge","title":"PairingHeap.merge","content":"PairingHeap.merge \nmerge \n\nO(1) amortized time. Returns heap from merging two heaps, both must have same descending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#tryMerge","title":"PairingHeap.tryMerge","content":"PairingHeap.tryMerge \ntryMerge \n\nO(1) amortized time. Returns heap option from merging two heaps.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#ofSeq","title":"PairingHeap.ofSeq","content":"PairingHeap.ofSeq \nofSeq \n\nO(n). Returns heap from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#tail","title":"PairingHeap.tail","content":"PairingHeap.tail \ntail \n\nO(log n) amortized time. Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#tryGetTail","title":"PairingHeap.tryGetTail","content":"PairingHeap.tryGetTail \ntryGetTail \n\nO(log n) amortized time. Returns option heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#uncons","title":"PairingHeap.uncons","content":"PairingHeap.uncons \nuncons \n\nO(log n) amortized time. Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#tryUncons","title":"PairingHeap.tryUncons","content":"PairingHeap.tryUncons \ntryUncons \n\nO(log n) amortized time. Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap.html#( |Cons|Nil| )","title":"PairingHeap.( |Cons|Nil| )","content":"PairingHeap.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html","title":"PhysicistQueue","content":"PhysicistQueue \n \nPhysicistQueue.empty \nempty \nPhysicistQueue.fold \nfold \nPhysicistQueue.foldBack \nfoldBack \nPhysicistQueue.head \nhead \nPhysicistQueue.tryGetHead \ntryGetHead \nPhysicistQueue.isEmpty \nisEmpty \nPhysicistQueue.length \nlength \nPhysicistQueue.ofList \nofList \nPhysicistQueue.ofSeq \nofSeq \nPhysicistQueue.rev \nrev \nPhysicistQueue.snoc \nsnoc \nPhysicistQueue.tail \ntail \nPhysicistQueue.tryGetTail \ntryGetTail \nPhysicistQueue.uncons \nuncons \nPhysicistQueue.tryUncons \ntryUncons \nPhysicistQueue.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#empty","title":"PhysicistQueue.empty","content":"PhysicistQueue.empty \nempty \n\nO(1). Returns queue of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#fold","title":"PhysicistQueue.fold","content":"PhysicistQueue.fold \nfold \n\nO(n). Applies a function to each element of the queue, threading an accumulator argument through the computation, left to right.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#foldBack","title":"PhysicistQueue.foldBack","content":"PhysicistQueue.foldBack \nfoldBack \n\nO(n). Applies a function to each element of the queue, threading an accumulator argument through the computation, right to left.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#head","title":"PhysicistQueue.head","content":"PhysicistQueue.head \nhead \n\nO(1), amortized. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#tryGetHead","title":"PhysicistQueue.tryGetHead","content":"PhysicistQueue.tryGetHead \ntryGetHead \n\nO(1), amortized. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#isEmpty","title":"PhysicistQueue.isEmpty","content":"PhysicistQueue.isEmpty \nisEmpty \n\nO(1). Returns true if the queue has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#length","title":"PhysicistQueue.length","content":"PhysicistQueue.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#ofList","title":"PhysicistQueue.ofList","content":"PhysicistQueue.ofList \nofList \n\nO(1). Returns a queue of the list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#ofSeq","title":"PhysicistQueue.ofSeq","content":"PhysicistQueue.ofSeq \nofSeq \n\nO(1). Returns a queue of the seq.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#rev","title":"PhysicistQueue.rev","content":"PhysicistQueue.rev \nrev \n\nO(1). Returns queue reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#snoc","title":"PhysicistQueue.snoc","content":"PhysicistQueue.snoc \nsnoc \n\nO(1), amortized. Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#tail","title":"PhysicistQueue.tail","content":"PhysicistQueue.tail \ntail \n\nO(1), amortized. Returns a new queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#tryGetTail","title":"PhysicistQueue.tryGetTail","content":"PhysicistQueue.tryGetTail \ntryGetTail \n\nO(1), amortized. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#uncons","title":"PhysicistQueue.uncons","content":"PhysicistQueue.uncons \nuncons \n\nO(1), amortized. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#tryUncons","title":"PhysicistQueue.tryUncons","content":"PhysicistQueue.tryUncons \ntryUncons \n\nO(1), amortized. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue.html#( |Cons|Nil| )","title":"PhysicistQueue.( |Cons|Nil| )","content":"PhysicistQueue.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html","title":"RealTimeDeque","content":"RealTimeDeque \n \nRealTimeDeque.append \nappend \nRealTimeDeque.appendC \nappendC \nRealTimeDeque.cons \ncons \nRealTimeDeque.empty \nempty \nRealTimeDeque.head \nhead \nRealTimeDeque.tryGetHead \ntryGetHead \nRealTimeDeque.init \ninit \nRealTimeDeque.tryGetInit \ntryGetInit \nRealTimeDeque.isEmpty \nisEmpty \nRealTimeDeque.last \nlast \nRealTimeDeque.tryGetLast \ntryGetLast \nRealTimeDeque.length \nlength \nRealTimeDeque.lookup \nlookup \nRealTimeDeque.tryLookup \ntryLookup \nRealTimeDeque.ofCatLists \nofCatLists \nRealTimeDeque.ofCatListsC \nofCatListsC \nRealTimeDeque.ofCatSeqs \nofCatSeqs \nRealTimeDeque.ofCatSeqsC \nofCatSeqsC \nRealTimeDeque.ofSeq \nofSeq \nRealTimeDeque.ofSeqC \nofSeqC \nRealTimeDeque.remove \nremove \nRealTimeDeque.tryRemove \ntryRemove \nRealTimeDeque.rev \nrev \nRealTimeDeque.singleton \nsingleton \nRealTimeDeque.singletonC \nsingletonC \nRealTimeDeque.snoc \nsnoc \nRealTimeDeque.tail \ntail \nRealTimeDeque.tryGetTail \ntryGetTail \nRealTimeDeque.uncons \nuncons \nRealTimeDeque.tryUncons \ntryUncons \nRealTimeDeque.unsnoc \nunsnoc \nRealTimeDeque.tryUnsnoc \ntryUnsnoc \nRealTimeDeque.update \nupdate \nRealTimeDeque.tryUpdate \ntryUpdate \nRealTimeDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \nRealTimeDeque.( |Snoc|Nil| ) \n( |Snoc|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#append","title":"RealTimeDeque.append","content":"RealTimeDeque.append \nappend \n\nO(|ys-xs|). Returns a deque of the two deques concatenated, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#appendC","title":"RealTimeDeque.appendC","content":"RealTimeDeque.appendC \nappendC \n\nO(|ys-xs|). Returns a deque of the two deques concatenated, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#cons","title":"RealTimeDeque.cons","content":"RealTimeDeque.cons \ncons \n\nO(1), worst case. Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#empty","title":"RealTimeDeque.empty","content":"RealTimeDeque.empty \nempty \n\nO(1). Returns deque of no elements, c is front-back stream ration constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#head","title":"RealTimeDeque.head","content":"RealTimeDeque.head \nhead \n\nO(1), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryGetHead","title":"RealTimeDeque.tryGetHead","content":"RealTimeDeque.tryGetHead \ntryGetHead \n\nO(1), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#init","title":"RealTimeDeque.init","content":"RealTimeDeque.init \ninit \n\nO(1), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryGetInit","title":"RealTimeDeque.tryGetInit","content":"RealTimeDeque.tryGetInit \ntryGetInit \n\nO(1), worst case. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#isEmpty","title":"RealTimeDeque.isEmpty","content":"RealTimeDeque.isEmpty \nisEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#last","title":"RealTimeDeque.last","content":"RealTimeDeque.last \nlast \n\nO(1), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryGetLast","title":"RealTimeDeque.tryGetLast","content":"RealTimeDeque.tryGetLast \ntryGetLast \n\nO(1), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#length","title":"RealTimeDeque.length","content":"RealTimeDeque.length \nlength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#lookup","title":"RealTimeDeque.lookup","content":"RealTimeDeque.lookup \nlookup \n\nO(n/2), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryLookup","title":"RealTimeDeque.tryLookup","content":"RealTimeDeque.tryLookup \ntryLookup \n\nO(n/2), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#ofCatLists","title":"RealTimeDeque.ofCatLists","content":"RealTimeDeque.ofCatLists \nofCatLists \n\nO(|ys-xs|). Returns a deque of the two lists concatenated, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#ofCatListsC","title":"RealTimeDeque.ofCatListsC","content":"RealTimeDeque.ofCatListsC \nofCatListsC \n\nO(|ys-xs|). Returns a deque of the two lists concatenated, c is front-back stream ration constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#ofCatSeqs","title":"RealTimeDeque.ofCatSeqs","content":"RealTimeDeque.ofCatSeqs \nofCatSeqs \n\nO(|ys-xs|). Returns a deque of the two seqs concatenated, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#ofCatSeqsC","title":"RealTimeDeque.ofCatSeqsC","content":"RealTimeDeque.ofCatSeqsC \nofCatSeqsC \n\nO(|ys-xs|). Returns a deque of the two seqs concatenated, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#ofSeq","title":"RealTimeDeque.ofSeq","content":"RealTimeDeque.ofSeq \nofSeq \n\nO(n). Returns a deque of the seq, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#ofSeqC","title":"RealTimeDeque.ofSeqC","content":"RealTimeDeque.ofSeqC \nofSeqC \n\nO(n). Returns a deque of the seq, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#remove","title":"RealTimeDeque.remove","content":"RealTimeDeque.remove \nremove \n\nO(n/2), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryRemove","title":"RealTimeDeque.tryRemove","content":"RealTimeDeque.tryRemove \ntryRemove \n\nO(n/2), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#rev","title":"RealTimeDeque.rev","content":"RealTimeDeque.rev \nrev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#singleton","title":"RealTimeDeque.singleton","content":"RealTimeDeque.singleton \nsingleton \n\nO(1). Returns a deque of one element, front-back stream ratio constant defaulted to 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#singletonC","title":"RealTimeDeque.singletonC","content":"RealTimeDeque.singletonC \nsingletonC \n\nO(1). Returns a deque of one element, c is front-back stream ratio constant, should be at least 2.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#snoc","title":"RealTimeDeque.snoc","content":"RealTimeDeque.snoc \nsnoc \n\nO(1), worst case. Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tail","title":"RealTimeDeque.tail","content":"RealTimeDeque.tail \ntail \n\nO(1), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryGetTail","title":"RealTimeDeque.tryGetTail","content":"RealTimeDeque.tryGetTail \ntryGetTail \n\nO(1), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#uncons","title":"RealTimeDeque.uncons","content":"RealTimeDeque.uncons \nuncons \n\nO(1), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryUncons","title":"RealTimeDeque.tryUncons","content":"RealTimeDeque.tryUncons \ntryUncons \n\nO(1), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#unsnoc","title":"RealTimeDeque.unsnoc","content":"RealTimeDeque.unsnoc \nunsnoc \n\nO(1), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryUnsnoc","title":"RealTimeDeque.tryUnsnoc","content":"RealTimeDeque.tryUnsnoc \ntryUnsnoc \n\nO(1), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#update","title":"RealTimeDeque.update","content":"RealTimeDeque.update \nupdate \n\nO(n/2), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#tryUpdate","title":"RealTimeDeque.tryUpdate","content":"RealTimeDeque.tryUpdate \ntryUpdate \n\nO(n/2), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#( |Cons|Nil| )","title":"RealTimeDeque.( |Cons|Nil| )","content":"RealTimeDeque.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque.html#( |Snoc|Nil| )","title":"RealTimeDeque.( |Snoc|Nil| )","content":"RealTimeDeque.( |Snoc|Nil| ) \n( |Snoc|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html","title":"RealTimeQueue","content":"RealTimeQueue \n\n RealTime queue from Chris Okasaki\u0027s \u0022Purely functional data structures\u0022\n original implementation taken from http://lepensemoi.free.fr/index.php/2010/01/07/real-time-queue\n \nRealTimeQueue.empty \nempty \nRealTimeQueue.isEmpty \nisEmpty \nRealTimeQueue.rotate \nrotate \nRealTimeQueue.exec \nexec \nRealTimeQueue.snoc \nsnoc \nRealTimeQueue.head \nhead \nRealTimeQueue.tryGetHead \ntryGetHead \nRealTimeQueue.tail \ntail \nRealTimeQueue.tryGetTail \ntryGetTail"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#empty","title":"RealTimeQueue.empty","content":"RealTimeQueue.empty \nempty \n\nO(1). Returns queue of no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#isEmpty","title":"RealTimeQueue.isEmpty","content":"RealTimeQueue.isEmpty \nisEmpty \n\nO(1). Returns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#rotate","title":"RealTimeQueue.rotate","content":"RealTimeQueue.rotate \nrotate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#exec","title":"RealTimeQueue.exec","content":"RealTimeQueue.exec \nexec \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#snoc","title":"RealTimeQueue.snoc","content":"RealTimeQueue.snoc \nsnoc \n\nO(1), worst case. Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#head","title":"RealTimeQueue.head","content":"RealTimeQueue.head \nhead \n\nO(1), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#tryGetHead","title":"RealTimeQueue.tryGetHead","content":"RealTimeQueue.tryGetHead \ntryGetHead \n\nO(1), worst case.  Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#tail","title":"RealTimeQueue.tail","content":"RealTimeQueue.tail \ntail \n\nO(1), worst case. Returns a new queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue.html#tryGetTail","title":"RealTimeQueue.tryGetTail","content":"RealTimeQueue.tryGetTail \ntryGetTail \n\nO(1), worst case. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer.html","title":"RingBuffer","content":"RingBuffer \n \nRingBuffer.create \ncreate"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer.html#create","title":"RingBuffer.create","content":"RingBuffer.create \ncreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html","title":"RoseTree","content":"RoseTree \n \nRoseTree.create \ncreate \nRoseTree.singleton \nsingleton \nRoseTree.map \nmap \nRoseTree.ap \nap \nRoseTree.lift2 \nlift2 \nRoseTree.bind \nbind \nRoseTree.dfsPre \ndfsPre \nRoseTree.dfsPost \ndfsPost \nRoseTree.unfold \nunfold \nRoseTree.unfoldForest \nunfoldForest \nRoseTree.mapAccum \nmapAccum"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#create","title":"RoseTree.create","content":"RoseTree.create \ncreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#singleton","title":"RoseTree.singleton","content":"RoseTree.singleton \nsingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#map","title":"RoseTree.map","content":"RoseTree.map \nmap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#ap","title":"RoseTree.ap","content":"RoseTree.ap \nap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#lift2","title":"RoseTree.lift2","content":"RoseTree.lift2 \nlift2 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#bind","title":"RoseTree.bind","content":"RoseTree.bind \nbind \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#dfsPre","title":"RoseTree.dfsPre","content":"RoseTree.dfsPre \ndfsPre \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#dfsPost","title":"RoseTree.dfsPost","content":"RoseTree.dfsPost \ndfsPost \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#unfold","title":"RoseTree.unfold","content":"RoseTree.unfold \nunfold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#unfoldForest","title":"RoseTree.unfoldForest","content":"RoseTree.unfoldForest \nunfoldForest \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetreemodule.html#mapAccum","title":"RoseTree.mapAccum","content":"RoseTree.mapAccum \nmapAccum \n\n Behaves like a combination of map and fold;\n it applies a function to each element of a tree,\n passing an accumulating parameter,\n and returning a final value of this accumulator together with the new tree.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html","title":"SkewBinaryRandomAccessList","content":"SkewBinaryRandomAccessList \n \nSkewBinaryRandomAccessList.cons \ncons \nSkewBinaryRandomAccessList.head \nhead \nSkewBinaryRandomAccessList.tryGetHead \ntryGetHead \nSkewBinaryRandomAccessList.empty \nempty \nSkewBinaryRandomAccessList.isEmpty \nisEmpty \nSkewBinaryRandomAccessList.length \nlength \nSkewBinaryRandomAccessList.lookup \nlookup \nSkewBinaryRandomAccessList.tryLookup \ntryLookup \nSkewBinaryRandomAccessList.ofSeq \nofSeq \nSkewBinaryRandomAccessList.rev \nrev \nSkewBinaryRandomAccessList.tail \ntail \nSkewBinaryRandomAccessList.tryGetTail \ntryGetTail \nSkewBinaryRandomAccessList.uncons \nuncons \nSkewBinaryRandomAccessList.tryUncons \ntryUncons \nSkewBinaryRandomAccessList.update \nupdate \nSkewBinaryRandomAccessList.tryUpdate \ntryUpdate \nSkewBinaryRandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#cons","title":"SkewBinaryRandomAccessList.cons","content":"SkewBinaryRandomAccessList.cons \ncons \n\nO(1), worst case. Returns a new random access list with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#head","title":"SkewBinaryRandomAccessList.head","content":"SkewBinaryRandomAccessList.head \nhead \n\nO(1), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#tryGetHead","title":"SkewBinaryRandomAccessList.tryGetHead","content":"SkewBinaryRandomAccessList.tryGetHead \ntryGetHead \n\nO(1), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#empty","title":"SkewBinaryRandomAccessList.empty","content":"SkewBinaryRandomAccessList.empty \nempty \n\nreturns a empty random access list.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#isEmpty","title":"SkewBinaryRandomAccessList.isEmpty","content":"SkewBinaryRandomAccessList.isEmpty \nisEmpty \n\nO(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#length","title":"SkewBinaryRandomAccessList.length","content":"SkewBinaryRandomAccessList.length \nlength \n\nO(log n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#lookup","title":"SkewBinaryRandomAccessList.lookup","content":"SkewBinaryRandomAccessList.lookup \nlookup \n\nO(log n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#tryLookup","title":"SkewBinaryRandomAccessList.tryLookup","content":"SkewBinaryRandomAccessList.tryLookup \ntryLookup \n\nO(log n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#ofSeq","title":"SkewBinaryRandomAccessList.ofSeq","content":"SkewBinaryRandomAccessList.ofSeq \nofSeq \n\nO(n) Returns random access list from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#rev","title":"SkewBinaryRandomAccessList.rev","content":"SkewBinaryRandomAccessList.rev \nrev \n\nO(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#tail","title":"SkewBinaryRandomAccessList.tail","content":"SkewBinaryRandomAccessList.tail \ntail \n\nO(1), worst case. Returns a new random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#tryGetTail","title":"SkewBinaryRandomAccessList.tryGetTail","content":"SkewBinaryRandomAccessList.tryGetTail \ntryGetTail \n\nO(1), worst case. Returns a option random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#uncons","title":"SkewBinaryRandomAccessList.uncons","content":"SkewBinaryRandomAccessList.uncons \nuncons \n\nO(1), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#tryUncons","title":"SkewBinaryRandomAccessList.tryUncons","content":"SkewBinaryRandomAccessList.tryUncons \ntryUncons \n\nO(1), worst case. Returns the option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#update","title":"SkewBinaryRandomAccessList.update","content":"SkewBinaryRandomAccessList.update \nupdate \n\nO(log n), worst case. Returns random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#tryUpdate","title":"SkewBinaryRandomAccessList.tryUpdate","content":"SkewBinaryRandomAccessList.tryUpdate \ntryUpdate \n\nO(log n), worst case. Returns option random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist.html#( |Cons|Nil| )","title":"SkewBinaryRandomAccessList.( |Cons|Nil| )","content":"SkewBinaryRandomAccessList.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html","title":"SkewBinomialHeap","content":"SkewBinomialHeap \n \nSkewBinomialHeap.empty \nempty \nSkewBinomialHeap.head \nhead \nSkewBinomialHeap.tryHead \ntryHead \nSkewBinomialHeap.insert \ninsert \nSkewBinomialHeap.isEmpty \nisEmpty \nSkewBinomialHeap.isDescending \nisDescending \nSkewBinomialHeap.length \nlength \nSkewBinomialHeap.count \ncount \nSkewBinomialHeap.merge \nmerge \nSkewBinomialHeap.tryMerge \ntryMerge \nSkewBinomialHeap.ofSeq \nofSeq \nSkewBinomialHeap.tail \ntail \nSkewBinomialHeap.tryTail \ntryTail \nSkewBinomialHeap.uncons \nuncons \nSkewBinomialHeap.tryUncons \ntryUncons \nSkewBinomialHeap.toSeq \ntoSeq \nSkewBinomialHeap.toList \ntoList \nSkewBinomialHeap.( |Cons|Nil| ) \n( |Cons|Nil| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#empty","title":"SkewBinomialHeap.empty","content":"SkewBinomialHeap.empty \nempty \n\nO(1) - Returns an empty heap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#head","title":"SkewBinomialHeap.head","content":"SkewBinomialHeap.head \nhead \n\nO(log n) - Returns the element at the front. Throws if empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#tryHead","title":"SkewBinomialHeap.tryHead","content":"SkewBinomialHeap.tryHead \ntryHead \n\nO(log n) - Returns Some x where x is the element at the front.\nReturns None if the collection is empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#insert","title":"SkewBinomialHeap.insert","content":"SkewBinomialHeap.insert \ninsert \n\nO(1) - Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#isEmpty","title":"SkewBinomialHeap.isEmpty","content":"SkewBinomialHeap.isEmpty \nisEmpty \n\nO(1) - Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#isDescending","title":"SkewBinomialHeap.isDescending","content":"SkewBinomialHeap.isDescending \nisDescending \n\nO(1) - Returns true if a call to head of tryHead would return the maximum element in the collection.\n Returns false if the element at the head is the minimum.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#length","title":"SkewBinomialHeap.length","content":"SkewBinomialHeap.length \nlength \n\nO(1) - Returns the number of elements in the collection.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#count","title":"SkewBinomialHeap.count","content":"SkewBinomialHeap.count \ncount \n\nO(1) - Returns the number of elements in the collection.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#merge","title":"SkewBinomialHeap.merge","content":"SkewBinomialHeap.merge \nmerge \n\nO(log n) - Returns a new heap with the elements of both heaps. The two heaps must have the same isDescending value.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#tryMerge","title":"SkewBinomialHeap.tryMerge","content":"SkewBinomialHeap.tryMerge \ntryMerge \n\nO(log n) - Returns Some h where h is the merged heap, is both original heaps have the same isDescending value.\n Returns None if isDescending is different in the heaps supplied.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#ofSeq","title":"SkewBinomialHeap.ofSeq","content":"SkewBinomialHeap.ofSeq \nofSeq \n\nO(n) - Returns heap from the sequence.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#tail","title":"SkewBinomialHeap.tail","content":"SkewBinomialHeap.tail \ntail \n\nO(log n) - Returns a new heap with the front (head) element removed. Throws if empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#tryTail","title":"SkewBinomialHeap.tryTail","content":"SkewBinomialHeap.tryTail \ntryTail \n\nO(log n) - Returns Some h where h is the heap with the front (head) element removed.\n Returns None if the collection is empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#uncons","title":"SkewBinomialHeap.uncons","content":"SkewBinomialHeap.uncons \nuncons \n\n O(log n) - Returns the head element and tail. Throws if empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#tryUncons","title":"SkewBinomialHeap.tryUncons","content":"SkewBinomialHeap.tryUncons \ntryUncons \n\n O(log n) - Returns Some (h, t) where h is the head and t is the tail.\n Returns None if the collection is empty.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#toSeq","title":"SkewBinomialHeap.toSeq","content":"SkewBinomialHeap.toSeq \ntoSeq \n\n O(n * log n) - Returns and ordered sequence of the elements in the heap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#toList","title":"SkewBinomialHeap.toList","content":"SkewBinomialHeap.toList \ntoList \n\n O(n * log n) - Returns and ordered list of the elements in the heap.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap.html#( |Cons|Nil| )","title":"SkewBinomialHeap.( |Cons|Nil| )","content":"SkewBinomialHeap.( |Cons|Nil| ) \n( |Cons|Nil| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html","title":"AltBinRndAccList\u003C\u0027T\u003E","content":"AltBinRndAccList\u003C\u0027T\u003E \n \nAltBinRndAccList\u003C\u0027T\u003E.Cons \nCons \nAltBinRndAccList\u003C\u0027T\u003E.Length \nLength \nAltBinRndAccList\u003C\u0027T\u003E.Lookup \nLookup \nAltBinRndAccList\u003C\u0027T\u003E.Remove \nRemove \nAltBinRndAccList\u003C\u0027T\u003E.Rev \nRev \nAltBinRndAccList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nAltBinRndAccList\u003C\u0027T\u003E.TryLookup \nTryLookup \nAltBinRndAccList\u003C\u0027T\u003E.TryRemove \nTryRemove \nAltBinRndAccList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nAltBinRndAccList\u003C\u0027T\u003E.Update \nUpdate \nAltBinRndAccList\u003C\u0027T\u003E.TryUncons \nTryUncons \nAltBinRndAccList\u003C\u0027T\u003E.Head \nHead \nAltBinRndAccList\u003C\u0027T\u003E.Tail \nTail \nAltBinRndAccList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nAltBinRndAccList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nAltBinRndAccList\u003C\u0027T\u003E.Uncons \nUncons \nAltBinRndAccList\u003C\u0027T\u003E.Nil \nNil \nAltBinRndAccList\u003C\u0027T\u003E.Zero \nZero \nAltBinRndAccList\u003C\u0027T\u003E.One \nOne"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Cons","title":"AltBinRndAccList\u003C\u0027T\u003E.Cons","content":"AltBinRndAccList\u003C\u0027T\u003E.Cons \nCons \n\nO(log n). Returns a new random access list with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Length","title":"AltBinRndAccList\u003C\u0027T\u003E.Length","content":"AltBinRndAccList\u003C\u0027T\u003E.Length \nLength \n\nO(log n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Lookup","title":"AltBinRndAccList\u003C\u0027T\u003E.Lookup","content":"AltBinRndAccList\u003C\u0027T\u003E.Lookup \nLookup \n\nO(log n). Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Remove","title":"AltBinRndAccList\u003C\u0027T\u003E.Remove","content":"AltBinRndAccList\u003C\u0027T\u003E.Remove \nRemove \n\nO(n). Returns random access list with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Rev","title":"AltBinRndAccList\u003C\u0027T\u003E.Rev","content":"AltBinRndAccList\u003C\u0027T\u003E.Rev \nRev \n\nO(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#TryGetHead","title":"AltBinRndAccList\u003C\u0027T\u003E.TryGetHead","content":"AltBinRndAccList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(log n). Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#TryLookup","title":"AltBinRndAccList\u003C\u0027T\u003E.TryLookup","content":"AltBinRndAccList\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nO(log n). Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#TryRemove","title":"AltBinRndAccList\u003C\u0027T\u003E.TryRemove","content":"AltBinRndAccList\u003C\u0027T\u003E.TryRemove \nTryRemove \n\nO(n). Returns option random access list with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#TryUpdate","title":"AltBinRndAccList\u003C\u0027T\u003E.TryUpdate","content":"AltBinRndAccList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nO(log n). Returns option random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Update","title":"AltBinRndAccList\u003C\u0027T\u003E.Update","content":"AltBinRndAccList\u003C\u0027T\u003E.Update \nUpdate \n\nO(log n). Returns random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#TryUncons","title":"AltBinRndAccList\u003C\u0027T\u003E.TryUncons","content":"AltBinRndAccList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(log n). Returns the option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Head","title":"AltBinRndAccList\u003C\u0027T\u003E.Head","content":"AltBinRndAccList\u003C\u0027T\u003E.Head \nHead \n\nO(log n). Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Tail","title":"AltBinRndAccList\u003C\u0027T\u003E.Tail","content":"AltBinRndAccList\u003C\u0027T\u003E.Tail \nTail \n\nO(log n). Returns a new random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#IsEmpty","title":"AltBinRndAccList\u003C\u0027T\u003E.IsEmpty","content":"AltBinRndAccList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#TryGetTail","title":"AltBinRndAccList\u003C\u0027T\u003E.TryGetTail","content":"AltBinRndAccList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(log n). Returns a option random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Uncons","title":"AltBinRndAccList\u003C\u0027T\u003E.Uncons","content":"AltBinRndAccList\u003C\u0027T\u003E.Uncons \nUncons \n\nO(log n). Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Nil","title":"AltBinRndAccList\u003C\u0027T\u003E.Nil","content":"AltBinRndAccList\u003C\u0027T\u003E.Nil \nNil \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#Zero","title":"AltBinRndAccList\u003C\u0027T\u003E.Zero","content":"AltBinRndAccList\u003C\u0027T\u003E.Zero \nZero \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-altbinrndacclist-1.html#One","title":"AltBinRndAccList\u003C\u0027T\u003E.One","content":"AltBinRndAccList\u003C\u0027T\u003E.One \nOne \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-1.html","title":"BKTree\u003C\u0027T\u003E","content":"BKTree\u003C\u0027T\u003E \n \nBKTree\u003C\u0027T\u003E.ToList \nToList \nBKTree\u003C\u0027T\u003E.Node \nNode \nBKTree\u003C\u0027T\u003E.Empty \nEmpty"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-1.html#ToList","title":"BKTree\u003C\u0027T\u003E.ToList","content":"BKTree\u003C\u0027T\u003E.ToList \nToList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-1.html#Node","title":"BKTree\u003C\u0027T\u003E.Node","content":"BKTree\u003C\u0027T\u003E.Node \nNode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bktree-1.html#Empty","title":"BKTree\u003C\u0027T\u003E.Empty","content":"BKTree\u003C\u0027T\u003E.Empty \nEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html","title":"BankersDeque\u003C\u0027T\u003E","content":"BankersDeque\u003C\u0027T\u003E \n \nBankersDeque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nBankersDeque\u003C\u0027T\u003E.Cons \nCons \nBankersDeque\u003C\u0027T\u003E.Lookup \nLookup \nBankersDeque\u003C\u0027T\u003E.Remove \nRemove \nBankersDeque\u003C\u0027T\u003E.Snoc \nSnoc \nBankersDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \nBankersDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \nBankersDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nBankersDeque\u003C\u0027T\u003E.Update \nUpdate \nBankersDeque\u003C\u0027T\u003E.Init \nInit \nBankersDeque\u003C\u0027T\u003E.Head \nHead \nBankersDeque\u003C\u0027T\u003E.Last \nLast \nBankersDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \nBankersDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \nBankersDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \nBankersDeque\u003C\u0027T\u003E.Tail \nTail \nBankersDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nBankersDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nBankersDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \nBankersDeque\u003C\u0027T\u003E.Uncons \nUncons \nBankersDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nBankersDeque\u003C\u0027T\u003E.Length \nLength \nBankersDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \nBankersDeque\u003C\u0027T\u003E.Rev \nRev"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#( .ctor )","title":"BankersDeque\u003C\u0027T\u003E.( .ctor )","content":"BankersDeque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Cons","title":"BankersDeque\u003C\u0027T\u003E.Cons","content":"BankersDeque\u003C\u0027T\u003E.Cons \nCons \n\nO(1), amortized. Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Lookup","title":"BankersDeque\u003C\u0027T\u003E.Lookup","content":"BankersDeque\u003C\u0027T\u003E.Lookup \nLookup \n\nO(n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Remove","title":"BankersDeque\u003C\u0027T\u003E.Remove","content":"BankersDeque\u003C\u0027T\u003E.Remove \nRemove \n\nO(n), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Snoc","title":"BankersDeque\u003C\u0027T\u003E.Snoc","content":"BankersDeque\u003C\u0027T\u003E.Snoc \nSnoc \n\nO(1), amortized. Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryLookup","title":"BankersDeque\u003C\u0027T\u003E.TryLookup","content":"BankersDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nO(n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryRemove","title":"BankersDeque\u003C\u0027T\u003E.TryRemove","content":"BankersDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \n\nO(n), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryUpdate","title":"BankersDeque\u003C\u0027T\u003E.TryUpdate","content":"BankersDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nO(n), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Update","title":"BankersDeque\u003C\u0027T\u003E.Update","content":"BankersDeque\u003C\u0027T\u003E.Update \nUpdate \n\nO(n), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Init","title":"BankersDeque\u003C\u0027T\u003E.Init","content":"BankersDeque\u003C\u0027T\u003E.Init \nInit \n\nO(1), amortized. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Head","title":"BankersDeque\u003C\u0027T\u003E.Head","content":"BankersDeque\u003C\u0027T\u003E.Head \nHead \n\nO(1), amortized. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Last","title":"BankersDeque\u003C\u0027T\u003E.Last","content":"BankersDeque\u003C\u0027T\u003E.Last \nLast \n\nO(1), amortized. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Unsnoc","title":"BankersDeque\u003C\u0027T\u003E.Unsnoc","content":"BankersDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \n\nO(1), amortized. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryUncons","title":"BankersDeque\u003C\u0027T\u003E.TryUncons","content":"BankersDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1), amortized. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryGetInit","title":"BankersDeque\u003C\u0027T\u003E.TryGetInit","content":"BankersDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \n\nO(1), amortized. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Tail","title":"BankersDeque\u003C\u0027T\u003E.Tail","content":"BankersDeque\u003C\u0027T\u003E.Tail \nTail \n\nO(1), amortized. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#IsEmpty","title":"BankersDeque\u003C\u0027T\u003E.IsEmpty","content":"BankersDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryGetTail","title":"BankersDeque\u003C\u0027T\u003E.TryGetTail","content":"BankersDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(1), amortized. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryGetLast","title":"BankersDeque\u003C\u0027T\u003E.TryGetLast","content":"BankersDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \n\nO(1), amortized. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Uncons","title":"BankersDeque\u003C\u0027T\u003E.Uncons","content":"BankersDeque\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1), amortized. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryGetHead","title":"BankersDeque\u003C\u0027T\u003E.TryGetHead","content":"BankersDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1), amortized. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Length","title":"BankersDeque\u003C\u0027T\u003E.Length","content":"BankersDeque\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#TryUnsnoc","title":"BankersDeque\u003C\u0027T\u003E.TryUnsnoc","content":"BankersDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \n\nO(1), amortized. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersdeque-1.html#Rev","title":"BankersDeque\u003C\u0027T\u003E.Rev","content":"BankersDeque\u003C\u0027T\u003E.Rev \nRev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html","title":"BankersQueue\u003C\u0027T\u003E","content":"BankersQueue\u003C\u0027T\u003E \n \nBankersQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nBankersQueue\u003C\u0027T\u003E.Snoc \nSnoc \nBankersQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nBankersQueue\u003C\u0027T\u003E.Head \nHead \nBankersQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nBankersQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \nBankersQueue\u003C\u0027T\u003E.Uncons \nUncons \nBankersQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nBankersQueue\u003C\u0027T\u003E.Length \nLength \nBankersQueue\u003C\u0027T\u003E.Tail \nTail \nBankersQueue\u003C\u0027T\u003E.Rev \nRev"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#( .ctor )","title":"BankersQueue\u003C\u0027T\u003E.( .ctor )","content":"BankersQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#Snoc","title":"BankersQueue\u003C\u0027T\u003E.Snoc","content":"BankersQueue\u003C\u0027T\u003E.Snoc \nSnoc \n\nO(1), amortized. Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#IsEmpty","title":"BankersQueue\u003C\u0027T\u003E.IsEmpty","content":"BankersQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the queue has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#Head","title":"BankersQueue\u003C\u0027T\u003E.Head","content":"BankersQueue\u003C\u0027T\u003E.Head \nHead \n\nO(1), amortized. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#TryGetTail","title":"BankersQueue\u003C\u0027T\u003E.TryGetTail","content":"BankersQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(1), amortized. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#TryUncons","title":"BankersQueue\u003C\u0027T\u003E.TryUncons","content":"BankersQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1), amortized. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#Uncons","title":"BankersQueue\u003C\u0027T\u003E.Uncons","content":"BankersQueue\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1), amortized. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#TryGetHead","title":"BankersQueue\u003C\u0027T\u003E.TryGetHead","content":"BankersQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1), amortized. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#Length","title":"BankersQueue\u003C\u0027T\u003E.Length","content":"BankersQueue\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#Tail","title":"BankersQueue\u003C\u0027T\u003E.Tail","content":"BankersQueue\u003C\u0027T\u003E.Tail \nTail \n\nO(1), amortized. Returns a new queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bankersqueue-1.html#Rev","title":"BankersQueue\u003C\u0027T\u003E.Rev","content":"BankersQueue\u003C\u0027T\u003E.Rev \nRev \n\nO(1). Returns queue reversed\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html","title":"BatchedDeque\u003C\u0027T\u003E","content":"BatchedDeque\u003C\u0027T\u003E \n \nBatchedDeque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nBatchedDeque\u003C\u0027T\u003E.Cons \nCons \nBatchedDeque\u003C\u0027T\u003E.Lookup \nLookup \nBatchedDeque\u003C\u0027T\u003E.Remove \nRemove \nBatchedDeque\u003C\u0027T\u003E.Snoc \nSnoc \nBatchedDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \nBatchedDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \nBatchedDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nBatchedDeque\u003C\u0027T\u003E.Update \nUpdate \nBatchedDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \nBatchedDeque\u003C\u0027T\u003E.Head \nHead \nBatchedDeque\u003C\u0027T\u003E.Rev \nRev \nBatchedDeque\u003C\u0027T\u003E.Length \nLength \nBatchedDeque\u003C\u0027T\u003E.Last \nLast \nBatchedDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nBatchedDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \nBatchedDeque\u003C\u0027T\u003E.Tail \nTail \nBatchedDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \nBatchedDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nBatchedDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nBatchedDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \nBatchedDeque\u003C\u0027T\u003E.Uncons \nUncons \nBatchedDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \nBatchedDeque\u003C\u0027T\u003E.Init \nInit"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#( .ctor )","title":"BatchedDeque\u003C\u0027T\u003E.( .ctor )","content":"BatchedDeque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Cons","title":"BatchedDeque\u003C\u0027T\u003E.Cons","content":"BatchedDeque\u003C\u0027T\u003E.Cons \nCons \n\nO(1). Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Lookup","title":"BatchedDeque\u003C\u0027T\u003E.Lookup","content":"BatchedDeque\u003C\u0027T\u003E.Lookup \nLookup \n\nO(n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Remove","title":"BatchedDeque\u003C\u0027T\u003E.Remove","content":"BatchedDeque\u003C\u0027T\u003E.Remove \nRemove \n\nO(n), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Snoc","title":"BatchedDeque\u003C\u0027T\u003E.Snoc","content":"BatchedDeque\u003C\u0027T\u003E.Snoc \nSnoc \n\nO(1). Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryLookup","title":"BatchedDeque\u003C\u0027T\u003E.TryLookup","content":"BatchedDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nO(n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryRemove","title":"BatchedDeque\u003C\u0027T\u003E.TryRemove","content":"BatchedDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \n\nO(n), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryUpdate","title":"BatchedDeque\u003C\u0027T\u003E.TryUpdate","content":"BatchedDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nO(n), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Update","title":"BatchedDeque\u003C\u0027T\u003E.Update","content":"BatchedDeque\u003C\u0027T\u003E.Update \nUpdate \n\nO(n), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryUncons","title":"BatchedDeque\u003C\u0027T\u003E.TryUncons","content":"BatchedDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1) amortized, O(n), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Head","title":"BatchedDeque\u003C\u0027T\u003E.Head","content":"BatchedDeque\u003C\u0027T\u003E.Head \nHead \n\nO(1) amortized, O(n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Rev","title":"BatchedDeque\u003C\u0027T\u003E.Rev","content":"BatchedDeque\u003C\u0027T\u003E.Rev \nRev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Length","title":"BatchedDeque\u003C\u0027T\u003E.Length","content":"BatchedDeque\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Last","title":"BatchedDeque\u003C\u0027T\u003E.Last","content":"BatchedDeque\u003C\u0027T\u003E.Last \nLast \n\nO(1) amortized, O(n), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryGetHead","title":"BatchedDeque\u003C\u0027T\u003E.TryGetHead","content":"BatchedDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1) amortized, O(n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryUnsnoc","title":"BatchedDeque\u003C\u0027T\u003E.TryUnsnoc","content":"BatchedDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \n\nO(1) amortized, O(n), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Tail","title":"BatchedDeque\u003C\u0027T\u003E.Tail","content":"BatchedDeque\u003C\u0027T\u003E.Tail \nTail \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryGetInit","title":"BatchedDeque\u003C\u0027T\u003E.TryGetInit","content":"BatchedDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#IsEmpty","title":"BatchedDeque\u003C\u0027T\u003E.IsEmpty","content":"BatchedDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryGetTail","title":"BatchedDeque\u003C\u0027T\u003E.TryGetTail","content":"BatchedDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#TryGetLast","title":"BatchedDeque\u003C\u0027T\u003E.TryGetLast","content":"BatchedDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \n\nO(1) amortized, O(n), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Uncons","title":"BatchedDeque\u003C\u0027T\u003E.Uncons","content":"BatchedDeque\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1) amortized, O(n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Unsnoc","title":"BatchedDeque\u003C\u0027T\u003E.Unsnoc","content":"BatchedDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \n\nO(1) amortized, O(n), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batcheddeque-1.html#Init","title":"BatchedDeque\u003C\u0027T\u003E.Init","content":"BatchedDeque\u003C\u0027T\u003E.Init \nInit \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html","title":"BatchedQueue\u003C\u0027T\u003E","content":"BatchedQueue\u003C\u0027T\u003E \n \nBatchedQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nBatchedQueue\u003C\u0027T\u003E.Snoc \nSnoc \nBatchedQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nBatchedQueue\u003C\u0027T\u003E.Head \nHead \nBatchedQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nBatchedQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \nBatchedQueue\u003C\u0027T\u003E.Uncons \nUncons \nBatchedQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nBatchedQueue\u003C\u0027T\u003E.Length \nLength \nBatchedQueue\u003C\u0027T\u003E.Tail \nTail \nBatchedQueue\u003C\u0027T\u003E.Rev \nRev"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#( .ctor )","title":"BatchedQueue\u003C\u0027T\u003E.( .ctor )","content":"BatchedQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#Snoc","title":"BatchedQueue\u003C\u0027T\u003E.Snoc","content":"BatchedQueue\u003C\u0027T\u003E.Snoc \nSnoc \n\nreturns a new queue with the element added to the end\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#IsEmpty","title":"BatchedQueue\u003C\u0027T\u003E.IsEmpty","content":"BatchedQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nreturns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#Head","title":"BatchedQueue\u003C\u0027T\u003E.Head","content":"BatchedQueue\u003C\u0027T\u003E.Head \nHead \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#TryGetTail","title":"BatchedQueue\u003C\u0027T\u003E.TryGetTail","content":"BatchedQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nreturns option queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#TryUncons","title":"BatchedQueue\u003C\u0027T\u003E.TryUncons","content":"BatchedQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nreturns option first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#Uncons","title":"BatchedQueue\u003C\u0027T\u003E.Uncons","content":"BatchedQueue\u003C\u0027T\u003E.Uncons \nUncons \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#TryGetHead","title":"BatchedQueue\u003C\u0027T\u003E.TryGetHead","content":"BatchedQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nreturns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#Length","title":"BatchedQueue\u003C\u0027T\u003E.Length","content":"BatchedQueue\u003C\u0027T\u003E.Length \nLength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#Tail","title":"BatchedQueue\u003C\u0027T\u003E.Tail","content":"BatchedQueue\u003C\u0027T\u003E.Tail \nTail \n\nreturns a new queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-batchedqueue-1.html#Rev","title":"BatchedQueue\u003C\u0027T\u003E.Rev","content":"BatchedQueue\u003C\u0027T\u003E.Rev \nRev \n\nreturns queue reversed\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html","title":"BinaryRandomAccessList\u003C\u0027T\u003E","content":"BinaryRandomAccessList\u003C\u0027T\u003E \n \nBinaryRandomAccessList\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nBinaryRandomAccessList\u003C\u0027T\u003E.Cons \nCons \nBinaryRandomAccessList\u003C\u0027T\u003E.Length \nLength \nBinaryRandomAccessList\u003C\u0027T\u003E.Lookup \nLookup \nBinaryRandomAccessList\u003C\u0027T\u003E.Rev \nRev \nBinaryRandomAccessList\u003C\u0027T\u003E.TryLookup \nTryLookup \nBinaryRandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nBinaryRandomAccessList\u003C\u0027T\u003E.Update \nUpdate \nBinaryRandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \nBinaryRandomAccessList\u003C\u0027T\u003E.randomAccessList \nrandomAccessList \nBinaryRandomAccessList\u003C\u0027T\u003E.Head \nHead \nBinaryRandomAccessList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nBinaryRandomAccessList\u003C\u0027T\u003E.Tail \nTail \nBinaryRandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nBinaryRandomAccessList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nBinaryRandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \nBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdate \ntryUpdate \nBinaryRandomAccessList\u003C\u0027T\u003E.update \nupdate \nBinaryRandomAccessList\u003C\u0027T\u003E.updateTree \nupdateTree \nBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdateTree \ntryUpdateTree"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#( .ctor )","title":"BinaryRandomAccessList\u003C\u0027T\u003E.( .ctor )","content":"BinaryRandomAccessList\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Cons","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Cons","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Cons \nCons \n\nO(log n), worst case. Returns a new random access list with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Length","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Length","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Length \nLength \n\nO(log n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Lookup","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Lookup","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Lookup \nLookup \n\nO(log n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Rev","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Rev","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Rev \nRev \n\nO(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#TryLookup","title":"BinaryRandomAccessList\u003C\u0027T\u003E.TryLookup","content":"BinaryRandomAccessList\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nO(log n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#TryUpdate","title":"BinaryRandomAccessList\u003C\u0027T\u003E.TryUpdate","content":"BinaryRandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nO(log n), worst case. Returns option random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Update","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Update","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Update \nUpdate \n\nO(log n), worst case. Returns random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#TryUncons","title":"BinaryRandomAccessList\u003C\u0027T\u003E.TryUncons","content":"BinaryRandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(log n), worst case. Returns the option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#randomAccessList","title":"BinaryRandomAccessList\u003C\u0027T\u003E.randomAccessList","content":"BinaryRandomAccessList\u003C\u0027T\u003E.randomAccessList \nrandomAccessList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Head","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Head","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Head \nHead \n\nO(log n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#TryGetHead","title":"BinaryRandomAccessList\u003C\u0027T\u003E.TryGetHead","content":"BinaryRandomAccessList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(log n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Tail","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Tail","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Tail \nTail \n\nO(log n), worst case. Returns a new random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#IsEmpty","title":"BinaryRandomAccessList\u003C\u0027T\u003E.IsEmpty","content":"BinaryRandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#TryGetTail","title":"BinaryRandomAccessList\u003C\u0027T\u003E.TryGetTail","content":"BinaryRandomAccessList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(log n), worst case. Returns a option random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#Uncons","title":"BinaryRandomAccessList\u003C\u0027T\u003E.Uncons","content":"BinaryRandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \n\nO(log n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#tryUpdate","title":"BinaryRandomAccessList\u003C\u0027T\u003E.tryUpdate","content":"BinaryRandomAccessList\u003C\u0027T\u003E.tryUpdate \ntryUpdate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#update","title":"BinaryRandomAccessList\u003C\u0027T\u003E.update","content":"BinaryRandomAccessList\u003C\u0027T\u003E.update \nupdate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#updateTree","title":"BinaryRandomAccessList\u003C\u0027T\u003E.updateTree","content":"BinaryRandomAccessList\u003C\u0027T\u003E.updateTree \nupdateTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrandomaccesslist-1.html#tryUpdateTree","title":"BinaryRandomAccessList\u003C\u0027T\u003E.tryUpdateTree","content":"BinaryRandomAccessList\u003C\u0027T\u003E.tryUpdateTree \ntryUpdateTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree-1.html","title":"BinaryRoseTree\u003C\u0027T\u003E","content":"BinaryRoseTree\u003C\u0027T\u003E \n\n Multi-way tree, also known as rose tree.\n This RoseTree uses a Vector for the children RoseTree forest.\n Adapted from @mausch F# adaptation of Experimental.RoseTree.\n \nBinaryRoseTree\u003C\u0027T\u003E.Nil \nNil \nBinaryRoseTree\u003C\u0027T\u003E.Node \nNode"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree-1.html#Nil","title":"BinaryRoseTree\u003C\u0027T\u003E.Nil","content":"BinaryRoseTree\u003C\u0027T\u003E.Nil \nNil \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binaryrosetree-1.html#Node","title":"BinaryRoseTree\u003C\u0027T\u003E.Node","content":"BinaryRoseTree\u003C\u0027T\u003E.Node \nNode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytree-1.html","title":"BinaryTree\u003C\u0027T\u003E","content":"BinaryTree\u003C\u0027T\u003E \n\n A simple binary tree\n \nBinaryTree\u003C\u0027T\u003E.Leaf \nLeaf \nBinaryTree\u003C\u0027T\u003E.Branch \nBranch"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytree-1.html#Leaf","title":"BinaryTree\u003C\u0027T\u003E.Leaf","content":"BinaryTree\u003C\u0027T\u003E.Leaf \nLeaf \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytree-1.html#Branch","title":"BinaryTree\u003C\u0027T\u003E.Branch","content":"BinaryTree\u003C\u0027T\u003E.Branch \nBranch \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper-1.html","title":"BinaryTreeZipper\u003C\u0027T\u003E","content":"BinaryTreeZipper\u003C\u0027T\u003E \n\n The zipper data structure for binary trees\n \nBinaryTreeZipper\u003C\u0027T\u003E.Focus \nFocus \nBinaryTreeZipper\u003C\u0027T\u003E.Path \nPath"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper-1.html#Focus","title":"BinaryTreeZipper\u003C\u0027T\u003E.Focus","content":"BinaryTreeZipper\u003C\u0027T\u003E.Focus \nFocus \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binarytreezipper-1.html#Path","title":"BinaryTreeZipper\u003C\u0027T\u003E.Path","content":"BinaryTreeZipper\u003C\u0027T\u003E.Path \nPath \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html","title":"BinomialHeap\u003C\u0027T\u003E","content":"BinomialHeap\u003C\u0027T\u003E \n \nBinomialHeap\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nBinomialHeap\u003C\u0027T\u003E.Head \nHead \nBinomialHeap\u003C\u0027T\u003E.Insert \nInsert \nBinomialHeap\u003C\u0027T\u003E.Length \nLength \nBinomialHeap\u003C\u0027T\u003E.Merge \nMerge \nBinomialHeap\u003C\u0027T\u003E.Tail \nTail \nBinomialHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nBinomialHeap\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nBinomialHeap\u003C\u0027T\u003E.TryMerge \nTryMerge \nBinomialHeap\u003C\u0027T\u003E.TryUncons \nTryUncons \nBinomialHeap\u003C\u0027T\u003E.Uncons \nUncons \nBinomialHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nBinomialHeap\u003C\u0027T\u003E.IsDescending \nIsDescending"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#( .ctor )","title":"BinomialHeap\u003C\u0027T\u003E.( .ctor )","content":"BinomialHeap\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#Head","title":"BinomialHeap\u003C\u0027T\u003E.Head","content":"BinomialHeap\u003C\u0027T\u003E.Head \nHead \n\nO(log n). Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#Insert","title":"BinomialHeap\u003C\u0027T\u003E.Insert","content":"BinomialHeap\u003C\u0027T\u003E.Insert \nInsert \n\nO(log n). Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#Length","title":"BinomialHeap\u003C\u0027T\u003E.Length","content":"BinomialHeap\u003C\u0027T\u003E.Length \nLength \n\nO(log n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#Merge","title":"BinomialHeap\u003C\u0027T\u003E.Merge","content":"BinomialHeap\u003C\u0027T\u003E.Merge \nMerge \n\nO(log n). Returns heap from merging two heaps, both must have same isDescending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#Tail","title":"BinomialHeap\u003C\u0027T\u003E.Tail","content":"BinomialHeap\u003C\u0027T\u003E.Tail \nTail \n\nO(log n). Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#TryGetHead","title":"BinomialHeap\u003C\u0027T\u003E.TryGetHead","content":"BinomialHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(log n). Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#TryGetTail","title":"BinomialHeap\u003C\u0027T\u003E.TryGetTail","content":"BinomialHeap\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(log n). Returns option heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#TryMerge","title":"BinomialHeap\u003C\u0027T\u003E.TryMerge","content":"BinomialHeap\u003C\u0027T\u003E.TryMerge \nTryMerge \n\nO(log n). Returns heap option from merging two heaps.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#TryUncons","title":"BinomialHeap\u003C\u0027T\u003E.TryUncons","content":"BinomialHeap\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(log n). Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#Uncons","title":"BinomialHeap\u003C\u0027T\u003E.Uncons","content":"BinomialHeap\u003C\u0027T\u003E.Uncons \nUncons \n\nO(log n). Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#IsEmpty","title":"BinomialHeap\u003C\u0027T\u003E.IsEmpty","content":"BinomialHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialheap-1.html#IsDescending","title":"BinomialHeap\u003C\u0027T\u003E.IsDescending","content":"BinomialHeap\u003C\u0027T\u003E.IsDescending \nIsDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialtree-1.html","title":"BinomialTree\u003C\u0027T\u003E","content":"BinomialTree\u003C\u0027T\u003E \n \nBinomialTree\u003C\u0027T\u003E.Node \nNode"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-binomialtree-1.html#Node","title":"BinomialTree\u003C\u0027T\u003E.Node","content":"BinomialTree\u003C\u0027T\u003E.Node \nNode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html","title":"BlockResizeArray\u003C\u0027T\u003E","content":"BlockResizeArray\u003C\u0027T\u003E \n\n Resize array fith fixed size block memory allocation.\n Provide more optimal space usage for huge arrays than standard ResizeArray.\n Basic version created by Avdyukhin Dmitry (dimonbv@gmail.com)\n As evidenced by the tests that cannot run in mono, and pending destabilizing tests,\n beware that this data structure can be destabilizing to your assembly.\n \nBlockResizeArray\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nBlockResizeArray\u003C\u0027T\u003E.Add \nAdd \nBlockResizeArray\u003C\u0027T\u003E.DeleteBlock \nDeleteBlock \nBlockResizeArray\u003C\u0027T\u003E.Filter \nFilter \nBlockResizeArray\u003C\u0027T\u003E.Find \nFind \nBlockResizeArray\u003C\u0027T\u003E.Fold \nFold \nBlockResizeArray\u003C\u0027T\u003E.Iter \nIter \nBlockResizeArray\u003C\u0027T\u003E.Map \nMap \nBlockResizeArray\u003C\u0027T\u003E.ToArray \nToArray \nBlockResizeArray\u003C\u0027T\u003E.TryFind \nTryFind \nBlockResizeArray\u003C\u0027T\u003E.Item \nItem \nBlockResizeArray\u003C\u0027T\u003E.Length \nLength \nBlockResizeArray\u003C\u0027T\u003E.Shift \nShift \nBlockResizeArray\u003C\u0027T\u003E.Init \nInit \nBlockResizeArray\u003C\u0027T\u003E.ZeroCreate \nZeroCreate"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#( .ctor )","title":"BlockResizeArray\u003C\u0027T\u003E.( .ctor )","content":"BlockResizeArray\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Add","title":"BlockResizeArray\u003C\u0027T\u003E.Add","content":"BlockResizeArray\u003C\u0027T\u003E.Add \nAdd \n\nAdds element to the block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#DeleteBlock","title":"BlockResizeArray\u003C\u0027T\u003E.DeleteBlock","content":"BlockResizeArray\u003C\u0027T\u003E.DeleteBlock \nDeleteBlock \n\nDeletes block given index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Filter","title":"BlockResizeArray\u003C\u0027T\u003E.Filter","content":"BlockResizeArray\u003C\u0027T\u003E.Filter \nFilter \n\nReturns a new collection containing only the elements of the collection for which the given predicate returns true.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Find","title":"BlockResizeArray\u003C\u0027T\u003E.Find","content":"BlockResizeArray\u003C\u0027T\u003E.Find \nFind \n\nReturns the first element for which the given function returns true. Raise KeyNotFoundException if no such element exists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Fold","title":"BlockResizeArray\u003C\u0027T\u003E.Fold","content":"BlockResizeArray\u003C\u0027T\u003E.Fold \nFold \n\nApplies a function to each element of the collection, threading an accumulator argument through the computation.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Iter","title":"BlockResizeArray\u003C\u0027T\u003E.Iter","content":"BlockResizeArray\u003C\u0027T\u003E.Iter \nIter \n\nApplies the given function to each element of the block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Map","title":"BlockResizeArray\u003C\u0027T\u003E.Map","content":"BlockResizeArray\u003C\u0027T\u003E.Map \nMap \n\nBuilds a new block resize array whose elements are the results of applying the given function to each of the elements of the array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#ToArray","title":"BlockResizeArray\u003C\u0027T\u003E.ToArray","content":"BlockResizeArray\u003C\u0027T\u003E.ToArray \nToArray \n\nCreates an array from the given block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#TryFind","title":"BlockResizeArray\u003C\u0027T\u003E.TryFind","content":"BlockResizeArray\u003C\u0027T\u003E.TryFind \nTryFind \n\nReturns the first element for which the given function returns true. Return None if no such element exists.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Item","title":"BlockResizeArray\u003C\u0027T\u003E.Item","content":"BlockResizeArray\u003C\u0027T\u003E.Item \nItem \n\nAllows to get-set element to block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Length","title":"BlockResizeArray\u003C\u0027T\u003E.Length","content":"BlockResizeArray\u003C\u0027T\u003E.Length \nLength \n\nReturns the length of a block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Shift","title":"BlockResizeArray\u003C\u0027T\u003E.Shift","content":"BlockResizeArray\u003C\u0027T\u003E.Shift \nShift \n\nReturns the shift size for block resize array.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#Init","title":"BlockResizeArray\u003C\u0027T\u003E.Init","content":"BlockResizeArray\u003C\u0027T\u003E.Init \nInit \n\nCreates a block resize array given the dimension and a generator function to compute the elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-blockresizearray-1.html#ZeroCreate","title":"BlockResizeArray\u003C\u0027T\u003E.ZeroCreate","content":"BlockResizeArray\u003C\u0027T\u003E.ZeroCreate \nZeroCreate \n\nCreates a block resize array where the entries are initially the default value Unchecked.defaultof\u0026lt;\u0027T\u0026gt;.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html","title":"BootstrappedQueue\u003C\u0027T\u003E","content":"BootstrappedQueue\u003C\u0027T\u003E \n \nBootstrappedQueue\u003C\u0027T\u003E.checkF \ncheckF \nBootstrappedQueue\u003C\u0027T\u003E.checkQ \ncheckQ \nBootstrappedQueue\u003C\u0027T\u003E.ofList \nofList \nBootstrappedQueue\u003C\u0027T\u003E.snoc \nsnoc \nBootstrappedQueue\u003C\u0027T\u003E.tail \ntail \nBootstrappedQueue\u003C\u0027T\u003E.length \nlength \nBootstrappedQueue\u003C\u0027T\u003E.tryGetTail \ntryGetTail \nBootstrappedQueue\u003C\u0027T\u003E.head \nhead \nBootstrappedQueue\u003C\u0027T\u003E.tryGetHead \ntryGetHead \nBootstrappedQueue\u003C\u0027T\u003E.Empty \nEmpty \nBootstrappedQueue\u003C\u0027T\u003E.NonEmpty \nNonEmpty"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#checkF","title":"BootstrappedQueue\u003C\u0027T\u003E.checkF","content":"BootstrappedQueue\u003C\u0027T\u003E.checkF \ncheckF \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#checkQ","title":"BootstrappedQueue\u003C\u0027T\u003E.checkQ","content":"BootstrappedQueue\u003C\u0027T\u003E.checkQ \ncheckQ \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#ofList","title":"BootstrappedQueue\u003C\u0027T\u003E.ofList","content":"BootstrappedQueue\u003C\u0027T\u003E.ofList \nofList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#snoc","title":"BootstrappedQueue\u003C\u0027T\u003E.snoc","content":"BootstrappedQueue\u003C\u0027T\u003E.snoc \nsnoc \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#tail","title":"BootstrappedQueue\u003C\u0027T\u003E.tail","content":"BootstrappedQueue\u003C\u0027T\u003E.tail \ntail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#length","title":"BootstrappedQueue\u003C\u0027T\u003E.length","content":"BootstrappedQueue\u003C\u0027T\u003E.length \nlength \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#tryGetTail","title":"BootstrappedQueue\u003C\u0027T\u003E.tryGetTail","content":"BootstrappedQueue\u003C\u0027T\u003E.tryGetTail \ntryGetTail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#head","title":"BootstrappedQueue\u003C\u0027T\u003E.head","content":"BootstrappedQueue\u003C\u0027T\u003E.head \nhead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#tryGetHead","title":"BootstrappedQueue\u003C\u0027T\u003E.tryGetHead","content":"BootstrappedQueue\u003C\u0027T\u003E.tryGetHead \ntryGetHead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#Empty","title":"BootstrappedQueue\u003C\u0027T\u003E.Empty","content":"BootstrappedQueue\u003C\u0027T\u003E.Empty \nEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-bootstrappedqueue-1.html#NonEmpty","title":"BootstrappedQueue\u003C\u0027T\u003E.NonEmpty","content":"BootstrappedQueue\u003C\u0027T\u003E.NonEmpty \nNonEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E \n \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.( .ctor ) \n( .ctor ) \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Add \nAdd \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.GetValue \nGetValue \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Remove \nRemove \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.TryGetValue \nTryGetValue \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Count \nCount \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.ToSeq \nToSeq \nChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.ofSeq \nofSeq"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#( .ctor )","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.( .ctor )","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#Add","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Add","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Add \nAdd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#GetValue","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.GetValue","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.GetValue \nGetValue \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#Remove","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Remove","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Remove \nRemove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#TryGetValue","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.TryGetValue","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.TryGetValue \nTryGetValue \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#Count","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Count","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.Count \nCount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#ToSeq","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.ToSeq","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.ToSeq \nToSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-champhashmap-2.html#ofSeq","title":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.ofSeq","content":"ChampHashMap\u003C\u0027TKey, \u0027TValue\u003E.ofSeq \nofSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html","title":"DList\u003C\u0027T\u003E","content":"DList\u003C\u0027T\u003E \n\n The DList is an implementation of John Hughes\u0027 append list.\n See http://dl.acm.org/citation.cfm?id=8475 for more information.\n This implementation adds an additional parameter to allow a more\n efficient calculation of the list length.\n Note that an alternate form would represent the DList as:\n type DList\u0026lt;\u0027T\u0026gt; = DList of (\u0027T list -\u0026gt; \u0027T list)\n An example can be found at http://stackoverflow.com/questions/5324623/functional-o1-append-and-on-iteration-from-first-element-list-data-structure/5327209#5327209\n \nDList\u003C\u0027T\u003E.snoc \nsnoc \nDList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nDList\u003C\u0027T\u003E.Head \nHead \nDList\u003C\u0027T\u003E.Length \nLength \nDList\u003C\u0027T\u003E.Tail \nTail \nDList\u003C\u0027T\u003E.( = ) \n( = ) \nDList\u003C\u0027T\u003E.( [] ) \n( [] ) \nDList\u003C\u0027T\u003E.Nil \nNil \nDList\u003C\u0027T\u003E.Unit \nUnit \nDList\u003C\u0027T\u003E.Join \nJoin"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#snoc","title":"DList\u003C\u0027T\u003E.snoc","content":"DList\u003C\u0027T\u003E.snoc \nsnoc \n\nO(1). Returns a new DList with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#IsEmpty","title":"DList\u003C\u0027T\u003E.IsEmpty","content":"DList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the DList has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#Head","title":"DList\u003C\u0027T\u003E.Head","content":"DList\u003C\u0027T\u003E.Head \nHead \n\nO(log n). Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#Length","title":"DList\u003C\u0027T\u003E.Length","content":"DList\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#Tail","title":"DList\u003C\u0027T\u003E.Tail","content":"DList\u003C\u0027T\u003E.Tail \nTail \n\nO(log n). Returns a new DList of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#( = )","title":"DList\u003C\u0027T\u003E.( = )","content":"DList\u003C\u0027T\u003E.( = ) \n( = ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#( [] )","title":"DList\u003C\u0027T\u003E.( [] )","content":"DList\u003C\u0027T\u003E.( [] ) \n( [] ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#Nil","title":"DList\u003C\u0027T\u003E.Nil","content":"DList\u003C\u0027T\u003E.Nil \nNil \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#Unit","title":"DList\u003C\u0027T\u003E.Unit","content":"DList\u003C\u0027T\u003E.Unit \nUnit \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-dlist-1.html#Join","title":"DList\u003C\u0027T\u003E.Join","content":"DList\u003C\u0027T\u003E.Join \nJoin \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html","title":"Deque\u003C\u0027T\u003E","content":"Deque\u003C\u0027T\u003E \n \nDeque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nDeque\u003C\u0027T\u003E.Cons \nCons \nDeque\u003C\u0027T\u003E.Lookup \nLookup \nDeque\u003C\u0027T\u003E.Remove \nRemove \nDeque\u003C\u0027T\u003E.Snoc \nSnoc \nDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \nDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \nDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nDeque\u003C\u0027T\u003E.Update \nUpdate \nDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \nDeque\u003C\u0027T\u003E.Head \nHead \nDeque\u003C\u0027T\u003E.Rev \nRev \nDeque\u003C\u0027T\u003E.Length \nLength \nDeque\u003C\u0027T\u003E.Last \nLast \nDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \nDeque\u003C\u0027T\u003E.Tail \nTail \nDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \nDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \nDeque\u003C\u0027T\u003E.Uncons \nUncons \nDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \nDeque\u003C\u0027T\u003E.Init \nInit"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#( .ctor )","title":"Deque\u003C\u0027T\u003E.( .ctor )","content":"Deque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Cons","title":"Deque\u003C\u0027T\u003E.Cons","content":"Deque\u003C\u0027T\u003E.Cons \nCons \n\nO(1) amortized, O(n), worst case. Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Lookup","title":"Deque\u003C\u0027T\u003E.Lookup","content":"Deque\u003C\u0027T\u003E.Lookup \nLookup \n\nO(n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Remove","title":"Deque\u003C\u0027T\u003E.Remove","content":"Deque\u003C\u0027T\u003E.Remove \nRemove \n\nO(n), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Snoc","title":"Deque\u003C\u0027T\u003E.Snoc","content":"Deque\u003C\u0027T\u003E.Snoc \nSnoc \n\nO(1) amortized, O(n), worst case. Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryLookup","title":"Deque\u003C\u0027T\u003E.TryLookup","content":"Deque\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nO(n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryRemove","title":"Deque\u003C\u0027T\u003E.TryRemove","content":"Deque\u003C\u0027T\u003E.TryRemove \nTryRemove \n\nO(n), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryUpdate","title":"Deque\u003C\u0027T\u003E.TryUpdate","content":"Deque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nO(n), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Update","title":"Deque\u003C\u0027T\u003E.Update","content":"Deque\u003C\u0027T\u003E.Update \nUpdate \n\nO(n), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryUncons","title":"Deque\u003C\u0027T\u003E.TryUncons","content":"Deque\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1) amortized, O(n), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Head","title":"Deque\u003C\u0027T\u003E.Head","content":"Deque\u003C\u0027T\u003E.Head \nHead \n\nO(1) amortized, O(n), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Rev","title":"Deque\u003C\u0027T\u003E.Rev","content":"Deque\u003C\u0027T\u003E.Rev \nRev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Length","title":"Deque\u003C\u0027T\u003E.Length","content":"Deque\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Last","title":"Deque\u003C\u0027T\u003E.Last","content":"Deque\u003C\u0027T\u003E.Last \nLast \n\nO(1) amortized, O(n), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryGetHead","title":"Deque\u003C\u0027T\u003E.TryGetHead","content":"Deque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1) amortized, O(n), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryUnsnoc","title":"Deque\u003C\u0027T\u003E.TryUnsnoc","content":"Deque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \n\nO(1) amortized, O(n), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Tail","title":"Deque\u003C\u0027T\u003E.Tail","content":"Deque\u003C\u0027T\u003E.Tail \nTail \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryGetInit","title":"Deque\u003C\u0027T\u003E.TryGetInit","content":"Deque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#IsEmpty","title":"Deque\u003C\u0027T\u003E.IsEmpty","content":"Deque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryGetTail","title":"Deque\u003C\u0027T\u003E.TryGetTail","content":"Deque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(1) amortized, O(n), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#TryGetLast","title":"Deque\u003C\u0027T\u003E.TryGetLast","content":"Deque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \n\nO(1) amortized, O(n), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Uncons","title":"Deque\u003C\u0027T\u003E.Uncons","content":"Deque\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1) amortized, O(n), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Unsnoc","title":"Deque\u003C\u0027T\u003E.Unsnoc","content":"Deque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \n\nO(1) amortized, O(n), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-deque-1.html#Init","title":"Deque\u003C\u0027T\u003E.Init","content":"Deque\u003C\u0027T\u003E.Init \nInit \n\nO(1) amortized, O(n), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-digit-1.html","title":"Digit\u003C\u0027T\u003E","content":"Digit\u003C\u0027T\u003E \n \nDigit\u003C\u0027T\u003E.Zero \nZero \nDigit\u003C\u0027T\u003E.One \nOne \nDigit\u003C\u0027T\u003E.Two \nTwo"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-digit-1.html#Zero","title":"Digit\u003C\u0027T\u003E.Zero","content":"Digit\u003C\u0027T\u003E.Zero \nZero \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-digit-1.html#One","title":"Digit\u003C\u0027T\u003E.One","content":"Digit\u003C\u0027T\u003E.One \nOne \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-digit-1.html#Two","title":"Digit\u003C\u0027T\u003E.Two","content":"Digit\u003C\u0027T\u003E.Two \nTwo \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree-1.html","title":"EagerRoseTree\u003C\u0027T\u003E","content":"EagerRoseTree\u003C\u0027T\u003E \n\n Multi-way tree, also known as rose tree.\n This RoseTree uses a List for the children RoseTree forest.\n Adapted from @mausch F# adaptation of Experimental.RoseTree.\n \nEagerRoseTree\u003C\u0027T\u003E.Root \nRoot \nEagerRoseTree\u003C\u0027T\u003E.Children \nChildren"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree-1.html#Root","title":"EagerRoseTree\u003C\u0027T\u003E.Root","content":"EagerRoseTree\u003C\u0027T\u003E.Root \nRoot \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-eagerrosetree-1.html#Children","title":"EagerRoseTree\u003C\u0027T\u003E.Children","content":"EagerRoseTree\u003C\u0027T\u003E.Children \nChildren \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist-1.html","title":"FlatList\u003C\u0027T\u003E","content":"FlatList\u003C\u0027T\u003E \n \nFlatList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nFlatList\u003C\u0027T\u003E.Item \nItem \nFlatList\u003C\u0027T\u003E.Length \nLength \nFlatList\u003C\u0027T\u003E.array \narray"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist-1.html#IsEmpty","title":"FlatList\u003C\u0027T\u003E.IsEmpty","content":"FlatList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\n O(1). Returns true if the flatlist has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist-1.html#Item","title":"FlatList\u003C\u0027T\u003E.Item","content":"FlatList\u003C\u0027T\u003E.Item \nItem \n\n O(1). Returns flatlist element at the index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist-1.html#Length","title":"FlatList\u003C\u0027T\u003E.Length","content":"FlatList\u003C\u0027T\u003E.Length \nLength \n\n O(1). Returns the number of items in the flatlist.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-flatlist-1.html#array","title":"FlatList\u003C\u0027T\u003E.array","content":"FlatList\u003C\u0027T\u003E.array \narray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html","title":"HoodMelvilleQueue\u003C\u0027T\u003E","content":"HoodMelvilleQueue\u003C\u0027T\u003E \n \nHoodMelvilleQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nHoodMelvilleQueue\u003C\u0027T\u003E.Snoc \nSnoc \nHoodMelvilleQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \nHoodMelvilleQueue\u003C\u0027T\u003E.Head \nHead \nHoodMelvilleQueue\u003C\u0027T\u003E.Length \nLength \nHoodMelvilleQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nHoodMelvilleQueue\u003C\u0027T\u003E.Tail \nTail \nHoodMelvilleQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nHoodMelvilleQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nHoodMelvilleQueue\u003C\u0027T\u003E.Uncons \nUncons"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#( .ctor )","title":"HoodMelvilleQueue\u003C\u0027T\u003E.( .ctor )","content":"HoodMelvilleQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#Snoc","title":"HoodMelvilleQueue\u003C\u0027T\u003E.Snoc","content":"HoodMelvilleQueue\u003C\u0027T\u003E.Snoc \nSnoc \n\nreturns a new queue with the element added to the end\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#TryUncons","title":"HoodMelvilleQueue\u003C\u0027T\u003E.TryUncons","content":"HoodMelvilleQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nreturns option first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#Head","title":"HoodMelvilleQueue\u003C\u0027T\u003E.Head","content":"HoodMelvilleQueue\u003C\u0027T\u003E.Head \nHead \n\nreturns the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#Length","title":"HoodMelvilleQueue\u003C\u0027T\u003E.Length","content":"HoodMelvilleQueue\u003C\u0027T\u003E.Length \nLength \n\nreturns the count of elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#TryGetHead","title":"HoodMelvilleQueue\u003C\u0027T\u003E.TryGetHead","content":"HoodMelvilleQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nreturns option first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#Tail","title":"HoodMelvilleQueue\u003C\u0027T\u003E.Tail","content":"HoodMelvilleQueue\u003C\u0027T\u003E.Tail \nTail \n\nreturns a new queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#TryGetTail","title":"HoodMelvilleQueue\u003C\u0027T\u003E.TryGetTail","content":"HoodMelvilleQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nreturns option queue of the elements trailing the first element\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#IsEmpty","title":"HoodMelvilleQueue\u003C\u0027T\u003E.IsEmpty","content":"HoodMelvilleQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nreturns true if the queue has no elements\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-hoodmelvillequeue-1.html#Uncons","title":"HoodMelvilleQueue\u003C\u0027T\u003E.Uncons","content":"HoodMelvilleQueue\u003C\u0027T\u003E.Uncons \nUncons \n\nreturns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html","title":"ImplicitQueue\u003C\u0027T\u003E","content":"ImplicitQueue\u003C\u0027T\u003E \n \nImplicitQueue\u003C\u0027T\u003E.snoc \nsnoc \nImplicitQueue\u003C\u0027T\u003E.tail \ntail \nImplicitQueue\u003C\u0027T\u003E.tryGetTail \ntryGetTail \nImplicitQueue\u003C\u0027T\u003E.head \nhead \nImplicitQueue\u003C\u0027T\u003E.tryGetHead \ntryGetHead \nImplicitQueue\u003C\u0027T\u003E.Shallow \nShallow \nImplicitQueue\u003C\u0027T\u003E.Deep \nDeep"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html#snoc","title":"ImplicitQueue\u003C\u0027T\u003E.snoc","content":"ImplicitQueue\u003C\u0027T\u003E.snoc \nsnoc \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html#tail","title":"ImplicitQueue\u003C\u0027T\u003E.tail","content":"ImplicitQueue\u003C\u0027T\u003E.tail \ntail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html#tryGetTail","title":"ImplicitQueue\u003C\u0027T\u003E.tryGetTail","content":"ImplicitQueue\u003C\u0027T\u003E.tryGetTail \ntryGetTail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html#head","title":"ImplicitQueue\u003C\u0027T\u003E.head","content":"ImplicitQueue\u003C\u0027T\u003E.head \nhead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html#tryGetHead","title":"ImplicitQueue\u003C\u0027T\u003E.tryGetHead","content":"ImplicitQueue\u003C\u0027T\u003E.tryGetHead \ntryGetHead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html#Shallow","title":"ImplicitQueue\u003C\u0027T\u003E.Shallow","content":"ImplicitQueue\u003C\u0027T\u003E.Shallow \nShallow \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-implicitqueue-1.html#Deep","title":"ImplicitQueue\u003C\u0027T\u003E.Deep","content":"ImplicitQueue\u003C\u0027T\u003E.Deep \nDeep \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-incompatiblemerge.html","title":"IncompatibleMerge","content":"IncompatibleMerge \n \nIncompatibleMerge.Data0 \nData0"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-incompatiblemerge.html#Data0","title":"IncompatibleMerge.Data0","content":"IncompatibleMerge.Data0 \nData0 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree-1.html","title":"IndexedRoseTree\u003C\u0027T\u003E","content":"IndexedRoseTree\u003C\u0027T\u003E \n\n Multi-way tree, also known as rose tree.\n This RoseTree uses a Vector for the children RoseTree forest.\n Adapted from @mausch F# adaptation of Experimental.RoseTree.\n \nIndexedRoseTree\u003C\u0027T\u003E.Root \nRoot \nIndexedRoseTree\u003C\u0027T\u003E.Children \nChildren"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree-1.html#Root","title":"IndexedRoseTree\u003C\u0027T\u003E.Root","content":"IndexedRoseTree\u003C\u0027T\u003E.Root \nRoot \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-indexedrosetree-1.html#Children","title":"IndexedRoseTree\u003C\u0027T\u003E.Children","content":"IndexedRoseTree\u003C\u0027T\u003E.Children \nChildren \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap-1.html","title":"IntMap\u003C\u0027T\u003E","content":"IntMap\u003C\u0027T\u003E \n \nIntMap\u003C\u0027T\u003E.FoldBackWithKey \nFoldBackWithKey \nIntMap\u003C\u0027T\u003E.ToList \nToList \nIntMap\u003C\u0027T\u003E.Nil \nNil \nIntMap\u003C\u0027T\u003E.Tip \nTip \nIntMap\u003C\u0027T\u003E.Bin \nBin"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap-1.html#FoldBackWithKey","title":"IntMap\u003C\u0027T\u003E.FoldBackWithKey","content":"IntMap\u003C\u0027T\u003E.FoldBackWithKey \nFoldBackWithKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap-1.html#ToList","title":"IntMap\u003C\u0027T\u003E.ToList","content":"IntMap\u003C\u0027T\u003E.ToList \nToList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap-1.html#Nil","title":"IntMap\u003C\u0027T\u003E.Nil","content":"IntMap\u003C\u0027T\u003E.Nil \nNil \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap-1.html#Tip","title":"IntMap\u003C\u0027T\u003E.Tip","content":"IntMap\u003C\u0027T\u003E.Tip \nTip \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-intmap-1.html#Bin","title":"IntMap\u003C\u0027T\u003E.Bin","content":"IntMap\u003C\u0027T\u003E.Bin \nBin \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-keyvaluepair-2.html","title":"KeyValuePair\u003C\u0027TKey, \u0027TValue\u003E","content":"KeyValuePair\u003C\u0027TKey, \u0027TValue\u003E \n \nKeyValuePair\u003C\u0027TKey, \u0027TValue\u003E.Key \nKey \nKeyValuePair\u003C\u0027TKey, \u0027TValue\u003E.Value \nValue"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-keyvaluepair-2.html#Key","title":"KeyValuePair\u003C\u0027TKey, \u0027TValue\u003E.Key","content":"KeyValuePair\u003C\u0027TKey, \u0027TValue\u003E.Key \nKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-keyvaluepair-2.html#Value","title":"KeyValuePair\u003C\u0027TKey, \u0027TValue\u003E.Value","content":"KeyValuePair\u003C\u0027TKey, \u0027TValue\u003E.Value \nValue \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html","title":"LeftistHeap\u003C\u0027T\u003E","content":"LeftistHeap\u003C\u0027T\u003E \n \nLeftistHeap\u003C\u0027T\u003E.Insert \nInsert \nLeftistHeap\u003C\u0027T\u003E.Merge \nMerge \nLeftistHeap\u003C\u0027T\u003E.Tail \nTail \nLeftistHeap\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nLeftistHeap\u003C\u0027T\u003E.TryMerge \nTryMerge \nLeftistHeap\u003C\u0027T\u003E.TryUncons \nTryUncons \nLeftistHeap\u003C\u0027T\u003E.Uncons \nUncons \nLeftistHeap\u003C\u0027T\u003E.Head \nHead \nLeftistHeap\u003C\u0027T\u003E.IsDescending \nIsDescending \nLeftistHeap\u003C\u0027T\u003E.Length \nLength \nLeftistHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nLeftistHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nLeftistHeap\u003C\u0027T\u003E.E \nE \nLeftistHeap\u003C\u0027T\u003E.T \nT"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#Insert","title":"LeftistHeap\u003C\u0027T\u003E.Insert","content":"LeftistHeap\u003C\u0027T\u003E.Insert \nInsert \n\nO(log n). Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#Merge","title":"LeftistHeap\u003C\u0027T\u003E.Merge","content":"LeftistHeap\u003C\u0027T\u003E.Merge \nMerge \n\nO(log n). Returns heap from merging two heaps, both must have same isDescending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#Tail","title":"LeftistHeap\u003C\u0027T\u003E.Tail","content":"LeftistHeap\u003C\u0027T\u003E.Tail \nTail \n\nO(log n) Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#TryGetTail","title":"LeftistHeap\u003C\u0027T\u003E.TryGetTail","content":"LeftistHeap\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(log n). Returns option heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#TryMerge","title":"LeftistHeap\u003C\u0027T\u003E.TryMerge","content":"LeftistHeap\u003C\u0027T\u003E.TryMerge \nTryMerge \n\nO(log n). Returns heap option from merging two heaps\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#TryUncons","title":"LeftistHeap\u003C\u0027T\u003E.TryUncons","content":"LeftistHeap\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(log n). Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#Uncons","title":"LeftistHeap\u003C\u0027T\u003E.Uncons","content":"LeftistHeap\u003C\u0027T\u003E.Uncons \nUncons \n\nO(log n). Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#Head","title":"LeftistHeap\u003C\u0027T\u003E.Head","content":"LeftistHeap\u003C\u0027T\u003E.Head \nHead \n\nO(1). Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#IsDescending","title":"LeftistHeap\u003C\u0027T\u003E.IsDescending","content":"LeftistHeap\u003C\u0027T\u003E.IsDescending \nIsDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#Length","title":"LeftistHeap\u003C\u0027T\u003E.Length","content":"LeftistHeap\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#TryGetHead","title":"LeftistHeap\u003C\u0027T\u003E.TryGetHead","content":"LeftistHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1). Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#IsEmpty","title":"LeftistHeap\u003C\u0027T\u003E.IsEmpty","content":"LeftistHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#E","title":"LeftistHeap\u003C\u0027T\u003E.E","content":"LeftistHeap\u003C\u0027T\u003E.E \nE \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-leftistheap-1.html#T","title":"LeftistHeap\u003C\u0027T\u003E.T","content":"LeftistHeap\u003C\u0027T\u003E.T \nT \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper-1.html","title":"ListZipper\u003C\u0027T\u003E","content":"ListZipper\u003C\u0027T\u003E \n\n A zipper for lists\n \nListZipper\u003C\u0027T\u003E.Focus \nFocus \nListZipper\u003C\u0027T\u003E.Path \nPath"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper-1.html#Focus","title":"ListZipper\u003C\u0027T\u003E.Focus","content":"ListZipper\u003C\u0027T\u003E.Focus \nFocus \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-listzipper-1.html#Path","title":"ListZipper\u003C\u0027T\u003E.Path","content":"ListZipper\u003C\u0027T\u003E.Path \nPath \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-nonemptybootstrappedqueue-1.html","title":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E","content":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E \n \nNonEmptyBootstrappedQueue\u003C\u0027T\u003E.create \ncreate \nNonEmptyBootstrappedQueue\u003C\u0027T\u003E.FrontAndSuspensionsLength \nFrontAndSuspensionsLength \nNonEmptyBootstrappedQueue\u003C\u0027T\u003E.Front \nFront \nNonEmptyBootstrappedQueue\u003C\u0027T\u003E.Suspensions \nSuspensions \nNonEmptyBootstrappedQueue\u003C\u0027T\u003E.RBackLength \nRBackLength \nNonEmptyBootstrappedQueue\u003C\u0027T\u003E.RBack \nRBack"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-nonemptybootstrappedqueue-1.html#create","title":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.create","content":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.create \ncreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-nonemptybootstrappedqueue-1.html#FrontAndSuspensionsLength","title":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.FrontAndSuspensionsLength","content":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.FrontAndSuspensionsLength \nFrontAndSuspensionsLength \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-nonemptybootstrappedqueue-1.html#Front","title":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.Front","content":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.Front \nFront \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-nonemptybootstrappedqueue-1.html#Suspensions","title":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.Suspensions","content":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.Suspensions \nSuspensions \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-nonemptybootstrappedqueue-1.html#RBackLength","title":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.RBackLength","content":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.RBackLength \nRBackLength \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-nonemptybootstrappedqueue-1.html#RBack","title":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.RBack","content":"NonEmptyBootstrappedQueue\u003C\u0027T\u003E.RBack \nRBack \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html","title":"PairingHeap\u003C\u0027T\u003E","content":"PairingHeap\u003C\u0027T\u003E \n\n PairingHeap performs extremely well in practice, however (according to Okasaki) it should be avoided for applications taking advantage of persistence.\n Also according to Okasaki the time complexity of the heap functions in the PairingHeap implementation have \u0022resisted\u0022 time complexity analysis. \n ofSeq: superior performance; insert: superior performance; tail: superior performance\n \nPairingHeap\u003C\u0027T\u003E.Head \nHead \nPairingHeap\u003C\u0027T\u003E.Insert \nInsert \nPairingHeap\u003C\u0027T\u003E.Length \nLength \nPairingHeap\u003C\u0027T\u003E.Merge \nMerge \nPairingHeap\u003C\u0027T\u003E.Tail \nTail \nPairingHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nPairingHeap\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nPairingHeap\u003C\u0027T\u003E.TryMerge \nTryMerge \nPairingHeap\u003C\u0027T\u003E.TryUncons \nTryUncons \nPairingHeap\u003C\u0027T\u003E.Uncons \nUncons \nPairingHeap\u003C\u0027T\u003E.IsDescending \nIsDescending \nPairingHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nPairingHeap\u003C\u0027T\u003E.E \nE \nPairingHeap\u003C\u0027T\u003E.T \nT"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#Head","title":"PairingHeap\u003C\u0027T\u003E.Head","content":"PairingHeap\u003C\u0027T\u003E.Head \nHead \n\nO(1) worst case. Returns the min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#Insert","title":"PairingHeap\u003C\u0027T\u003E.Insert","content":"PairingHeap\u003C\u0027T\u003E.Insert \nInsert \n\nO(1) amortized time. Returns a new heap with the element inserted.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#Length","title":"PairingHeap\u003C\u0027T\u003E.Length","content":"PairingHeap\u003C\u0027T\u003E.Length \nLength \n\nO(n). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#Merge","title":"PairingHeap\u003C\u0027T\u003E.Merge","content":"PairingHeap\u003C\u0027T\u003E.Merge \nMerge \n\nO(1) amortized time. Returns heap from merging two heaps, both must have same descending.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#Tail","title":"PairingHeap\u003C\u0027T\u003E.Tail","content":"PairingHeap\u003C\u0027T\u003E.Tail \nTail \n\nO(log n) amortized time. Returns a new heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#TryGetHead","title":"PairingHeap\u003C\u0027T\u003E.TryGetHead","content":"PairingHeap\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1) worst case. Returns option first min or max element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#TryGetTail","title":"PairingHeap\u003C\u0027T\u003E.TryGetTail","content":"PairingHeap\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(log n) amortized time. Returns option heap of the elements trailing the head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#TryMerge","title":"PairingHeap\u003C\u0027T\u003E.TryMerge","content":"PairingHeap\u003C\u0027T\u003E.TryMerge \nTryMerge \n\nO(1) amortized time. Returns heap option from merging two heaps.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#TryUncons","title":"PairingHeap\u003C\u0027T\u003E.TryUncons","content":"PairingHeap\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(log n) amortized time. Returns option head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#Uncons","title":"PairingHeap\u003C\u0027T\u003E.Uncons","content":"PairingHeap\u003C\u0027T\u003E.Uncons \nUncons \n\nO(log n) amortized time. Returns the head element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#IsDescending","title":"PairingHeap\u003C\u0027T\u003E.IsDescending","content":"PairingHeap\u003C\u0027T\u003E.IsDescending \nIsDescending \n\nO(1). Returns true if the heap has max element at head.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#IsEmpty","title":"PairingHeap\u003C\u0027T\u003E.IsEmpty","content":"PairingHeap\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1) Returns true if the heap has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#E","title":"PairingHeap\u003C\u0027T\u003E.E","content":"PairingHeap\u003C\u0027T\u003E.E \nE \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-pairingheap-1.html#T","title":"PairingHeap\u003C\u0027T\u003E.T","content":"PairingHeap\u003C\u0027T\u003E.T \nT \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-patternmatchedbug.html","title":"PatternMatchedBug","content":"PatternMatchedBug \n \nPatternMatchedBug.Data0 \nData0 \nPatternMatchedBug.Data1 \nData1"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-patternmatchedbug.html#Data0","title":"PatternMatchedBug.Data0","content":"PatternMatchedBug.Data0 \nData0 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-patternmatchedbug.html#Data1","title":"PatternMatchedBug.Data1","content":"PatternMatchedBug.Data1 \nData1 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html","title":"PhysicistQueue\u003C\u0027T\u003E","content":"PhysicistQueue\u003C\u0027T\u003E \n \nPhysicistQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nPhysicistQueue\u003C\u0027T\u003E.Snoc \nSnoc \nPhysicistQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \nPhysicistQueue\u003C\u0027T\u003E.Head \nHead \nPhysicistQueue\u003C\u0027T\u003E.Rev \nRev \nPhysicistQueue\u003C\u0027T\u003E.Length \nLength \nPhysicistQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nPhysicistQueue\u003C\u0027T\u003E.Tail \nTail \nPhysicistQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nPhysicistQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nPhysicistQueue\u003C\u0027T\u003E.Uncons \nUncons"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#( .ctor )","title":"PhysicistQueue\u003C\u0027T\u003E.( .ctor )","content":"PhysicistQueue\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#Snoc","title":"PhysicistQueue\u003C\u0027T\u003E.Snoc","content":"PhysicistQueue\u003C\u0027T\u003E.Snoc \nSnoc \n\nO(1), amortized. Returns a new queue with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#TryUncons","title":"PhysicistQueue\u003C\u0027T\u003E.TryUncons","content":"PhysicistQueue\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1), amortized. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#Head","title":"PhysicistQueue\u003C\u0027T\u003E.Head","content":"PhysicistQueue\u003C\u0027T\u003E.Head \nHead \n\nO(1), amortized. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#Rev","title":"PhysicistQueue\u003C\u0027T\u003E.Rev","content":"PhysicistQueue\u003C\u0027T\u003E.Rev \nRev \n\nO(1). Returns queue reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#Length","title":"PhysicistQueue\u003C\u0027T\u003E.Length","content":"PhysicistQueue\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#TryGetHead","title":"PhysicistQueue\u003C\u0027T\u003E.TryGetHead","content":"PhysicistQueue\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1), amortized. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#Tail","title":"PhysicistQueue\u003C\u0027T\u003E.Tail","content":"PhysicistQueue\u003C\u0027T\u003E.Tail \nTail \n\nO(1), amortized. Returns a new queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#IsEmpty","title":"PhysicistQueue\u003C\u0027T\u003E.IsEmpty","content":"PhysicistQueue\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the queue has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#TryGetTail","title":"PhysicistQueue\u003C\u0027T\u003E.TryGetTail","content":"PhysicistQueue\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(1), amortized. Returns option queue of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-physicistqueue-1.html#Uncons","title":"PhysicistQueue\u003C\u0027T\u003E.Uncons","content":"PhysicistQueue\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1), amortized. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html","title":"RealTimeDeque\u003C\u0027T\u003E","content":"RealTimeDeque\u003C\u0027T\u003E \n \nRealTimeDeque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nRealTimeDeque\u003C\u0027T\u003E.Cons \nCons \nRealTimeDeque\u003C\u0027T\u003E.Lookup \nLookup \nRealTimeDeque\u003C\u0027T\u003E.Remove \nRemove \nRealTimeDeque\u003C\u0027T\u003E.Snoc \nSnoc \nRealTimeDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \nRealTimeDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \nRealTimeDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nRealTimeDeque\u003C\u0027T\u003E.Update \nUpdate \nRealTimeDeque\u003C\u0027T\u003E.Init \nInit \nRealTimeDeque\u003C\u0027T\u003E.Head \nHead \nRealTimeDeque\u003C\u0027T\u003E.Last \nLast \nRealTimeDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \nRealTimeDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \nRealTimeDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \nRealTimeDeque\u003C\u0027T\u003E.Tail \nTail \nRealTimeDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nRealTimeDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nRealTimeDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \nRealTimeDeque\u003C\u0027T\u003E.Uncons \nUncons \nRealTimeDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nRealTimeDeque\u003C\u0027T\u003E.Length \nLength \nRealTimeDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \nRealTimeDeque\u003C\u0027T\u003E.Rev \nRev"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#( .ctor )","title":"RealTimeDeque\u003C\u0027T\u003E.( .ctor )","content":"RealTimeDeque\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Cons","title":"RealTimeDeque\u003C\u0027T\u003E.Cons","content":"RealTimeDeque\u003C\u0027T\u003E.Cons \nCons \n\nO(1), worst case. Returns a new deque with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Lookup","title":"RealTimeDeque\u003C\u0027T\u003E.Lookup","content":"RealTimeDeque\u003C\u0027T\u003E.Lookup \nLookup \n\nO(n/2), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Remove","title":"RealTimeDeque\u003C\u0027T\u003E.Remove","content":"RealTimeDeque\u003C\u0027T\u003E.Remove \nRemove \n\nO(n/2), worst case. Returns deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Snoc","title":"RealTimeDeque\u003C\u0027T\u003E.Snoc","content":"RealTimeDeque\u003C\u0027T\u003E.Snoc \nSnoc \n\nO(1), worst case. Returns a new deque with the element added to the end.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryLookup","title":"RealTimeDeque\u003C\u0027T\u003E.TryLookup","content":"RealTimeDeque\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nO(n/2), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryRemove","title":"RealTimeDeque\u003C\u0027T\u003E.TryRemove","content":"RealTimeDeque\u003C\u0027T\u003E.TryRemove \nTryRemove \n\nO(n/2), worst case. Returns option deque with element removed by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryUpdate","title":"RealTimeDeque\u003C\u0027T\u003E.TryUpdate","content":"RealTimeDeque\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nO(n/2), worst case. Returns option deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Update","title":"RealTimeDeque\u003C\u0027T\u003E.Update","content":"RealTimeDeque\u003C\u0027T\u003E.Update \nUpdate \n\nO(n/2), worst case. Returns deque with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Init","title":"RealTimeDeque\u003C\u0027T\u003E.Init","content":"RealTimeDeque\u003C\u0027T\u003E.Init \nInit \n\nO(1), worst case. Returns a new deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Head","title":"RealTimeDeque\u003C\u0027T\u003E.Head","content":"RealTimeDeque\u003C\u0027T\u003E.Head \nHead \n\nO(1), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Last","title":"RealTimeDeque\u003C\u0027T\u003E.Last","content":"RealTimeDeque\u003C\u0027T\u003E.Last \nLast \n\nO(1), worst case. Returns the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Unsnoc","title":"RealTimeDeque\u003C\u0027T\u003E.Unsnoc","content":"RealTimeDeque\u003C\u0027T\u003E.Unsnoc \nUnsnoc \n\nO(1), worst case. Returns init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryUncons","title":"RealTimeDeque\u003C\u0027T\u003E.TryUncons","content":"RealTimeDeque\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1), worst case. Returns option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryGetInit","title":"RealTimeDeque\u003C\u0027T\u003E.TryGetInit","content":"RealTimeDeque\u003C\u0027T\u003E.TryGetInit \nTryGetInit \n\nO(1), worst case. Returns option deque of the elements before the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Tail","title":"RealTimeDeque\u003C\u0027T\u003E.Tail","content":"RealTimeDeque\u003C\u0027T\u003E.Tail \nTail \n\nO(1), worst case. Returns a new deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#IsEmpty","title":"RealTimeDeque\u003C\u0027T\u003E.IsEmpty","content":"RealTimeDeque\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the deque has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryGetTail","title":"RealTimeDeque\u003C\u0027T\u003E.TryGetTail","content":"RealTimeDeque\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(1), worst case. Returns option deque of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryGetLast","title":"RealTimeDeque\u003C\u0027T\u003E.TryGetLast","content":"RealTimeDeque\u003C\u0027T\u003E.TryGetLast \nTryGetLast \n\nO(1), worst case. Returns option last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Uncons","title":"RealTimeDeque\u003C\u0027T\u003E.Uncons","content":"RealTimeDeque\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1), worst case. Returns the first element and tail\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryGetHead","title":"RealTimeDeque\u003C\u0027T\u003E.TryGetHead","content":"RealTimeDeque\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Length","title":"RealTimeDeque\u003C\u0027T\u003E.Length","content":"RealTimeDeque\u003C\u0027T\u003E.Length \nLength \n\nO(1). Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#TryUnsnoc","title":"RealTimeDeque\u003C\u0027T\u003E.TryUnsnoc","content":"RealTimeDeque\u003C\u0027T\u003E.TryUnsnoc \nTryUnsnoc \n\nO(1), worst case. Returns option init and the last element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimedeque-1.html#Rev","title":"RealTimeDeque\u003C\u0027T\u003E.Rev","content":"RealTimeDeque\u003C\u0027T\u003E.Rev \nRev \n\nO(1). Returns deque reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue-1.html","title":"RealTimeQueue\u003C\u0027T\u003E","content":"RealTimeQueue\u003C\u0027T\u003E \n \nRealTimeQueue\u003C\u0027T\u003E.F \nF \nRealTimeQueue\u003C\u0027T\u003E.R \nR \nRealTimeQueue\u003C\u0027T\u003E.S \nS"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue-1.html#F","title":"RealTimeQueue\u003C\u0027T\u003E.F","content":"RealTimeQueue\u003C\u0027T\u003E.F \nF \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue-1.html#R","title":"RealTimeQueue\u003C\u0027T\u003E.R","content":"RealTimeQueue\u003C\u0027T\u003E.R \nR \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-realtimequeue-1.html#S","title":"RealTimeQueue\u003C\u0027T\u003E.S","content":"RealTimeQueue\u003C\u0027T\u003E.S \nS \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html","title":"RingBuffer\u003C\u0027T\u003E","content":"RingBuffer\u003C\u0027T\u003E \n \nRingBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nRingBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nRingBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nRingBuffer\u003C\u0027T\u003E.Advance \nAdvance \nRingBuffer\u003C\u0027T\u003E.Clone \nClone \nRingBuffer\u003C\u0027T\u003E.Insert \nInsert \nRingBuffer\u003C\u0027T\u003E.Insert \nInsert \nRingBuffer\u003C\u0027T\u003E.Normalize \nNormalize \nRingBuffer\u003C\u0027T\u003E.ToArray \nToArray \nRingBuffer\u003C\u0027T\u003E.TryAdvance \nTryAdvance \nRingBuffer\u003C\u0027T\u003E.Buffer \nBuffer \nRingBuffer\u003C\u0027T\u003E.Position \nPosition"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#( .ctor )","title":"RingBuffer\u003C\u0027T\u003E.( .ctor )","content":"RingBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#( .ctor )","title":"RingBuffer\u003C\u0027T\u003E.( .ctor )","content":"RingBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#( .ctor )","title":"RingBuffer\u003C\u0027T\u003E.( .ctor )","content":"RingBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#Advance","title":"RingBuffer\u003C\u0027T\u003E.Advance","content":"RingBuffer\u003C\u0027T\u003E.Advance \nAdvance \n\n Advances the position of the RingBuffer by the offset.\n Returns the position of the RingBuffer. Throws an ArgumentException if\n the offset is negative.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#Clone","title":"RingBuffer\u003C\u0027T\u003E.Clone","content":"RingBuffer\u003C\u0027T\u003E.Clone \nClone \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#Insert","title":"RingBuffer\u003C\u0027T\u003E.Insert","content":"RingBuffer\u003C\u0027T\u003E.Insert \nInsert \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#Insert","title":"RingBuffer\u003C\u0027T\u003E.Insert","content":"RingBuffer\u003C\u0027T\u003E.Insert \nInsert \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#Normalize","title":"RingBuffer\u003C\u0027T\u003E.Normalize","content":"RingBuffer\u003C\u0027T\u003E.Normalize \nNormalize \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#ToArray","title":"RingBuffer\u003C\u0027T\u003E.ToArray","content":"RingBuffer\u003C\u0027T\u003E.ToArray \nToArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#TryAdvance","title":"RingBuffer\u003C\u0027T\u003E.TryAdvance","content":"RingBuffer\u003C\u0027T\u003E.TryAdvance \nTryAdvance \n\n Tries to advance the position of the RingBuffer by the offset.\n Returns None if offset is negative, otherwise Some containing \n the position of the RingBuffer.    \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#Buffer","title":"RingBuffer\u003C\u0027T\u003E.Buffer","content":"RingBuffer\u003C\u0027T\u003E.Buffer \nBuffer \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-ringbuffer-1.html#Position","title":"RingBuffer\u003C\u0027T\u003E.Position","content":"RingBuffer\u003C\u0027T\u003E.Position \nPosition \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html","title":"RoseTree","content":"RoseTree \n \nRoseTree.Create \nCreate \nRoseTree.Create \nCreate \nRoseTree.Select \nSelect \nRoseTree.SelectAccum \nSelectAccum \nRoseTree.SelectMany \nSelectMany \nRoseTree.SelectMany \nSelectMany \nRoseTree.Singleton \nSingleton"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html#Create","title":"RoseTree.Create","content":"RoseTree.Create \nCreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html#Create","title":"RoseTree.Create","content":"RoseTree.Create \nCreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html#Select","title":"RoseTree.Select","content":"RoseTree.Select \nSelect \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html#SelectAccum","title":"RoseTree.SelectAccum","content":"RoseTree.SelectAccum \nSelectAccum \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html#SelectMany","title":"RoseTree.SelectMany","content":"RoseTree.SelectMany \nSelectMany \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html#SelectMany","title":"RoseTree.SelectMany","content":"RoseTree.SelectMany \nSelectMany \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree.html#Singleton","title":"RoseTree.Singleton","content":"RoseTree.Singleton \nSingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree-1.html","title":"RoseTree\u003C\u0027T\u003E","content":"RoseTree\u003C\u0027T\u003E \n\n Multi-way tree, also known as rose tree.\n \nRoseTree\u003C\u0027T\u003E.Root \nRoot \nRoseTree\u003C\u0027T\u003E.Children \nChildren"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree-1.html#Root","title":"RoseTree\u003C\u0027T\u003E.Root","content":"RoseTree\u003C\u0027T\u003E.Root \nRoot \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rosetree-1.html#Children","title":"RoseTree\u003C\u0027T\u003E.Children","content":"RoseTree\u003C\u0027T\u003E.Children \nChildren \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rotationstate-1.html","title":"RotationState\u003C\u0027T\u003E","content":"RotationState\u003C\u0027T\u003E \n \nRotationState\u003C\u0027T\u003E.Idle \nIdle \nRotationState\u003C\u0027T\u003E.Reversing \nReversing \nRotationState\u003C\u0027T\u003E.Appending \nAppending \nRotationState\u003C\u0027T\u003E.Done \nDone"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rotationstate-1.html#Idle","title":"RotationState\u003C\u0027T\u003E.Idle","content":"RotationState\u003C\u0027T\u003E.Idle \nIdle \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rotationstate-1.html#Reversing","title":"RotationState\u003C\u0027T\u003E.Reversing","content":"RotationState\u003C\u0027T\u003E.Reversing \nReversing \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rotationstate-1.html#Appending","title":"RotationState\u003C\u0027T\u003E.Appending","content":"RotationState\u003C\u0027T\u003E.Appending \nAppending \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-rotationstate-1.html#Done","title":"RotationState\u003C\u0027T\u003E.Done","content":"RotationState\u003C\u0027T\u003E.Done \nDone \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E \n \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Cons \nCons \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Length \nLength \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Lookup \nLookup \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Rev \nRev \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.TryLookup \nTryLookup \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Update \nUpdate \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Head \nHead \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Tail \nTail \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.randomAccessList \nrandomAccessList \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdate \ntryUpdate \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.update \nupdate \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.updateTree \nupdateTree \nSkewBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdateTree \ntryUpdateTree"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#( .ctor )","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.( .ctor )","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Cons","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Cons","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Cons \nCons \n\nO(1), worst case. Returns a new random access list with the element added to the beginning.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Length","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Length","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Length \nLength \n\nO(log n) Returns the count of elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Lookup","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Lookup","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Lookup \nLookup \n\nO(log n), worst case. Returns element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Rev","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Rev","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Rev \nRev \n\nO(n). Returns random access list reversed.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#TryLookup","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryLookup","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryLookup \nTryLookup \n\nO(log n), worst case. Returns option element by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#TryUpdate","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryUpdate","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryUpdate \nTryUpdate \n\nO(log n), worst case. Returns option random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Update","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Update","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Update \nUpdate \n\nO(log n), worst case. Returns random access list with element updated by index.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Head","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Head","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Head \nHead \n\nO(1), worst case. Returns the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#TryUncons","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryUncons","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\nO(1), worst case. Returns the option first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Tail","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Tail","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Tail \nTail \n\nO(1), worst case. Returns a new random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#IsEmpty","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.IsEmpty","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\nO(1). Returns true if the random access list has no elements.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#TryGetTail","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryGetTail","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryGetTail \nTryGetTail \n\nO(1), worst case. Returns a option random access list of the elements trailing the first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#Uncons","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Uncons","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.Uncons \nUncons \n\nO(1), worst case. Returns the first element and tail.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#TryGetHead","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryGetHead","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.TryGetHead \nTryGetHead \n\nO(1), worst case. Returns option first element.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#randomAccessList","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.randomAccessList","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.randomAccessList \nrandomAccessList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#tryUpdate","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdate","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdate \ntryUpdate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#update","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.update","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.update \nupdate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#updateTree","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.updateTree","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.updateTree \nupdateTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinaryrandomaccesslist-1.html#tryUpdateTree","title":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdateTree","content":"SkewBinaryRandomAccessList\u003C\u0027T\u003E.tryUpdateTree \ntryUpdateTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html","title":"\u0027T SkewBinomialHeap","content":"\u0027T SkewBinomialHeap \n\n A SkewBinomialHeap is a priority queue where elements are inserted in any order, using \u0022insert\u0022 and are \n extracted in either ascending or descending order using \u0022head\u0022, \u0022peek\u0022, \u0022tail\u0022, \u0022pop\u0022 or any of their \n \u0022try\u0022 variants. The main advantage of the SkewBinomialHeap over the BinomialHeap is that it supports\n insertions in constant time O(1). (Based on \u0022Purely Functional Data Structures\u0022 - 1996 by Chris Okasaki)\n \n\u0027T SkewBinomialHeap.( .ctor ) \n( .ctor ) \n\u0027T SkewBinomialHeap.( .ctor ) \n( .ctor ) \n\u0027T SkewBinomialHeap.Head \nHead \n\u0027T SkewBinomialHeap.Insert \nInsert \n\u0027T SkewBinomialHeap.Merge \nMerge \n\u0027T SkewBinomialHeap.Tail \nTail \n\u0027T SkewBinomialHeap.ToList \nToList \n\u0027T SkewBinomialHeap.TryHead \nTryHead \n\u0027T SkewBinomialHeap.TryMerge \nTryMerge \n\u0027T SkewBinomialHeap.TryTail \nTryTail \n\u0027T SkewBinomialHeap.TryUncons \nTryUncons \n\u0027T SkewBinomialHeap.Uncons \nUncons \n\u0027T SkewBinomialHeap.IsEmpty \nIsEmpty \n\u0027T SkewBinomialHeap.IsDescending \nIsDescending \n\u0027T SkewBinomialHeap.Count \nCount"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#( .ctor )","title":"\u0027T SkewBinomialHeap.( .ctor )","content":"\u0027T SkewBinomialHeap.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#( .ctor )","title":"\u0027T SkewBinomialHeap.( .ctor )","content":"\u0027T SkewBinomialHeap.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#Head","title":"\u0027T SkewBinomialHeap.Head","content":"\u0027T SkewBinomialHeap.Head \nHead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#Insert","title":"\u0027T SkewBinomialHeap.Insert","content":"\u0027T SkewBinomialHeap.Insert \nInsert \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#Merge","title":"\u0027T SkewBinomialHeap.Merge","content":"\u0027T SkewBinomialHeap.Merge \nMerge \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#Tail","title":"\u0027T SkewBinomialHeap.Tail","content":"\u0027T SkewBinomialHeap.Tail \nTail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#ToList","title":"\u0027T SkewBinomialHeap.ToList","content":"\u0027T SkewBinomialHeap.ToList \nToList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#TryHead","title":"\u0027T SkewBinomialHeap.TryHead","content":"\u0027T SkewBinomialHeap.TryHead \nTryHead \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#TryMerge","title":"\u0027T SkewBinomialHeap.TryMerge","content":"\u0027T SkewBinomialHeap.TryMerge \nTryMerge \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#TryTail","title":"\u0027T SkewBinomialHeap.TryTail","content":"\u0027T SkewBinomialHeap.TryTail \nTryTail \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#TryUncons","title":"\u0027T SkewBinomialHeap.TryUncons","content":"\u0027T SkewBinomialHeap.TryUncons \nTryUncons \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#Uncons","title":"\u0027T SkewBinomialHeap.Uncons","content":"\u0027T SkewBinomialHeap.Uncons \nUncons \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#IsEmpty","title":"\u0027T SkewBinomialHeap.IsEmpty","content":"\u0027T SkewBinomialHeap.IsEmpty \nIsEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#IsDescending","title":"\u0027T SkewBinomialHeap.IsDescending","content":"\u0027T SkewBinomialHeap.IsDescending \nIsDescending \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-skewbinomialheap-1.html#Count","title":"\u0027T SkewBinomialHeap.Count","content":"\u0027T SkewBinomialHeap.Count \nCount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html","title":"Timeseries\u003C\u0027T\u003E","content":"Timeseries\u003C\u0027T\u003E \n \nTimeseries\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nTimeseries\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nTimeseries\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nTimeseries\u003C\u0027T\u003E.Advance \nAdvance \nTimeseries\u003C\u0027T\u003E.AsTimeseries \nAsTimeseries \nTimeseries\u003C\u0027T\u003E.Clone \nClone \nTimeseries\u003C\u0027T\u003E.Insert \nInsert \nTimeseries\u003C\u0027T\u003E.Merge \nMerge \nTimeseries\u003C\u0027T\u003E.ToGranularity \nToGranularity \nTimeseries\u003C\u0027T\u003E.TryAdvance \nTryAdvance \nTimeseries\u003C\u0027T\u003E.Granularity \nGranularity \nTimeseries\u003C\u0027T\u003E.Series \nSeries \nTimeseries\u003C\u0027T\u003E.Buffer \nBuffer \nTimeseries\u003C\u0027T\u003E.StartDate \nStartDate \nTimeseries\u003C\u0027T\u003E.Empty \nEmpty"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#( .ctor )","title":"Timeseries\u003C\u0027T\u003E.( .ctor )","content":"Timeseries\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#( .ctor )","title":"Timeseries\u003C\u0027T\u003E.( .ctor )","content":"Timeseries\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#( .ctor )","title":"Timeseries\u003C\u0027T\u003E.( .ctor )","content":"Timeseries\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Advance","title":"Timeseries\u003C\u0027T\u003E.Advance","content":"Timeseries\u003C\u0027T\u003E.Advance \nAdvance \n\n Advances the start date of the Timeseries to toDate. Throws an \n ArgumentException if toDate is before the Timeseries start date.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#AsTimeseries","title":"Timeseries\u003C\u0027T\u003E.AsTimeseries","content":"Timeseries\u003C\u0027T\u003E.AsTimeseries \nAsTimeseries \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Clone","title":"Timeseries\u003C\u0027T\u003E.Clone","content":"Timeseries\u003C\u0027T\u003E.Clone \nClone \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Insert","title":"Timeseries\u003C\u0027T\u003E.Insert","content":"Timeseries\u003C\u0027T\u003E.Insert \nInsert \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Merge","title":"Timeseries\u003C\u0027T\u003E.Merge","content":"Timeseries\u003C\u0027T\u003E.Merge \nMerge \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#ToGranularity","title":"Timeseries\u003C\u0027T\u003E.ToGranularity","content":"Timeseries\u003C\u0027T\u003E.ToGranularity \nToGranularity \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#TryAdvance","title":"Timeseries\u003C\u0027T\u003E.TryAdvance","content":"Timeseries\u003C\u0027T\u003E.TryAdvance \nTryAdvance \n\n Tries to advance the start date of the Timeseries to toDate.\n Returns None if toDate is before the start date of the Timeseries, \n otherwise Some containing the start date of the Timeseries.\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Granularity","title":"Timeseries\u003C\u0027T\u003E.Granularity","content":"Timeseries\u003C\u0027T\u003E.Granularity \nGranularity \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Series","title":"Timeseries\u003C\u0027T\u003E.Series","content":"Timeseries\u003C\u0027T\u003E.Series \nSeries \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Buffer","title":"Timeseries\u003C\u0027T\u003E.Buffer","content":"Timeseries\u003C\u0027T\u003E.Buffer \nBuffer \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#StartDate","title":"Timeseries\u003C\u0027T\u003E.StartDate","content":"Timeseries\u003C\u0027T\u003E.StartDate \nStartDate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-timeseries-1.html#Empty","title":"Timeseries\u003C\u0027T\u003E.Empty","content":"Timeseries\u003C\u0027T\u003E.Empty \nEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treebral-1.html","title":"TreeBRAL\u003C\u0027T\u003E","content":"TreeBRAL\u003C\u0027T\u003E \n \nTreeBRAL\u003C\u0027T\u003E.Leaf \nLeaf \nTreeBRAL\u003C\u0027T\u003E.Node \nNode"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treebral-1.html#Leaf","title":"TreeBRAL\u003C\u0027T\u003E.Leaf","content":"TreeBRAL\u003C\u0027T\u003E.Leaf \nLeaf \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treebral-1.html#Node","title":"TreeBRAL\u003C\u0027T\u003E.Node","content":"TreeBRAL\u003C\u0027T\u003E.Node \nNode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treebraldigit-1.html","title":"TreeBRALDigit\u003C\u0027T\u003E","content":"TreeBRALDigit\u003C\u0027T\u003E \n \nTreeBRALDigit\u003C\u0027T\u003E.Zero \nZero \nTreeBRALDigit\u003C\u0027T\u003E.One \nOne"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treebraldigit-1.html#Zero","title":"TreeBRALDigit\u003C\u0027T\u003E.Zero","content":"TreeBRALDigit\u003C\u0027T\u003E.Zero \nZero \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treebraldigit-1.html#One","title":"TreeBRALDigit\u003C\u0027T\u003E.One","content":"TreeBRALDigit\u003C\u0027T\u003E.One \nOne \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treedirection.html","title":"TreeDirection","content":"TreeDirection \n \nTreeDirection.Left \nLeft \nTreeDirection.Right \nRight"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treedirection.html#Left","title":"TreeDirection.Left","content":"TreeDirection.Left \nLeft \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treedirection.html#Right","title":"TreeDirection.Right","content":"TreeDirection.Right \nRight \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treesbral-1.html","title":"TreeSBRAL\u003C\u0027T\u003E","content":"TreeSBRAL\u003C\u0027T\u003E \n \nTreeSBRAL\u003C\u0027T\u003E.Leaf \nLeaf \nTreeSBRAL\u003C\u0027T\u003E.Node \nNode"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treesbral-1.html#Leaf","title":"TreeSBRAL\u003C\u0027T\u003E.Leaf","content":"TreeSBRAL\u003C\u0027T\u003E.Leaf \nLeaf \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-experimental-treesbral-1.html#Node","title":"TreeSBRAL\u003C\u0027T\u003E.Node","content":"TreeSBRAL\u003C\u0027T\u003E.Node \nNode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html","title":"CircularBuffer\u003C\u0027T\u003E","content":"CircularBuffer\u003C\u0027T\u003E \n\n needs doc\n \nCircularBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nCircularBuffer\u003C\u0027T\u003E.Dequeue \nDequeue \nCircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \nCircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \nCircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \nCircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \nCircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \nCircularBuffer\u003C\u0027T\u003E.GetEnumerator \nGetEnumerator \nCircularBuffer\u003C\u0027T\u003E.Count \nCount"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#( .ctor )","title":"CircularBuffer\u003C\u0027T\u003E.( .ctor )","content":"CircularBuffer\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#Dequeue","title":"CircularBuffer\u003C\u0027T\u003E.Dequeue","content":"CircularBuffer\u003C\u0027T\u003E.Dequeue \nDequeue \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#Enqueue","title":"CircularBuffer\u003C\u0027T\u003E.Enqueue","content":"CircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#Enqueue","title":"CircularBuffer\u003C\u0027T\u003E.Enqueue","content":"CircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#Enqueue","title":"CircularBuffer\u003C\u0027T\u003E.Enqueue","content":"CircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#Enqueue","title":"CircularBuffer\u003C\u0027T\u003E.Enqueue","content":"CircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#Enqueue","title":"CircularBuffer\u003C\u0027T\u003E.Enqueue","content":"CircularBuffer\u003C\u0027T\u003E.Enqueue \nEnqueue \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#GetEnumerator","title":"CircularBuffer\u003C\u0027T\u003E.GetEnumerator","content":"CircularBuffer\u003C\u0027T\u003E.GetEnumerator \nGetEnumerator \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-mutable-circularbuffer-1.html#Count","title":"CircularBuffer\u003C\u0027T\u003E.Count","content":"CircularBuffer\u003C\u0027T\u003E.Count \nCount \n\n needs doc\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html","title":"MapTree","content":"MapTree \n \nMapTree.MapIterator\u003C\u0027Key, \u0027T\u003E \nMapIterator\u003C\u0027Key, \u0027T\u003E \nMapTree.empty \nempty \nMapTree.height \nheight \nMapTree.isEmpty \nisEmpty \nMapTree.mk \nmk \nMapTree.rebalance \nrebalance \nMapTree.sizeAux \nsizeAux \nMapTree.MapOne \nMapOne \nMapTree.count \ncount \nMapTree.add \nadd \nMapTree.indexNotFound \nindexNotFound \nMapTree.find \nfind \nMapTree.tryFind \ntryFind \nMapTree.partition1 \npartition1 \nMapTree.partitionAux \npartitionAux \nMapTree.partition \npartition \nMapTree.filter1 \nfilter1 \nMapTree.filterAux \nfilterAux \nMapTree.filter \nfilter \nMapTree.spliceOutSuccessor \nspliceOutSuccessor \nMapTree.remove \nremove \nMapTree.containsKey \ncontainsKey \nMapTree.iter \niter \nMapTree.first \nfirst \nMapTree.exists \nexists \nMapTree.forAll \nforAll \nMapTree.map \nmap \nMapTree.mapi \nmapi \nMapTree.fold \nfold \nMapTree.foldSection \nfoldSection \nMapTree.foldMap \nfoldMap \nMapTree.toList \ntoList \nMapTree.toArray \ntoArray \nMapTree.ofList \nofList \nMapTree.mkFromEnumerator \nmkFromEnumerator \nMapTree.ofSeq \nofSeq \nMapTree.copyToArray \ncopyToArray \nMapTree.toSeq \ntoSeq"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#empty","title":"MapTree.empty","content":"MapTree.empty \nempty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#height","title":"MapTree.height","content":"MapTree.height \nheight \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#isEmpty","title":"MapTree.isEmpty","content":"MapTree.isEmpty \nisEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#mk","title":"MapTree.mk","content":"MapTree.mk \nmk \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#rebalance","title":"MapTree.rebalance","content":"MapTree.rebalance \nrebalance \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#sizeAux","title":"MapTree.sizeAux","content":"MapTree.sizeAux \nsizeAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#MapOne","title":"MapTree.MapOne","content":"MapTree.MapOne \nMapOne \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#count","title":"MapTree.count","content":"MapTree.count \ncount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#add","title":"MapTree.add","content":"MapTree.add \nadd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#indexNotFound","title":"MapTree.indexNotFound","content":"MapTree.indexNotFound \nindexNotFound \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#find","title":"MapTree.find","content":"MapTree.find \nfind \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#tryFind","title":"MapTree.tryFind","content":"MapTree.tryFind \ntryFind \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#partition1","title":"MapTree.partition1","content":"MapTree.partition1 \npartition1 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#partitionAux","title":"MapTree.partitionAux","content":"MapTree.partitionAux \npartitionAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#partition","title":"MapTree.partition","content":"MapTree.partition \npartition \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#filter1","title":"MapTree.filter1","content":"MapTree.filter1 \nfilter1 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#filterAux","title":"MapTree.filterAux","content":"MapTree.filterAux \nfilterAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#filter","title":"MapTree.filter","content":"MapTree.filter \nfilter \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#spliceOutSuccessor","title":"MapTree.spliceOutSuccessor","content":"MapTree.spliceOutSuccessor \nspliceOutSuccessor \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#remove","title":"MapTree.remove","content":"MapTree.remove \nremove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#containsKey","title":"MapTree.containsKey","content":"MapTree.containsKey \ncontainsKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#iter","title":"MapTree.iter","content":"MapTree.iter \niter \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#first","title":"MapTree.first","content":"MapTree.first \nfirst \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#exists","title":"MapTree.exists","content":"MapTree.exists \nexists \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#forAll","title":"MapTree.forAll","content":"MapTree.forAll \nforAll \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#map","title":"MapTree.map","content":"MapTree.map \nmap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#mapi","title":"MapTree.mapi","content":"MapTree.mapi \nmapi \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#fold","title":"MapTree.fold","content":"MapTree.fold \nfold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#foldSection","title":"MapTree.foldSection","content":"MapTree.foldSection \nfoldSection \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#foldMap","title":"MapTree.foldMap","content":"MapTree.foldMap \nfoldMap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#toList","title":"MapTree.toList","content":"MapTree.toList \ntoList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#toArray","title":"MapTree.toArray","content":"MapTree.toArray \ntoArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#ofList","title":"MapTree.ofList","content":"MapTree.ofList \nofList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#mkFromEnumerator","title":"MapTree.mkFromEnumerator","content":"MapTree.mkFromEnumerator \nmkFromEnumerator \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#ofSeq","title":"MapTree.ofSeq","content":"MapTree.ofSeq \nofSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#copyToArray","title":"MapTree.copyToArray","content":"MapTree.copyToArray \ncopyToArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree.html#toSeq","title":"MapTree.toSeq","content":"MapTree.toSeq \ntoSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree-mapiterator-2.html","title":"MapIterator\u003C\u0027Key, \u0027T\u003E","content":"MapIterator\u003C\u0027Key, \u0027T\u003E \n\n Imperative left-to-right iterators.\n \nMapIterator\u003C\u0027Key, \u0027T\u003E.( .ctor ) \n( .ctor ) \nMapIterator\u003C\u0027Key, \u0027T\u003E.MoveNext \nMoveNext \nMapIterator\u003C\u0027Key, \u0027T\u003E.Current \nCurrent"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree-mapiterator-2.html#( .ctor )","title":"MapIterator\u003C\u0027Key, \u0027T\u003E.( .ctor )","content":"MapIterator\u003C\u0027Key, \u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree-mapiterator-2.html#MoveNext","title":"MapIterator\u003C\u0027Key, \u0027T\u003E.MoveNext","content":"MapIterator\u003C\u0027Key, \u0027T\u003E.MoveNext \nMoveNext \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree-mapiterator-2.html#Current","title":"MapIterator\u003C\u0027Key, \u0027T\u003E.Current","content":"MapIterator\u003C\u0027Key, \u0027T\u003E.Current \nCurrent \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html","title":"SetTree","content":"SetTree \n \nSetTree.SetIterator\u003C\u0027T\u003E \nSetIterator\u003C\u0027T\u003E \nSetTree.empty \nempty \nSetTree.height \nheight \nSetTree.SetOne \nSetOne \nSetTree.tolerance \ntolerance \nSetTree.mk \nmk \nSetTree.rebalance \nrebalance \nSetTree.add \nadd \nSetTree.balance \nbalance \nSetTree.split \nsplit \nSetTree.spliceOutSuccessor \nspliceOutSuccessor \nSetTree.remove \nremove \nSetTree.contains \ncontains \nSetTree.iter \niter \nSetTree.fold \nfold \nSetTree.forAll \nforAll \nSetTree.exists \nexists \nSetTree.isEmpty \nisEmpty \nSetTree.subset \nsubset \nSetTree.elementsAux \nelementsAux \nSetTree.elements \nelements \nSetTree.filterAux \nfilterAux \nSetTree.filter \nfilter \nSetTree.diffAux \ndiffAux \nSetTree.diff \ndiff \nSetTree.countAux \ncountAux \nSetTree.count \ncount \nSetTree.union \nunion \nSetTree.intersectionAux \nintersectionAux \nSetTree.intersection \nintersection \nSetTree.partition1 \npartition1 \nSetTree.partitionAux \npartitionAux \nSetTree.partition \npartition \nSetTree.nextElemCont \nnextElemCont \nSetTree.nextElem \nnextElem \nSetTree.prevElemCont \nprevElemCont \nSetTree.prevElem \nprevElem \nSetTree.minimumElementAux \nminimumElementAux \nSetTree.minimumElementOpt \nminimumElementOpt \nSetTree.maximumElementAux \nmaximumElementAux \nSetTree.maximumElementOpt \nmaximumElementOpt \nSetTree.minimumElement \nminimumElement \nSetTree.maximumElement \nmaximumElement \nSetTree.toSeq \ntoSeq \nSetTree.compareStacks \ncompareStacks \nSetTree.compare \ncompare \nSetTree.choose \nchoose \nSetTree.toList \ntoList \nSetTree.copyToArray \ncopyToArray \nSetTree.toArray \ntoArray \nSetTree.mkFromEnumerator \nmkFromEnumerator \nSetTree.ofSeq \nofSeq \nSetTree.ofArray \nofArray \nSetTree.( |MatchSetNode|MatchSetEmpty| ) \n( |MatchSetNode|MatchSetEmpty| )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#empty","title":"SetTree.empty","content":"SetTree.empty \nempty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#height","title":"SetTree.height","content":"SetTree.height \nheight \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#SetOne","title":"SetTree.SetOne","content":"SetTree.SetOne \nSetOne \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#tolerance","title":"SetTree.tolerance","content":"SetTree.tolerance \ntolerance \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#mk","title":"SetTree.mk","content":"SetTree.mk \nmk \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#rebalance","title":"SetTree.rebalance","content":"SetTree.rebalance \nrebalance \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#add","title":"SetTree.add","content":"SetTree.add \nadd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#balance","title":"SetTree.balance","content":"SetTree.balance \nbalance \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#split","title":"SetTree.split","content":"SetTree.split \nsplit \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#spliceOutSuccessor","title":"SetTree.spliceOutSuccessor","content":"SetTree.spliceOutSuccessor \nspliceOutSuccessor \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#remove","title":"SetTree.remove","content":"SetTree.remove \nremove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#contains","title":"SetTree.contains","content":"SetTree.contains \ncontains \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#iter","title":"SetTree.iter","content":"SetTree.iter \niter \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#fold","title":"SetTree.fold","content":"SetTree.fold \nfold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#forAll","title":"SetTree.forAll","content":"SetTree.forAll \nforAll \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#exists","title":"SetTree.exists","content":"SetTree.exists \nexists \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#isEmpty","title":"SetTree.isEmpty","content":"SetTree.isEmpty \nisEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#subset","title":"SetTree.subset","content":"SetTree.subset \nsubset \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#elementsAux","title":"SetTree.elementsAux","content":"SetTree.elementsAux \nelementsAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#elements","title":"SetTree.elements","content":"SetTree.elements \nelements \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#filterAux","title":"SetTree.filterAux","content":"SetTree.filterAux \nfilterAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#filter","title":"SetTree.filter","content":"SetTree.filter \nfilter \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#diffAux","title":"SetTree.diffAux","content":"SetTree.diffAux \ndiffAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#diff","title":"SetTree.diff","content":"SetTree.diff \ndiff \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#countAux","title":"SetTree.countAux","content":"SetTree.countAux \ncountAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#count","title":"SetTree.count","content":"SetTree.count \ncount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#union","title":"SetTree.union","content":"SetTree.union \nunion \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#intersectionAux","title":"SetTree.intersectionAux","content":"SetTree.intersectionAux \nintersectionAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#intersection","title":"SetTree.intersection","content":"SetTree.intersection \nintersection \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#partition1","title":"SetTree.partition1","content":"SetTree.partition1 \npartition1 \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#partitionAux","title":"SetTree.partitionAux","content":"SetTree.partitionAux \npartitionAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#partition","title":"SetTree.partition","content":"SetTree.partition \npartition \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#nextElemCont","title":"SetTree.nextElemCont","content":"SetTree.nextElemCont \nnextElemCont \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#nextElem","title":"SetTree.nextElem","content":"SetTree.nextElem \nnextElem \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#prevElemCont","title":"SetTree.prevElemCont","content":"SetTree.prevElemCont \nprevElemCont \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#prevElem","title":"SetTree.prevElem","content":"SetTree.prevElem \nprevElem \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#minimumElementAux","title":"SetTree.minimumElementAux","content":"SetTree.minimumElementAux \nminimumElementAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#minimumElementOpt","title":"SetTree.minimumElementOpt","content":"SetTree.minimumElementOpt \nminimumElementOpt \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#maximumElementAux","title":"SetTree.maximumElementAux","content":"SetTree.maximumElementAux \nmaximumElementAux \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#maximumElementOpt","title":"SetTree.maximumElementOpt","content":"SetTree.maximumElementOpt \nmaximumElementOpt \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#minimumElement","title":"SetTree.minimumElement","content":"SetTree.minimumElement \nminimumElement \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#maximumElement","title":"SetTree.maximumElement","content":"SetTree.maximumElement \nmaximumElement \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#toSeq","title":"SetTree.toSeq","content":"SetTree.toSeq \ntoSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#compareStacks","title":"SetTree.compareStacks","content":"SetTree.compareStacks \ncompareStacks \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#compare","title":"SetTree.compare","content":"SetTree.compare \ncompare \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#choose","title":"SetTree.choose","content":"SetTree.choose \nchoose \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#toList","title":"SetTree.toList","content":"SetTree.toList \ntoList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#copyToArray","title":"SetTree.copyToArray","content":"SetTree.copyToArray \ncopyToArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#toArray","title":"SetTree.toArray","content":"SetTree.toArray \ntoArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#mkFromEnumerator","title":"SetTree.mkFromEnumerator","content":"SetTree.mkFromEnumerator \nmkFromEnumerator \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#ofSeq","title":"SetTree.ofSeq","content":"SetTree.ofSeq \nofSeq \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#ofArray","title":"SetTree.ofArray","content":"SetTree.ofArray \nofArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree.html#( |MatchSetNode|MatchSetEmpty| )","title":"SetTree.( |MatchSetNode|MatchSetEmpty| )","content":"SetTree.( |MatchSetNode|MatchSetEmpty| ) \n( |MatchSetNode|MatchSetEmpty| ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree-setiterator-1.html","title":"SetIterator\u003C\u0027T\u003E","content":"SetIterator\u003C\u0027T\u003E \n \nSetIterator\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \nSetIterator\u003C\u0027T\u003E.MoveNext \nMoveNext \nSetIterator\u003C\u0027T\u003E.Current \nCurrent"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree-setiterator-1.html#( .ctor )","title":"SetIterator\u003C\u0027T\u003E.( .ctor )","content":"SetIterator\u003C\u0027T\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree-setiterator-1.html#MoveNext","title":"SetIterator\u003C\u0027T\u003E.MoveNext","content":"SetIterator\u003C\u0027T\u003E.MoveNext \nMoveNext \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree-setiterator-1.html#Current","title":"SetIterator\u003C\u0027T\u003E.Current","content":"SetIterator\u003C\u0027T\u003E.Current \nCurrent \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E \n \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.( .ctor ) \n( .ctor ) \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Add \nAdd \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ComputeHashCode \nComputeHashCode \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ContainsKey \nContainsKey \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Exists \nExists \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Filter \nFilter \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.First \nFirst \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Fold \nFold \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FoldAndMap \nFoldAndMap \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FoldSection \nFoldSection \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ForAll \nForAll \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Iterate \nIterate \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Map \nMap \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.MapRange \nMapRange \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Partition \nPartition \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Remove \nRemove \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ToArray \nToArray \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ToList \nToList \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.TryFind \nTryFind \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Comparer \nComparer \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.IsEmpty \nIsEmpty \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Item \nItem \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Tree \nTree \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ComparerUntyped \nComparerUntyped \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Count \nCount \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Create \nCreate \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Empty \nEmpty \nMap\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FromList \nFromList"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#( .ctor )","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.( .ctor )","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Add","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Add","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Add \nAdd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#ComputeHashCode","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ComputeHashCode","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ComputeHashCode \nComputeHashCode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#ContainsKey","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ContainsKey","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ContainsKey \nContainsKey \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Exists","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Exists","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Exists \nExists \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Filter","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Filter","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Filter \nFilter \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#First","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.First","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.First \nFirst \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Fold","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Fold","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Fold \nFold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#FoldAndMap","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FoldAndMap","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FoldAndMap \nFoldAndMap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#FoldSection","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FoldSection","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FoldSection \nFoldSection \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#ForAll","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ForAll","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ForAll \nForAll \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Iterate","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Iterate","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Iterate \nIterate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Map","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Map","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Map \nMap \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#MapRange","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.MapRange","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.MapRange \nMapRange \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Partition","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Partition","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Partition \nPartition \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Remove","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Remove","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Remove \nRemove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#ToArray","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ToArray","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ToArray \nToArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#ToList","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ToList","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ToList \nToList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#TryFind","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.TryFind","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.TryFind \nTryFind \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Comparer","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Comparer","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Comparer \nComparer \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#IsEmpty","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.IsEmpty","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Item","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Item","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Item \nItem \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Tree","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Tree","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Tree \nTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#ComparerUntyped","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ComparerUntyped","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.ComparerUntyped \nComparerUntyped \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Count","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Count","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Count \nCount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Create","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Create","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Create \nCreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#Empty","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Empty","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.Empty \nEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-3.html#FromList","title":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FromList","content":"Map\u003C\u0027Key, \u0027T, \u0027ComparerTag\u003E.FromList \nFromList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-2.html","title":"Map\u003C\u0027Key, \u0027T\u003E","content":"Map\u003C\u0027Key, \u0027T\u003E \n \nMap\u003C\u0027Key, \u0027T\u003E.Comparer \nComparer \nMap\u003C\u0027Key, \u0027T\u003E.IsEmpty \nIsEmpty \nMap\u003C\u0027Key, \u0027T\u003E.Item \nItem \nMap\u003C\u0027Key, \u0027T\u003E.Tree \nTree \nMap\u003C\u0027Key, \u0027T\u003E.ComparerUntyped \nComparerUntyped \nMap\u003C\u0027Key, \u0027T\u003E.Count \nCount"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-2.html#Comparer","title":"Map\u003C\u0027Key, \u0027T\u003E.Comparer","content":"Map\u003C\u0027Key, \u0027T\u003E.Comparer \nComparer \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-2.html#IsEmpty","title":"Map\u003C\u0027Key, \u0027T\u003E.IsEmpty","content":"Map\u003C\u0027Key, \u0027T\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-2.html#Item","title":"Map\u003C\u0027Key, \u0027T\u003E.Item","content":"Map\u003C\u0027Key, \u0027T\u003E.Item \nItem \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-2.html#Tree","title":"Map\u003C\u0027Key, \u0027T\u003E.Tree","content":"Map\u003C\u0027Key, \u0027T\u003E.Tree \nTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-2.html#ComparerUntyped","title":"Map\u003C\u0027Key, \u0027T\u003E.ComparerUntyped","content":"Map\u003C\u0027Key, \u0027T\u003E.ComparerUntyped \nComparerUntyped \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-map-2.html#Count","title":"Map\u003C\u0027Key, \u0027T\u003E.Count","content":"Map\u003C\u0027Key, \u0027T\u003E.Count \nCount \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree-2.html","title":"MapTree\u003C\u0027Key, \u0027T\u003E","content":"MapTree\u003C\u0027Key, \u0027T\u003E \n \nMapTree\u003C\u0027Key, \u0027T\u003E.MapEmpty \nMapEmpty \nMapTree\u003C\u0027Key, \u0027T\u003E.MapNode \nMapNode"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree-2.html#MapEmpty","title":"MapTree\u003C\u0027Key, \u0027T\u003E.MapEmpty","content":"MapTree\u003C\u0027Key, \u0027T\u003E.MapEmpty \nMapEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-maptree-2.html#MapNode","title":"MapTree\u003C\u0027Key, \u0027T\u003E.MapNode","content":"MapTree\u003C\u0027Key, \u0027T\u003E.MapNode \nMapNode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E \n \nSet\u003C\u0027T, \u0027ComparerTag\u003E.( .ctor ) \n( .ctor ) \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Add \nAdd \nSet\u003C\u0027T, \u0027ComparerTag\u003E.ComputeHashCode \nComputeHashCode \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Contains \nContains \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Exists \nExists \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Filter \nFilter \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Fold \nFold \nSet\u003C\u0027T, \u0027ComparerTag\u003E.ForAll \nForAll \nSet\u003C\u0027T, \u0027ComparerTag\u003E.IsSubsetOf \nIsSubsetOf \nSet\u003C\u0027T, \u0027ComparerTag\u003E.IsSupersetOf \nIsSupersetOf \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Iterate \nIterate \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Partition \nPartition \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Remove \nRemove \nSet\u003C\u0027T, \u0027ComparerTag\u003E.ToArray \nToArray \nSet\u003C\u0027T, \u0027ComparerTag\u003E.ToList \nToList \nSet\u003C\u0027T, \u0027ComparerTag\u003E.MinimumElement \nMinimumElement \nSet\u003C\u0027T, \u0027ComparerTag\u003E.IsEmpty \nIsEmpty \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Tree \nTree \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Comparer \nComparer \nSet\u003C\u0027T, \u0027ComparerTag\u003E.MaximumElement \nMaximumElement \nSet\u003C\u0027T, \u0027ComparerTag\u003E.ComparerUntyped \nComparerUntyped \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Choose \nChoose \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Compare \nCompare \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Create \nCreate \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Difference \nDifference \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Empty \nEmpty \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Equality \nEquality \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Intersection \nIntersection \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Singleton \nSingleton \nSet\u003C\u0027T, \u0027ComparerTag\u003E.Union \nUnion \nSet\u003C\u0027T, \u0027ComparerTag\u003E.( \u002B ) \n( \u002B ) \nSet\u003C\u0027T, \u0027ComparerTag\u003E.( - ) \n( - )"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#( .ctor )","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.( .ctor )","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Add","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Add","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Add \nAdd \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#ComputeHashCode","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ComputeHashCode","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ComputeHashCode \nComputeHashCode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Contains","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Contains","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Contains \nContains \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Exists","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Exists","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Exists \nExists \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Filter","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Filter","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Filter \nFilter \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Fold","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Fold","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Fold \nFold \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#ForAll","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ForAll","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ForAll \nForAll \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#IsSubsetOf","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.IsSubsetOf","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.IsSubsetOf \nIsSubsetOf \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#IsSupersetOf","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.IsSupersetOf","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.IsSupersetOf \nIsSupersetOf \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Iterate","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Iterate","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Iterate \nIterate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Partition","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Partition","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Partition \nPartition \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Remove","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Remove","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Remove \nRemove \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#ToArray","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ToArray","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ToArray \nToArray \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#ToList","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ToList","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ToList \nToList \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#MinimumElement","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.MinimumElement","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.MinimumElement \nMinimumElement \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#IsEmpty","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.IsEmpty","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Tree","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Tree","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Tree \nTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Comparer","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Comparer","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Comparer \nComparer \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#MaximumElement","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.MaximumElement","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.MaximumElement \nMaximumElement \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#ComparerUntyped","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ComparerUntyped","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.ComparerUntyped \nComparerUntyped \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Choose","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Choose","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Choose \nChoose \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Compare","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Compare","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Compare \nCompare \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Create","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Create","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Create \nCreate \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Difference","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Difference","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Difference \nDifference \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Empty","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Empty","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Empty \nEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Equality","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Equality","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Equality \nEquality \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Intersection","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Intersection","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Intersection \nIntersection \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Singleton","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Singleton","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Singleton \nSingleton \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#Union","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Union","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.Union \nUnion \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#( \u002B )","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.( \u002B )","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.( \u002B ) \n( \u002B ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-2.html#( - )","title":"Set\u003C\u0027T, \u0027ComparerTag\u003E.( - )","content":"Set\u003C\u0027T, \u0027ComparerTag\u003E.( - ) \n( - ) \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html","title":"Set\u003C\u0027T\u003E","content":"Set\u003C\u0027T\u003E \n \nSet\u003C\u0027T\u003E.MinimumElement \nMinimumElement \nSet\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nSet\u003C\u0027T\u003E.Tree \nTree \nSet\u003C\u0027T\u003E.Comparer \nComparer \nSet\u003C\u0027T\u003E.MaximumElement \nMaximumElement \nSet\u003C\u0027T\u003E.ComparerUntyped \nComparerUntyped \nSet\u003C\u0027T\u003E.Choose \nChoose"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html#MinimumElement","title":"Set\u003C\u0027T\u003E.MinimumElement","content":"Set\u003C\u0027T\u003E.MinimumElement \nMinimumElement \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html#IsEmpty","title":"Set\u003C\u0027T\u003E.IsEmpty","content":"Set\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html#Tree","title":"Set\u003C\u0027T\u003E.Tree","content":"Set\u003C\u0027T\u003E.Tree \nTree \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html#Comparer","title":"Set\u003C\u0027T\u003E.Comparer","content":"Set\u003C\u0027T\u003E.Comparer \nComparer \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html#MaximumElement","title":"Set\u003C\u0027T\u003E.MaximumElement","content":"Set\u003C\u0027T\u003E.MaximumElement \nMaximumElement \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html#ComparerUntyped","title":"Set\u003C\u0027T\u003E.ComparerUntyped","content":"Set\u003C\u0027T\u003E.ComparerUntyped \nComparerUntyped \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-set-1.html#Choose","title":"Set\u003C\u0027T\u003E.Choose","content":"Set\u003C\u0027T\u003E.Choose \nChoose \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree-1.html","title":"SetTree\u003C\u0027T\u003E","content":"SetTree\u003C\u0027T\u003E \n \nSetTree\u003C\u0027T\u003E.SetEmpty \nSetEmpty \nSetTree\u003C\u0027T\u003E.SetNode \nSetNode"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree-1.html#SetEmpty","title":"SetTree\u003C\u0027T\u003E.SetEmpty","content":"SetTree\u003C\u0027T\u003E.SetEmpty \nSetEmpty \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/reference/fsharpx-collections-tagged-settree-1.html#SetNode","title":"SetTree\u003C\u0027T\u003E.SetNode","content":"SetTree\u003C\u0027T\u003E.SetNode \nSetNode \n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/PersistentVector.html","title":"PersistentVector\n","content":"(**\n---\ncategory: Collections\ncategoryindex: 1\nindex: 1\n---\n*)\n\n(*** hide ***)\n#r \u0022../src/FSharpx.Collections/bin/Debug/netstandard2.0/FSharpx.Collections.dll\u0022\nopen System\n\n(**\n# PersistentVector\n\nA Vector is a collection of values indexed by contiguous integers. Vectors support access to items by index in log32N hops. count is O(1). conj puts the item at the end of the vector.\nMore details can be found in the [API docs](reference/fsharpx-collections-persistentvector-1.html).\n*)\n\nopen FSharpx.Collections\n\n// Create a new PersistentVector and add some items to it\nlet v = \n    PersistentVector.empty \n    |\u003E PersistentVector.conj \u0022hello\u0022\n    |\u003E PersistentVector.conj \u0022world\u0022\n    |\u003E PersistentVector.conj \u0022!\u0022\n(*** include-value: v ***)\n\n// lookup some items\nPersistentVector.nth 0 v\n(*** include-it ***)\n\nPersistentVector.nth 1 v\n(*** include-it ***)\n\nv.[2]\n(*** include-it ***)\n\n// Check no. of elements in the PersistentVector\nPersistentVector.length v\n(*** include-it ***)\n\n(**\nPersistentVectors are immutable and therefor allow to create new version without destruction of the old ones.\n*)\n\nlet v\u0027 = \n    v\n    |\u003E PersistentVector.conj \u0022!!!\u0022 \n    |\u003E PersistentVector.update 0 \u0022hi\u0022 // replace existing value\n\nPersistentVector.nth 0 v\u0027\n(*** include-it ***)\n\nPersistentVector.nth 3 v\u0027\n(*** include-it ***)\n\nPersistentVector.nth 0 v\n(*** include-it ***)\n\nPersistentVector.length v\n(*** include-it ***)\n\nPersistentVector.length v\u0027\n(*** include-it ***)\n\n// remove the last element from a PersistentVector\nlet v\u0027\u0027 = PersistentVector.initial v\u0027\n\nPersistentVector.length v\u0027\u0027\n(*** include-it ***)\n\n\n(** \nThere a couple of interesting operations on PersistentVectors:\n*)\n\n// Convert a sequence of values to a PersistentVectors\nlet intVector = \n    PersistentVector.ofSeq [1..10]\n(*** include-value: intVector ***)\n\n// Square all values in a PersistentVector\nlet intVector\u0027 = \n    PersistentVector.map (fun x -\u003E x * x) intVector\nintVector\u0027.[3]\n(*** include-it ***)\n\n(**\n## Using from C#\n\nA Vector is a collection of values indexed by contiguous integers. Vectors support access to items by index in log32N hops. Count is O(1). Conj puts the item at the end of the vector.\n\n    [lang=csharp,file=csharp/PersistentVector.cs,key=create-vector]\n\nPersistentVectors are immutable and therefor allow to create new version without destruction of the old ones.\n\n    [lang=csharp,file=csharp/PersistentVector.cs,key=modify-vector]\n\n*)\n\n(*** hide ***)\n\n/// Stops the runtime for a given function\nlet stopTime f = \n    let sw = new System.Diagnostics.Stopwatch()\n    sw.Start()\n    let result = f()\n    sw.Stop()\n    result,float sw.ElapsedMilliseconds\n\n/// Stops the average runtime for a given function and applies it the given count\nlet stopAverageTime count f = \n    System.GC.Collect() // force garbage collector before testing\n    let sw = new System.Diagnostics.Stopwatch()\n    sw.Start()\n    for _ in 1..count do\n        f() |\u003E ignore\n\n    sw.Stop()\n    float sw.ElapsedMilliseconds / float count\n\nlet printInFsiTags s = printfn \u0022 [fsi:%s]\u0022 s\n\n/// Stops the average runtime for a given function and applies it the given count\n/// Afterwards it reports it with the given description\nlet averageTime count desc f =\n    let time = stopAverageTime count f\n    sprintf \u0022%s %Ams\u0022 desc time |\u003E printInFsiTags\n\n(**\n## Performance Tests\n\nBulk operations on PersistentVector use an internal TransientVector in order to get much better performance. The following scripts shows this:\n*)\n\nopen FSharpx.Collections\n\nlet trials = 5\nlet r = new System.Random()\n\nlet initArrayAndVectorFromList n =\n    sprintf \u0022Init with n = %d\u0022 n |\u003E printInFsiTags\n    let list = [for i in 1..n -\u003E r.Next()]\n\n    let initvector list = \n        let v = ref PersistentVector.empty\n        for x in list do\n            v := PersistentVector.conj x !v\n        !v\n\n    averageTime trials \u0022  Array.ofSeq\u0022 \n        (fun () -\u003E Array.ofSeq list)\n\n    averageTime trials \u0022  Multiple PersistentVector.conj\u0022 \n        (fun () -\u003E initvector list)\n\n    averageTime trials \u0022  PersistentVector.ofSeq\u0022 \n        (fun () -\u003E PersistentVector.ofSeq list)\n\nlet lookupInArrayAndVector n count =\n    sprintf \u0022%d Lookups in size n = %d\u0022 count n |\u003E printInFsiTags\n    let list = [for i in 1..n -\u003E r.Next()]\n    let array = Array.ofSeq list\n    let vector = PersistentVector.ofSeq list\n\n    averageTime trials \u0022  Array\u0022 \n        (fun () -\u003E for i in 1..count do array.[r.Next n])\n\n    averageTime trials \u0022  PersistentVector\u0022 \n        (fun () -\u003E for i in 1..count do PersistentVector.nth (r.Next n) vector)\n\n\nlet replaceInArrayAndVector n count =\n    sprintf \u0022%d writes in size n = %d\u0022 count n |\u003E printInFsiTags\n    let list = [for i in 1..n -\u003E r.Next()]\n    let array = Array.ofSeq list\n    let vector = PersistentVector.ofSeq list\n\n    averageTime trials \u0022  Array\u0022 \n        (fun () -\u003E for i in 1..count do array.[r.Next n] \u003C- r.Next())\n\n    averageTime trials \u0022  PersistentVector\u0022 \n        (fun () -\u003E for i in 1..count do PersistentVector.update (r.Next n) (r.Next()) vector)\n\ninitArrayAndVectorFromList 10000\ninitArrayAndVectorFromList 100000\ninitArrayAndVectorFromList 1000000\n(*** include-output ***)\n\nlookupInArrayAndVector 10000 10000\nlookupInArrayAndVector 100000 10000\nlookupInArrayAndVector 1000000 10000\n(*** include-output ***)\n\nreplaceInArrayAndVector 10000 10000\nreplaceInArrayAndVector 100000 10000\nreplaceInArrayAndVector 1000000 10000\n(*** include-output ***)"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/index.html","title":"FSharpx.Collections\n","content":"# FSharpx.Collections\n\n**FSharpx.Collections** is a collection of datastructures for use with F# and C#. \n\nPlease contribute to this project. Don\u0027t ask for permission, just fork the repository and send pull requests.\n\nPlease also join the [F# Open Source Group](http://fsharp.github.com)\n\n\u003Cdiv class=\u0022row\u0022\u003E\n  \u003Cdiv class=\u0022col-sm-2\u0022\u003E\u003C/div\u003E\n  \u003Cdiv class=\u0022col-sm-8\u0022\u003E\n    \u003Cdiv class=\u0022card card-body p-3\u0022 id=\u0022nuget\u0022\u003E\n      \u003Cp class=\u0022mb-0\u0022\u003EThe F# DataFrame library can be \u003Ca href=\u0022https://nuget.org/packages/FSharpx.Collections\u0022\u003Einstalled from NuGet:\u003C/a\u003E\u003C/p\u003E\n      \u003Cpre\u003EPM\u003E Install-Package FSharpx.Collections\u003C/pre\u003E\n    \u003C/div\u003E\n  \u003C/div\u003E\n  \u003Cdiv class=\u0022col-sm-2\u0022\u003E\u003C/div\u003E\n\u003C/div\u003E\n\n## Contributing and copyright\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests. If you\u0027re adding new public API, please also \nconsider adding [samples][content] that can be turned into a documentation. You might\nalso want to read [library design notes][readme] to understand how it works.\n\nThe library is available under Public Domain license, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [content]: https://github.com/fsprojects/FSharpx.Collections/tree/master/docs/content\n  [gh]: https://github.com/fsprojects/FSharpx.Collections\n  [issues]: https://github.com/fsprojects/FSharpx.Collections/issues\n  [readme]: https://github.com/fsprojects/FSharpx.Collections/blob/master/README.md\n  [license]: https://github.com/fsprojects/FSharpx.Collections/blob/master/LICENSE.txt\n"},{"uri":"http://fsprojects.github.io/FSharpx.Collections/PersistentHashMap.html","title":"PersistentHashMap\n","content":"(**\n---\ncategory: Collections\ncategoryindex: 1\nindex: 2\n---\n*)\n\n(*** hide ***)\n#r \u0022../src/FSharpx.Collections/bin/Debug/netstandard2.0/FSharpx.Collections.dll\u0022\nopen System\n\n(**\n# PersistentHashMap\n\nA Map is a collection that maps keys to values. Hash maps require keys that correctly support GetHashCode and Equals. Hash maps provide fast access (log32N hops). count is O(1).\nMore details can be found in the [API docs](reference/fsharpx-collections-persistenthashmap-2.html).\n*)\n\nopen FSharpx.Collections\n\n// Create a new HashMap and add some items to it\nlet m = \n    PersistentHashMap.empty \n    |\u003E PersistentHashMap.add 42 \u0022hello\u0022\n    |\u003E PersistentHashMap.add 99 \u0022world\u0022\n(*** include-value: m ***)\n\n// lookup some items\nPersistentHashMap.find 42 m\n(*** include-it ***)\n\nPersistentHashMap.find 99 m\n(*** include-it ***)\n\nm.[99]\n(*** include-it ***)\n\n// Check no. of elements in the HashMap\nPersistentHashMap.length m\n(*** include-it ***)\n\n\n(**\nPersistentHashMaps are immutable and therefor allow to create new version without destruction of the old ones.\n*)\n\nlet m\u0027 = \n    m \n    |\u003E PersistentHashMap.add 104 \u0022!\u0022 \n    |\u003E PersistentHashMap.add 42 \u0022hi\u0022 // replace existing value\n\nPersistentHashMap.find 42 m\u0027\n(*** include-it ***)\n\nPersistentHashMap.find 104 m\u0027\n(*** include-it ***)\n\nPersistentHashMap.find 42 m\n(*** include-it ***)\n\nPersistentHashMap.length m\n(*** include-it ***)\n\nPersistentHashMap.length m\u0027\n(*** include-it ***)\n\n// remove an element\nlet m\u0027\u0027 = \n    m\u0027 |\u003E PersistentHashMap.remove 104\n\nPersistentHashMap.length m\u0027\u0027\n(*** include-it ***)\n\n(** \nThere a couple of interesting operations on HashMaps:\n*)\n\n// Convert a sequence of key value pairs to a HashMap\nlet stringBasedMap = \n    PersistentHashMap.ofSeq [(\u0022a\u0022,1); (\u0022b\u0022,2); (\u0022c\u0022,3); (\u0022d\u0022,4); (\u0022e\u0022,5)]\n(*** include-value: stringBasedMap ***)\n\n\n// Square all values in a HashMap\nlet stringBasedMap\u0027 = \n    PersistentHashMap.map (fun x -\u003E x * x) stringBasedMap\nstringBasedMap\u0027.[\u0022d\u0022]\n(*** include-it ***)\n\n\n(**\n## Using from C#\n\nA Map is a collection that maps keys to values. Hash maps require keys that correctly support GetHashCode and Equals. Hash maps provide fast access (log32N hops). Count is O(1).\n\n    [lang=csharp,file=csharp/PersistentHashMap.cs,key=create-hashmap]\n\nPersistentHashMaps are immutable and therefor allow to create new version without destruction of the old ones.\n\n    [lang=csharp,file=csharp/PersistentHashMap.cs,key=modify-hashmap]\n\n*)\n\n\n(*** hide ***)\n#r \u0022../../packages/System.Collections.Immutable.1.5.0/lib/netstandard2.0/System.Collections.Immutable.dll\u0022\nopen System\n\n/// Stops the runtime for a given function\nlet stopTime f = \n    let sw = Diagnostics.Stopwatch()\n    sw.Start()\n    let result = f()\n    sw.Stop()\n    result,float sw.ElapsedMilliseconds\n\n/// Stops the average runtime for a given function and applies it the given count\nlet stopAverageTime count f = \n    System.GC.Collect() // force garbage collector before testing\n    let sw = Diagnostics.Stopwatch()\n    sw.Start()\n    for _ in 1..count do\n        f() |\u003E ignore\n\n    sw.Stop()\n    float sw.ElapsedMilliseconds / float count\n\nlet printInFsiTags s = printfn \u0022 [fsi:%s]\u0022 s\n\n/// Stops the average runtime for a given function and applies it the given count\n/// Afterwards it reports it with the given description\nlet averageTime count desc f =\n    let time = stopAverageTime count f\n    sprintf \u0022%s %Ams\u0022 desc time |\u003E printInFsiTags\n(**\n## Performance Tests\n\nBulk operations on HashMaps use an internal TransientHashMap in order to get much better performance. The following scripts shows this:\n*)\n\nopen FSharpx.Collections\n\nlet trials = 5\nlet r = new System.Random()\n\nlet initFSharpMapAndPersistentMapFromList n =\n    sprintf \u0022Init with n = %d\u0022 n |\u003E printInFsiTags\n    \n    let list = List.sortBy snd [for i in 1..n -\u003E i,r.Next().ToString()]\n\n    averageTime trials \u0022  FSharp.Map.ofSeq\u0022 \n        (fun () -\u003E Map.ofSeq list)\n\n    let initPersistentHashMap list = \n        let m = ref PersistentHashMap.empty\n        for (key,value) in list do\n            m := PersistentHashMap.add key value !m\n        !m\n\n    averageTime trials \u0022  Multiple PersistentHashMap.add\u0022 \n        (fun () -\u003E initPersistentHashMap list)\n\n    averageTime trials \u0022  PersistentHashMap.ofSeq\u0022 \n        (fun () -\u003E PersistentHashMap.ofSeq list)\n\n    let initImmutableDictionary list = \n        let d = ref (System.Collections.Immutable.ImmutableDictionary\u003Cint,string\u003E.Empty)\n        for (key,value) in list do\n            d := (!d).Add(key,value)\n        !d\n\n    averageTime trials \u0022  Multiple ImmutableDictionay.add\u0022 \n        (fun () -\u003E initImmutableDictionary list)\n\n    let initImmutableDictionary list = \n        let d = ref (System.Collections.Immutable.ImmutableSortedDictionary\u003Cint,string\u003E.Empty)\n        for (key,value) in list do\n            d := (!d).Add(key,value)\n        !d\n\n    averageTime trials \u0022  Multiple ImmutableSortedDictionay.add\u0022 \n        (fun () -\u003E initImmutableDictionary list)\n\nlet lookupInFSharpMapAndPersistentMap n count =\n    sprintf \u0022%d Lookups in size n = %d\u0022 count n |\u003E printInFsiTags\n    let list = [for i in 0..n-1 -\u003E i.ToString(),r.Next()]\n    let fsharpMap = Map.ofSeq list\n    let map = PersistentHashMap.ofSeq list\n\n    averageTime trials \u0022  FSharp.Map\u0022 \n        (fun () -\u003E for i in 1..count do fsharpMap.[r.Next(n).ToString()])\n\n    averageTime trials \u0022  PersistentHashMap\u0022 \n        (fun () -\u003E for i in 1..count do map.[r.Next(n).ToString()])\n\n    let dict =\n        let d = ref (System.Collections.Immutable.ImmutableDictionary\u003Cstring,int\u003E.Empty)\n        for (key,value) in list do\n            d := (!d).Add(key,value)\n        !d\n\n    averageTime trials \u0022  ImmutableDictionay\u0022 \n        (fun () -\u003E for i in 1..count do dict.[r.Next(n).ToString()])\n\n    let dict\u0027 =\n        let d = ref (System.Collections.Immutable.ImmutableSortedDictionary\u003Cstring,int\u003E.Empty)\n        for (key,value) in list do\n            d := (!d).Add(key,value)\n        !d\n\n    averageTime trials \u0022  ImmutableSortedDictionay\u0022 \n        (fun () -\u003E for i in 1..count do dict\u0027.[r.Next(n).ToString()])\n\ninitFSharpMapAndPersistentMapFromList 10000\ninitFSharpMapAndPersistentMapFromList 100000\ninitFSharpMapAndPersistentMapFromList 1000000\n(*** include-output ***)\n\n\nlookupInFSharpMapAndPersistentMap 10000 10000\nlookupInFSharpMapAndPersistentMap 100000 10000\nlookupInFSharpMapAndPersistentMap 1000000 10000\n(*** include-output ***)"}]